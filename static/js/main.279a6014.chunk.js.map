{"version":3,"sources":["lib/min2phase/min2phase.js","lib/Hooks.tsx","worker/index.ts","lib/Defs.tsx","lib/Math.ts","lib/three/OrbitControls.js","components/CubeSim.tsx","lib/CubeLib.tsx","components/SelectorViews.tsx","components/Input.tsx","components/CaseVisualizer.tsx","components/Dialog.tsx","theme.js","components/CaseSelectView.tsx","lib/Algs.tsx","components/CmllTrainerView.tsx","components/ScrambleInputView.tsx","components/Tooltip.tsx","components/BlockTrainerView.tsx","components/PanoramaView.tsx","lib/Pruner.tsx","lib/min2phase/min2phase-wrapper.ts","lib/Solver.tsx","lib/CachedSolver.tsx","components/FavListView.tsx","components/TopBarView.tsx","lib/Evaluator.tsx","lib/Analyzer.ts","components/AnalyzerView.tsx","components/AppView.tsx","Version.tsx","lib/Selector.tsx","Config.tsx","lib/LocalStorage.tsx","reducers/AbstractStateM.tsx","reducers/BlockTrainerStateM.tsx","reducers/SsStateM.tsx","reducers/LSETrainerStateM.tsx","reducers/CmllStateM.tsx","reducers/StateFactory.tsx","KeyMapping.tsx","reducers/InitialState.tsx","reducers/Reducer.tsx","app/App.tsx","serviceWorker.js","index.tsx"],"names":["createArray","length","arr","Array","i","bitCount","get8Parity","idx","p","get12Parity","binarySearch","key","l","r","mid","val","fact","perm3","ud2std","std2ud","Cnk","length1","length2","j","createArrays","move2str","urfMove","ckmv","ckmv2","CubieCube","this","cp","co","ep","eo","getFlip","getFlipSym","FlipR2S","k","EdgeConjugate","SymInv","temps","FlipS2R","setFlip","bitOdd","getTwist","getTwistSym","TwistR2S","CornConjugate","TwistS2R","setTwist","twst","getUDSlice","setUDSlice","getMPerm","m","t","setMPerm","getMid3","idxA","idxB","mask","setMid3","edge","getURtoUL","getDRtoDL","setEdgePerm","getEdgePerm","getCPermSym","EPermR2S","get8Perm","e2c","CPermS2R","getEPermSym","EPermS2R","URFConjugate","CornMult","urf2","urf1","EdgeMult","invCubieCube","corn","ori","copy","init","cperm","twist","eperm","flip","set8Perm","c","cctemp","v","a","b","prod","oriA","oriB","ed","CubeSym","moveCube","SymMult","SymMove","Sym8Mult","Sym8Move","Sym8MultInv","SymMoveUD","MtoEPerm","merge","UDSliceMove","TwistMove","FlipMove","UDSliceConj","UDSliceTwistPrun","UDSliceFlipPrun","TwistFlipPrun","Mid3Move","Mid32MPerm","CParity","CPermMove","EPermMove","MPermMove","MPermConj","MCPermPrun","MEPermPrun","urfidx","move","csym","mid3","e1","e2","tsym","fsym","slice","corn0","csym0","mid30","e10","e20","prun","maxlength2","sol","valid1","valid2","solution","phase1","maxl","lm","Math","min","cornx","ex","get4Parity","esym","max","phase2","sb","urf","s","init2","slicex","twistx","tsymx","flipx","fsymx","depth","midx","edgex","esymx","csymx","initialized","initialize","mc","temp","d","f2","u4","lr2","found","occ","count","CubieInit","SymState","SymStateF","inv","select","check","done","sym","symF","fsymxx","idxx","symx","CoordInit","module","exports","solve","cc","Solve","randomCube","random","useAnalyzer","analyzerState","useState","isRunning","solutions","undefined","data","setData","workerApiAndCleanup","useMemo","worker","Worker","name","type","workerApi","wrap","cleanup","releaseProxy","terminate","makeWorkerApiAndCleanup","useEffect","useWorker","scramble","analyze","then","Face","Typ","U","D","F","B","L","R","C","E","T","corners_coord","edges_coord","centers_coord","cstimer_corners_coord","cstimer_edges_coord","u","cpc","coc","epc","eoc","tpc","f","e","u_face","f_face","FBpairPosBackFS","FBpairPosFrontFS","color_map","rand_int","floor","rand_incl","rand_choice","cartesianProduct","allEntries","reduce","results","entries","map","result","entry","concat","subResults","getParity","perm","visited","fill","follow","cnt","res","arrayEqual","arr1","arr2","OrbitControls","object","domElement","console","warn","document","error","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","listenToKeyEvents","addEventListener","onKeyDown","saveState","scope","reset","updateProjectionMatrix","dispatchEvent","changeEvent","update","state","STATE","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","ownerDocument","onPointerMove","onPointerUp","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","x","y","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","subVectors","handleTouchMovePan","handleTouchMoveDolly","pointerType","mouseAction","preventDefault","focus","window","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","onMouseUp","stopPropagation","handleMouseWheel","needsUpdate","keyCode","handleKeyDown","handleTouchStartDollyPan","DOLLY_ROTATE","handleTouchStartDollyRotate","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","prototype","Object","create","EventDispatcher","constructor","MapControls","call","CameraState","THREE","TAU","axesInfo","roundedFace","rounded","cornerRadius","geo","cornerVertices","cornerCenter","squareCorner","degree","push","cos","sin","vertices","applyAxisAngle","faces","i1","setFromPoints","redraw_cube","cube","config","width","height","colorScheme","mode","theme","hintDistance","enableControl","bgColor","facesToReveal","scene","camera","renderer","antialias","setSize","setClearColor","setPixelRatio","devicePixelRatio","controls","stickers_tmpl","stickerwrap_tmpl","angleScale","cstate","upVecLookingDownUB","upVecLookingDownUBL","upVecDefault","HOME","PEEK_DFL","PEEK_DFR","PEEK_UFL","PEEK_UBL","getCameraPosFromState","cameraState","cameraPositionRaw","cameraUp","cameraPosition","aspect","geos","geo_border","materials_border","color","side","mesh","setRotationFromEuler","sticker_scale","hint_scale","rounded_patterns","drawCube","materials","_","mat","alphaTest","pattern","flat","hint_mesh","chroma","hex","cubie","rot","makeRotationFromEuler","rot1","setRotationFromMatrix","multiply","z","sticker","stickerwrap","indexOf","stickerhint","cubeG","render","frameID","animate","requestAnimationFrame","updateCubeAndColor","remove","clear","getRenderer","cleanupFunc","forEach","g","cancelAnimationFrame","renderControls","config_cache","painter","CubeSim","props","mount","React","useRef","setCameraState","cubePainter","useMediaQuery","useTheme","breakpoints","dom","downHandler","PEEK_UBR","upHandler","current","appendChild","removeChild","ref","style","zIndex","value","tp","Id","obj","JSON","parse","stringify","o","oc","pc","mod","o_new","p_new","src","dst","_apply_partial","_apply_partial_perm","isArray","MoveSeq","moves","apply_one","apply","facelet_mapping","pos","piece","_rotate_coord","fm","custom_corners_coord","custom_edges_coord","custom_centers_coord","match_pos_piece","coord","parity","expected","Map","toString","has","_backward_rotate_coord","get","coord_pair","newOri","newpos","newPerm","_to_facelet_mapping","_from_facelet_mapping","perm_correct","ori_correct","transformed_mapping","mapping","face_mapping","fromEntries","face_pos","face_target","join","Function","generate_apply_partial_func","generate_apply_partial_func_perm","fs","last_face","first_face","Move","arg","from_moves","from_cube","get_change","acc_p","acc_o","all","generate_base_moves","make_rot_set","us","rs","ls","ds","bs","ms","es","ss","rws","lws","uws","fws","xs","ys","zs","moves_dict","nm","quarterMap","rotset","Set","shift","str","tokens","token","comment_idx","search","ch","ord","charCodeAt","split","parse_line","newMoves","nextMove","pop","combined","_combine","reverse","n","useMetric","move1","move2","getCnt","getStr","auf_moves","auf_move","FaceletCube","mult_move","face","face_new","work","typ","mod_for_typ","p1","p2","p_curr","o_curr","color_of_c","o1","o2","color_of_e","color_of_t","color_of_sticker","Error","d_face","l_face","r_face","b_face","from_cubie","facelet","X","from_cubie_partial_masked","from_cubie_partial","to_unfolded_cube_str","faceletCube","face_count","str_face_map","color_cube","face_char","hasOwnProperty","lse_mask","CubeUtil","ext","stickers","find_pairs","edge_stickers","filter","corner_stickers","ep_stickers","cp_stickers","epcp_pairs","efs","cfs","match","get_color","connected_pairs","u_premove","m2_premove","oris","get_random_with_mask","cp_rand","ep_rand","par","random_ori","ori_mask","sum","random_perm","perm_mask","undecided","tmp","rand_shuffle","is_cmll_solved","premove","cube1","solved","is_mask_solved2","is_solved","co_","eo_","tp_","every","get_random_lse","is_cube_solved","id","rebase_to_edge","cube_rebased","ColorScheme","suppressLoad","colors","load","newScheme","save","_setDefault","default_colors","valid_schemes_map","localStorage","setItem","serialize","item","getItem","deserialize","valid_schemes","Mask","fs_back_mask","fs_front_mask","fbdr_mask","fb_mask","f2b_mask","sb_mask","cmll_mask","ss_front_mask","ss_back_mask","ssdp_front_mask","ssdp_back_mask","ssdp_both_mask","empty_mask","dl_solved_mask","bl_solved_mask","solved_mask","zhouheng_mask","lse_4c_mask","useStyles","makeStyles","container","paddingTop","spacing","paddingBottom","backgroundColor","palette","background","default","paper","padding","display","overflow","flexDirection","canvasPaper","infoColumn","scrambleColumn","paddingLeft","textColumn","minHeight","fixedHeight","title","flexGrow","text","primary","selectLabel","secondary","LevelSlider","styled","Slider","fontSize","SliderView","slider","classes","marks","label","suffix","extend_l","extend_r","Box","FormLabel","component","className","paddingX","track","onChange","newValue","onFocus","evt","blur","SliderSelect","sliderName","sliderOpt","dispatch","content","SingleSelect","sel","radioValue","names","flags","RadioGroup","new_flags","setFlags","row","FormControlLabel","control","Radio","labelPlacement","MultiSelectContent","options","handleChange","checked","manipChecked","setManipChecked","manipulator_row","manipulators","FormGroup","manip","enableIdx","Checkbox","fillValue","makeManipulator","Fragment","makeBox","MultiSelect","open","setOpen","handleClose","noDialog","FormControl","Button","variant","borderWidth","onClick","marginLeft","marginRight","Dialog","disableEscapeKeyDown","onClose","DialogTitle","DialogContent","DialogActions","ColorSetter","toUserInput","setText","TextField","helperText","fullWidth","size","ColorPanel","reason","Divider","CaseVisualizer","args","view","algorithm","alg","cubeOptions","SRVisualizer","innerHTML","defaultOptions","components","MuiSlider","styleOverrides","root","createTheme","adaptV4Theme","main","red","A400","disabled","themeDark","overrides","MuiDivider","caseBoxOn","groupBox","Component","CaseSelectDialog","settings","selector","groups","algs","algGroups","prefix","splitAlgIntoGroups","handleSelectGroup","groupname","newFlags","handleSelectAll","gt_sm","marginBottom","ButtonGroup","startIcon","Typography","gutterBottom","toUpperCase","substr","alignItems","flexWrap","caseIdx","border","borderColor","transition","maxWidth","createAlg","kind","setup","empty_alg","cmll_algs_raw","nmcll_to_cmll_mapping","cmll_algs_raw_lookup","nmcll_algs","group_name","cmll_name","nmcll_display_parity","cmll_algs","trigger_algs","u_auf_algs","ori_algs","lookup_algset","alg_generator_from_group","algSet","lookup","getActiveNames","fontWeight","borderBottom","prompt","cmll_name_to_alg","nmcll_display_algs","NMCLLSelect","CmllTrainerView","clsx","_getMask","cmllCubeMaskSelector","getActiveName","hyperori","hyperOriSelector","panel","setReveal","reveal","keyMapping","handle","case","desc","moves_c","collapse","colorSchemeColors","getColorsForOri","Grid","Paper","margin","elevation","lineHeight","whiteSpace","sm","md","setupEdit","down","ScrambleInputView","editing","setEditing","scrambles","setValue","textField","onKeyPress","toggleEdit","marginTop","onKeyUp","inputRef","multiline","maxRows","rows","InputProps","autoFocus","inverted","trim","CustomTooltip","Tooltip","popper","tooltipClasses","tooltip","borderRadius","condGap","fgap","flexShrink","flexBasis","minWidth","sourceIcon","sourceIconWrap","fab","ConfigPanelGroup","LPEdgeManip","BlockTrainerView","fsSelector","startsWith","fbssSsSelector","ssSelector","dpair","ssPairOnlySelector","getMask","spaceButtonText","showMoveCountHint","moveCountHint","algText","minMove","remove_setup","describe_hide","get_algs","describe_reveal","setFav","favSelected","canvas_wh","ADD_STR","levelSelectionSuccess","levelSuccess","scramblePanel","scrambleInput","case_","solver","action","alignSelf","justifyContent","showCube","sx","IconButton","fontFamily","textAlign","gridList","VisualCube","stage","sch","template","alt","PanoramaTable","ImageList","ImageListItem","cols","PanoramaView","PrunerPiece","globalThis","$RefreshReg$","$RefreshSig$","S","I","htm_rwm","rrwmu","rrwmu_m_first","rrwmu_f","rrwmu_b","htm_rwm_uw","htm_rwm_fws","max_depth","fbdrPrunerConfigGen","encode","c1","c2","enc_c","e3","e4","solved_states","moveset","fbdrPrunerConfig","fbAtBLPrunerConfig","esize","csize","enc_e","t1","fbAtBLPrunerConfigGen","fbAtDLPrunerConfig","fbAtDLPrunerConfigGen","fbPrunerConfig","sbPrunerConfig","lpSbSbPrunerConfigGen","lp_front","lpSbDiagPrunerConfigGen","fbssPrunerConfigs","is_front","c3","lsePrunerConfig","edge_encode","enc","edge_enc","eodmPrunerConfig","edge_idx","min2phaseSolve","toMin2Phase","Solver","accum","min_depth","SState","MAX_STATE_COUNT","pruners","state_count","solve_depth","min_depth_","max_depth_","accum_","nextMoves","STOP","CONTINUE","capacity","flag","try_push","query","availableMoves","seen_encodings","pruneSeenEncodings","BigInt","new_cube","st","expand","getAvailableMove","base","generateNextMoveTable","depth_l","depth_r","getPruners","solverFactory","prunerConfig","pruner","CachedPruner","solverFactory2","prunerConfigs","SsSolver","ssPrunerConfig","SsDpSolver","v0","v1","ssDpPrunerConfig","FbssSolver","LpsbSolver","FsSolver","v2","fsPrunerConfig","FsDrSolver","v3","fsDrPrunerConfig","EOLRSolver","center_flag","barbie_mode","moves_ac","moves_mc","barb_moves","eolrPrunerConfig","all_solvers","cache","pcs","dist","moveset_str","level_states","Uint8Array","frontier","new_frontier","newState","rev_lookup_depth","equal","cube2","Pruner","CachedSolver","min2phase_init","assert","transformed_cube","to_cstimer_cube","is_solveable","min2phase_solve","table","FavListView","favList","dialogID","setDialogID","dialogDelete","addDialogOpen","setAddDialogOpen","addString","setAddString","handleAddClose","dialogAdd","DialogContentText","allSolvers","parseAddString","Table","TableHead","TableRow","TableCell","align","rowSpan","TableBody","play","is_bright","page","icon","bar","TopBarView","toggleFav","toggleBright","handleInfoOpen","value_str","tab_modes","is_sm","boxShadow","Toolbar","wordWrap","Select","tab_idx","findIndex","MenuItem","mx","Evaluator","SeqEvaluator","moveCost","moveCost_gen","DPGrip","TwoGramEvaluator","moves_input","score","two_gram","curr_score","Number","parseFloat","meter","isNaN","two_gram_meter","DPEvaluator","evaluate_with_plan","cost","HI","len","DP","DP_path","regripCost","moveTransition","prev_grip","shifted_grip","cur_scheme","cur_grip","DEAD_END","optimal_cost","optimal_ending_grip","grip","current_grip","optimal_plan","previous_grip","previous_shifted_grip","grip_str","current_segment","g1","g2","R_AWAY","R2_AWAY","Rp_AWAY","moveTransition_gen","regripCost_gen","initialState","post_scramble","full_solution","orientation","pre_orientation","num_solution","show_mode","is_fb_solved","changeBasis","get_oris","preori","paper2","title1","configItem","paddingRight","stageText","textTransform","formControl","resetState","postScramble","ScrambleView","setState","inputProps","ConfigView","fb_ori_str","display_mode_str","InputLabel","labelId","FormHelperText","parseInt","SolutionInputView","defaultSolution","stages","current_moves","stage_idx","getMasksForStage","some","analyze_roux_solve","StageSolutionView","tags","Chip","StageSolutionListView","FullSolutionView","setStage","show","setShow","onMouseLeave","onMouseEnter","stageView","AnalyzerView","appState","cubieCube","analyzerData","solutions_to_display","sort","gt_md","TabPanel","children","index","other","role","hidden","_getInitialHashLocation","default_idx","location","hash","Intro","AppView","useCallback","elements","handleInfoClose","showFav","dividers","theme_flag","paddingY","Container","el","version","Selector","annotation","ans","initialFavList","cmll_alg_names","EOLRMode","initialLevels","fbdrLevelSelector","fbssLevelSelector","fsLevelSelector","fbLevelSelector","ssLevelSelector","initialConfig","arr_ori_flag","evaluator","cmllSelector","nmcllSelector","cmllCaseSelector","cmllAufSelector","triggerSelector","orientationSelector","fbBasisSelector","fbdrSelector","fbdrScrambleSelector","fbOnlySelector","fbPairSolvedSelector","fbdrPosSelector1","fbdrPosSelector2","fbdrPosSelector3","ssEOSelector","ssPosSelector","solutionNumSelector","fbPieceSolvedSelector","fbssLpSelector","lseMCSelector","lseBarSelector","lseStageSelector","lseEOSelector","lseEOLRMCSelector","lseBarbieSelector","lseEOLRScrambleSelector","favListManager","getFavList","setFavList","item1","serializeConfig","deserializeConfig","configManager","versionKey","getConfig","vers","item2","setConfig","partial","newConfig","assign","resetConfig","AbstractStateM","StateFactory","BlockTrainerStateM","solverL","solverR","scrambleMargin","scrambleCount","algDescWithMoveCount","expansionFactor","premoves","orientations","levelMaxAttempt","getLevelSelector","getRandomAnyLevel","solvers","ssolver","bound","pm","levelConstraintOkayWithUpperBound","level","checkLevelConstraint","debug","log","failed","solverNames","totalSolutionCap","selectedSolutionCap","solverName","pre","evaluate","algDescs","_solve_with_solvers","updateSolutionOnly","scrambleSolver","solutionLength","algDesc","getRandom","inputScramble","_solve","state1","_updateCase","movestr","conf","_updateCap","FbdrStateM","edgePositionMap","allowed_pedge","allowed_dr","dr_ep","dr_eo","find","_edge_piece_in_pattern","fbOnly","pairSolved","active","_get_pair_solved_front","_get_random_fs_back","_get_pair_solved_back","_get_random_fs_front","FbStateM","is_l_only","centers","includes","basis","hard_str","g_hard_str","pairs","cc_edges","_find_center_connected_edges","_get_random","FsStateM","FsDrStateM","FbssStateM","lp_option","ss_option","lp_is_front","randomMask","SsStateM","allowed_dr_eo_ep","ep_","drOPPositionMap","allowed_dr_eo_ep_patterns","_get_random_fb","LSEStateM","bars","lse_premove","lseEODef","lseEODefLookup","def","EOLRStateM","eo_arr","targetEO","eolrMCMode","compare","useBarbie","eodmMode","useFullScramble","_getEOType","acSolver","mcSolver","acLength","mcLength","CmllStateM","m2_away","lse_cube","isHyperOri","isHyperOriFB","generator","activeNames","activeNamesSet","alg_generator_from_cases_contain","alg_generator_from_cases","trig_generator","u_auf_generator","ori_generator","trigger_alg","cmll_alg","u_auf_alg","post_auf_alg","alg_str","_get2PhaseSolution","history","_generateCase","SolvingStateM","SolvedStateM","defaultKeyMapping","lseKeyMapping","DefaultKeyMapping","altKey","LSEKeyMapping","getInitialState","initialStateName","prev","reducer","code","stateM","onControl","onMove","reduceByKey","onConfig","reduceByConfig","ReactGA","pageview","rem","onReplay","reduceByFavlist","body","App","useReducer","appTheme","StyledEngineProvider","injectFirst","ThemeProvider","CssBaseline","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.279a6014.chunk.js","sourcesContent":["/* eslint-disable */\nfunction createArray(length) {\n\tconst arr = Array(length);\n\tfor (var i=0; i<length; i++) {\n\t\tarr[i] = 0;\n\t}\n\treturn arr;\n}\n\nfunction createArrays(length1, length2) {\n\tconst arr = Array(length1);\n\tfor (var i=0; i<length1; i++) {\n\t\tarr[i] = Array(length2);\n\t\tfor (var j=0; j<length2; j++) {\n\t\t\tarr[i][j] = 0;\n\t\t}\n\t}\n\treturn arr;\n}\n\nfunction bitOdd(i) {\n\ti ^= i >>> 1;\n\ti ^= i >>> 2;\n\ti ^= i >>> 4;\n\ti ^= i >>> 8;\n\treturn i & 1;\n}\n\nfunction bitCount(i) {\n\ti = i - ((i >>> 1) & 0x55555555);\n\ti = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n\treturn (i + (i >>> 8) + (i >>> 4)) & 0x0f;\n}\n\nfunction get4Parity(idx) {\n\tvar p = 0;\n\tfor (var i=2; i>=0; i--) {\n\t\tp += idx % (4-i);\n\t\tidx = ~~(idx / (4-i));\n\t}\n\tp &= 1;\n\treturn p;\n}\n\nfunction get8Parity(idx) {\n\tvar p = 0;\n\tfor (var i=6; i>=0; i--) {\n\t\tp += idx % (8-i);\n\t\tidx = ~~(idx / (8-i));\n\t}\n\tp &= 1;\n\treturn p;\n}\n\nfunction get12Parity(idx) {\n\tvar p = 0;\n\tfor (var i=10; i>=0; i--) {\n\t\tp += idx % (12-i);\n\t\tidx = ~~(idx / (12-i));\n\t}\n\tp &= 1;\n\treturn p;\n}\n\n\nfunction binarySearch(arr, key) {\n\tvar length = arr.length;\n\tif (key <= arr[length-1]) {\n\t\tvar l = 0;\n\t\tvar r = length-1;\n\t\twhile (l <= r) {\n\t\t\tvar mid = (l+r)>>>1;\n\t\t\tvar val = arr[mid];\n\t\t\tif (key > val) {\n\t\t\t\tl = mid + 1;\n\t\t\t} else if (key < val) {\n\t\t\t\tr = mid - 1;\n\t\t\t} else {\n\t\t\t\treturn (mid);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0xffff;\n}\n\nvar fact = [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, 479001600];\nvar perm3 = [[11, 10, 9], [10, 11, 9], [11, 9, 10], [9, 11, 10], [10, 9, 11], [9, 10, 11]];\nvar ud2std = [0, 1, 2, 4, 7, 9, 10, 11, 13, 16];\nvar std2ud = createArray(18);\nvar Cnk = createArrays(12, 13);\nvar move2str = [\"U \", \"U2\", \"U'\", \"R \", \"R2\", \"R'\", \"F \", \"F2\", \"F'\", \"D \", \"D2\", \"D'\", \"L \", \"L2\", \"L'\", \"B \", \"B2\", \"B'\"];\nvar urfMove = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15,16,17], \n\t\t\t\t\t\t\t\t\t\t\t[6, 7, 8, 0, 1, 2, 3, 4, 5,15,16,17, 9,10,11,12,13,14],\n\t\t\t\t\t\t\t\t\t\t\t[3, 4, 5, 6, 7, 8, 0, 1, 2,12,13,14,15,16,17, 9,10,11],\n\t\t\t\t\t\t\t\t\t\t\t[2, 1, 0, 5, 4, 3, 8, 7, 6,11,10, 9,14,13,12,17,16,15], \n\t\t\t\t\t\t\t\t\t\t\t[8, 7, 6, 2, 1, 0, 5, 4, 3,17,16,15,11,10, 9,14,13,12],\n\t\t\t\t\t\t\t\t\t\t\t[5, 4, 3, 8, 7, 6, 2, 1, 0,14,13,12,17,16,15,11,10, 9]];\nfor (var i=0; i<12; i++) {\n\tCnk[i][0] = 1;\n\tCnk[i][i] = 1;\n\tCnk[i][i+1] = 0;\n\tfor (var j=1; j<i; j++) {\n\t\tCnk[i][j] = (Cnk[i-1][j-1] + Cnk[i-1][j]);\n\t}\n}\nfor (var i=0; i<10; i++) {\n\tstd2ud[ud2std[i]] = i;\n}\n\nvar ckmv = Array(19);//new boolean[19][18];\nvar ckmv2 = Array(11);//new boolean[11][10];\nckmv[18] = Array(18);\nckmv2[10] = Array(10);\nfor (var i=0; i<18; i++) {\n\tckmv[i] = Array(18);\n\tfor (var j=0; j<18; j++) {\n\t\tckmv[i][j] = (~~(i/3) == ~~(j/3)) || ((~~(i/3)%3 == ~~(j/3)%3) && (i>=j));\n\t}\n\tckmv[18][i] = false;\n}\nfor (var i=0; i<10; i++) {\n\tckmv2[i] = Array(10);\n\tfor (var j=0; j<10; j++) {\n\t\tckmv2[i][j] = ckmv[ud2std[i]][ud2std[j]];\n\t}\n\tckmv2[10][i] = false;\n}\n\n\n//********************************************************************************//\n\nfunction CubieCube() {\n\tthis.cp = [0, 1, 2, 3, 4, 5, 6, 7];\n\tthis.co = [0, 0, 0, 0, 0, 0, 0, 0];\n\tthis.ep = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\tthis.eo = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\tthis.getFlip = function getFlip() {\n\t\tvar idx = 0;\n\t\tfor (var i=0; i<11; i++) {\n\t\t\tidx |= this.eo[i] << i;\n\t\t}\n\t\treturn idx;\n\t}\n\t\n\tthis.getFlipSym = function getFlipSym() {\n\t\tif (FlipR2S != 0) {\n\t\t\treturn FlipR2S[this.getFlip()];\n\t\t}\n\t\tfor (var k=0; k<16; k+=2) {\n\t\t\tEdgeConjugate(this, SymInv[k], temps);\n\t\t\tvar idx = binarySearch(FlipS2R, temps.getFlip());\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 3) | (k >>> 1));\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tthis.setFlip = function setFlip(idx) {\n\t\tthis.eo[11] = bitOdd(idx);\n\t\tfor (var i=0; i<11; i++) {\n\t\t\tthis.eo[i] = idx & 1;\n\t\t\tidx >>>= 1;\n\t\t}\n\t}\n\t\n\tthis.getTwist = function getTwist() {\n\t\tvar idx = 0;\n\t\tfor (var i=0; i<7; i++) {\n\t\t\tidx *= 3;\n\t\t\tidx += this.co[i];\n\t\t}\n\t\treturn idx;\n\t}\n\t\n\tthis.getTwistSym = function getTwistSym() {\n\t\tif (TwistR2S != null) {\n\t\t\treturn TwistR2S[this.getTwist()];\n\t\t}\n\t\tfor (var k=0; k<16; k+=2) {\n\t\t\tCornConjugate(this, SymInv[k], temps);\n\t\t\tlet idx = binarySearch(TwistS2R, temps.getTwist());\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 3) | (k >>> 1));\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\n\tthis.setTwist = function setTwist(idx) {\n\t\tvar twst = 0;\n\t\tfor (var i=6; i>=0; i--) {\n\t\t\ttwst += this.co[i] = idx % 3;\n\t\t\tidx = ~~(idx/3);\n\t\t}\n\t\tthis.co[7] = (15 - twst) % 3;\n\t}\n\t\n\tthis.getUDSlice = function getUDSlice() {\n\t\tvar idx = 0;\n\t\tvar r = 4;\n\t\tfor (var i=0; i<12; i++) {\n\t\t\tif (this.ep[i] >= 8) {\n\t\t\t\tidx += Cnk[11-i][r];\n\t\t\t\tr--;\n\t\t\t}\n\t\t}\n\t\treturn idx;\n\t}\n\n\tthis.setUDSlice = function setUDSlice(idx) {\n\t\tvar r = 4;\n\t\tfor (var i=0; i<12; i++) {\n\t\t\tif (idx >= Cnk[11-i][r]) {\n\t\t\t\tidx -= Cnk[11-i][r];\n\t\t\t\tr--;\n\t\t\t\tthis.ep[i] = (11-r);\n\t\t\t} else {\n\t\t\t\tthis.ep[i] = (i+r-4);\n\t\t\t}\n\t\t}\n\t}\n\tthis.getMPerm = function getMPerm() {\n\t\tvar m = (1 << this.ep[11]);\t\t\n\t\tvar idx = 0;\n\t\tfor (var i=10; i>=8; --i) {\n\t\t\tvar t = 1 << this.ep[i];\n\t\t\tidx += bitCount(m & (t - 1)) * fact[11-i];\n\t\t\tm |= t;\n\t\t}\n\t\treturn idx;\n\t}\t\n\tthis.setMPerm = function setMPerm(idx) {\n\t\tthis.ep[11] = 8;\n\t\tfor (var i=10; i>=8; i--) {\n\t\t\tthis.ep[i] = (idx % (12-i) + 8);\n\t\t\tidx = ~~(idx / (12-i));\n\t\t\tfor (var j=i+1; j<12; j++) {\n\t\t\t\tif (this.ep[j] >= this.ep[i])\n\t\t\t\t\tthis.ep[j]++;\n\t\t\t}\n\t\t}\t\n\t}\n\t\n\tthis.getMid3 = function getMid3() {\n\t\tvar idxA = 0;\n\t\tvar idxB = 0;\n\t\tvar mask = 0;\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (this.ep[i] >= 9) {\n\t\t\t\tidxA += Cnk[i][r--];\n\t\t\t\tvar t = 1 << this.ep[i];\n\t\t\t\tidxB += bitCount(mask & (t - 1)) * fact[2-r];\n\t\t\t\tmask |= t;\n\t\t\t}\n\t\t}\n\t\treturn (idxA * 6 + idxB);\n\t}\n\t\n\tthis.setMid3 = function setMid3(idxA) {\n\t\tvar edge = perm3[idxA % 6];\n\t\tidxA = ~~(idxA / 6);\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (idxA >= Cnk[i][r]) {\n\t\t\t\tidxA -= Cnk[i][r--];\n\t\t\t\tthis.ep[i] = edge[2-r];\n\t\t\t} else {\n\t\t\t\tthis.ep[i] = (8-i+r);\n\t\t\t}\n\t\t}\t\n\t}\n\t\n\tthis.getURtoUL = function getURtoUL() {\n\t\tvar idxA = 0;\n\t\tvar idxB = 0;\n\t\tvar mask = 0;\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (this.ep[i] <= 2) {\n\t\t\t\tidxA += Cnk[i][r--];\n\t\t\t\tvar t = 1 << this.ep[i];\n\t\t\t\tidxB += bitCount(mask & (t - 1)) * fact[2-r];\n\t\t\t\tmask |= t;\n\t\t\t}\n\t\t}\n\t\treturn (idxA * 6 + idxB);\t\n\t}\n\n\tthis.getDRtoDL = function getDRtoDL() {\n\t\tvar idxA = 0;\n\t\tvar idxB = 0;\n\t\tvar mask = 0;\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (4 <= this.ep[i] && this.ep[i] <= 6) {\n\t\t\t\tidxA += Cnk[i][r--];\n\t\t\t\tvar t = 1 << this.ep[i];\n\t\t\t\tidxB += bitCount(mask & (t - 1)) * fact[2-r];\n\t\t\t\tmask |= t;\n\t\t\t}\n\t\t}\n\t\treturn (idxA * 6 + idxB);\t\n\t}\t\n\n\tthis.setEdgePerm = function setEdgePerm(idx) {\n\t\tthis.ep[11] = 0;\n\t\tfor (var i=10; i>=0; i--) {\n\t\t\tthis.ep[i] = (idx % (12-i));\n\t\t\tidx = ~~(idx/(12-i));\n\t\t\tfor (var j=i+1; j<12; j++) {\n\t\t\t\tif (this.ep[j] >= this.ep[i])\n\t\t\t\t\tthis.ep[j]++;\n\t\t\t}\n\t\t}\t\t\t\n\t}\n\t\n\tthis.getEdgePerm = function getEdgePerm() {\n\t\tvar m = (1 << this.ep[11]);\t\t\n\t\tvar idx = 0;\n\t\tfor (var i=10; i>=0; --i) {\n\t\t\tvar t = 1 << this.ep[i];\n\t\t\tidx += bitCount(m & (t - 1)) * fact[11-i];\n\t\t\tm |= t;\n\t\t}\n\t\treturn idx;\t\t\n\t}\n\n\tthis.getCPermSym = function getCPermSym() {\n\t\tif (EPermR2S != null) {\n\t\t\tvar idx = EPermR2S[get8Perm(this.cp)];\n\t\t\tidx ^= e2c[idx&0x0f];\n\t\t\treturn idx;\n\t\t}\n\t\tfor (var k=0; k<16; k++) {\n\t\t\tCornConjugate(this, SymInv[k], temps);\n\t\t\tvar idx = binarySearch(CPermS2R, get8Perm(temps.cp));\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 4) | k);\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\t\n\tthis.getEPermSym = function getEPermSym() {\t\n\t\tif (EPermR2S != null) {\n\t\t\treturn EPermR2S[get8Perm(this.ep)];\n\t\t}\n\t\tfor (var k=0; k<16; k++) {\n\t\t\tEdgeConjugate(this, SymInv[k], temps);\n\t\t\tvar idx = binarySearch(EPermS2R, get8Perm(temps.ep));\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 4) | k);\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\t\n\n\tthis.URFConjugate = function URFConjugate() {\n\t\tCornMult(urf2, this, temps);\n\t\tCornMult(temps, urf1, this);\t\t\n\t\tEdgeMult(urf2, this, temps);\n\t\tEdgeMult(temps, urf1, this);\t\t    \t\t\n\t}\n\t\n\tthis.invCubieCube = function invCubieCube() {\n\t\tfor (var edge=0; edge<12; edge++)\n\t\t\ttemps.ep[this.ep[edge]] = edge;\n\t\tfor (var edge=0; edge<12; edge++)\n\t\t\ttemps.eo[edge] = this.eo[temps.ep[edge]];\n\t\tfor (var corn=0; corn<8; corn++)\n\t\t\ttemps.cp[this.cp[corn]] = corn;\n\t\tfor (var corn=0; corn<8; corn++) {\n\t\t\tvar ori = this.co[temps.cp[corn]];\n\t\t\ttemps.co[corn] = -ori;\n\t\t\tif (temps.co[corn] < 0)\n\t\t\t\ttemps.co[corn] += 3;\n\t\t}\n\t\tthis.copy(temps);\n\t}\n\n\n\tthis.init = function init(cperm, twist, eperm, flip) {\n\t\tset8Perm(this.cp, cperm);\n\t\tthis.setTwist(twist);\n\t\tthis.setEdgePerm(eperm);\n\t\tthis.setFlip(flip);\n\t}\n\t\n\tthis.copy = function copy(c) {\n\t\tfor (var i=0; i<8; i++) {\n\t\t\tthis.cp[i] = c.cp[i];\n\t\t\tthis.co[i] = c.co[i];\n\t\t}\n\t\tfor (var i = 0; i < 12; i++) {\n\t\t\tthis.ep[i] = c.ep[i];\n\t\t\tthis.eo[i] = c.eo[i];\n\t\t}\n\t}\n}\n\nconst cctemp = new CubieCube();\nconst temps = new CubieCube();\n\nfunction set8Perm(arr, idx) {\n\tvar val = 0x76543210;\n\tfor (var i=0; i<7; i++) {\n\t\tvar p = fact[7-i];\n\t\tvar v = ~~(idx / p);\n\t\tidx %= p;\n\t\tv <<= 2;\n\t\tarr[i] = ((val >> v) & 7);\n\t\tvar m = (1 << v) - 1;\n\t\tval = (val & m) + ((val >> 4) & ~m);\n\t}\n\tarr[7] = val;\n}\n\nfunction get8Perm(arr) {\n\tvar idx = 0;\n\tvar val = 0x76543210;\n\tfor (var i=0; i<7; i++) {\n\t\tvar v = arr[i] << 2;\n\t\tidx = (8 - i) * idx + ((val >> v) & 7);\n\t\tval -= 0x11111110 << v;\n\t}\n\treturn idx;\t\n}\n\nfunction CornMult(a, b, prod) {\n\tfor (var corn=0; corn<8; corn++) {\n\t\tprod.cp[corn] = a.cp[b.cp[corn]];\n\t\tvar oriA = a.co[b.cp[corn]];\n\t\tvar oriB = b.co[corn];\n\t\tvar ori = oriA;\n\t\tori += (oriA<3) ? oriB : 3-oriB;\n\t\tori %= 3;\n\t\tif (oriA < 3 ^ oriB < 3) {\n\t\t\tori += 3;\n\t\t}\n\t\tprod.co[corn] = ori;\n\t}\n}\t\n\nfunction EdgeMult(a, b, prod) {\n\tfor (var ed=0; ed<12; ed++) {\n\t\tprod.ep[ed] = a.ep[b.ep[ed]];\n\t\tprod.eo[ed] = (b.eo[ed] ^ a.eo[b.ep[ed]]);\n\t}\n}\n\nfunction CornConjugate(a, idx, b) {\n\tCornMult(CubeSym[SymInv[idx]], a, cctemp);\n\tCornMult(cctemp, CubeSym[idx], b);\t\t\n}\n\nfunction EdgeConjugate(a, idx, b) {\n\tEdgeMult(CubeSym[SymInv[idx]], a, cctemp);\n\tEdgeMult(cctemp, CubeSym[idx], b);\t\t\n}\n\nvar CubeSym = Array(16);\nvar moveCube = Array(18);\nvar SymInv = Array(16);\nvar SymMult = Array(16);\nvar SymMove = Array(16);\nvar Sym8Mult = Array(8);\nvar Sym8Move = Array(8);\nvar Sym8MultInv = Array(8);\nvar SymMoveUD = Array(16);\nvar FlipS2R = Array(336);\nvar TwistS2R = Array(324);\nvar CPermS2R = Array(2768);\nvar EPermS2R = CPermS2R;\nvar FlipR2S = Array(2048);\nvar TwistR2S = Array(2187);\nvar EPermR2S = createArray(40320);\nfor (var i=0; i<40320; i++) {\n\tEPermR2S[i] = 0;\n}\nvar MtoEPerm = Array(40320);\nvar merge = Array(56);\nvar e2c = [0, 0, 0, 0, 1, 3, 1, 3, 1, 3, 1, 3, 0, 0, 0, 0];\nconst urf1 = new CubieCube();\nurf1.init(2531, 1373, 67026819, 1877);\nconst urf2 = new CubieCube();\nurf2.init(2089, 1906, 322752913, 255);\n\n\nfunction CubieInit() {\n\tvar mc = Array(6);\n\tmc[0] = new CubieCube();\n\tmc[0].init(15120, 0, 119750400, 0);\n\tmc[1] = new CubieCube();\n\tmc[1].init(21021, 1494, 323403417, 0);\n\tmc[2] = new CubieCube();\n\tmc[2].init(8064, 1236, 29441808, 802);\n\tmc[3] = new CubieCube();\n\tmc[3].init(9, 0, 5880, 0);\n\tmc[4] = new CubieCube();\n\tmc[4].init(1230, 412, 2949660, 0);\n\tmc[5] = new CubieCube();\n\tmc[5].init(224, 137, 328552, 1160);\n\tfor (var m=0; m<6; m++) {\n\t\tmoveCube[m*3] = mc[m];\n\t\tfor (var p=0; p<2; p++) {\n\t\t\tmoveCube[m*3+p+1] = new CubieCube();\n\t\t\tEdgeMult(moveCube[m*3+p], mc[m], moveCube[m*3+p+1]);\n\t\t\tCornMult(moveCube[m*3+p], mc[m], moveCube[m*3+p+1]);\n\t\t}\n\t}\n\tvar c = new CubieCube();\n\tvar d = new CubieCube();\n\tvar temp;\n\tvar f2 = new CubieCube();\n\tf2.init(28783, 0, 259268407, 0);\n\tvar u4 = new CubieCube();\n\tu4.init(15138, 0, 119765538, 1792);\n\tvar lr2 = new CubieCube();\n\tlr2.init(5167, 0, 83473207, 0);\n\tlr2.co = [ 3, 3, 3, 3, 3, 3, 3, 3 ];\n\tfor (var i=0; i<16; i++) {\n\t\tSymMult[i] = Array(16);\n\t\tSymMove[i] = Array(18);\n\t\tSymMoveUD[i] = Array(10);\n\t\tCubeSym[i] = new CubieCube();\n\t\tCubeSym[i].copy(c);\n\t\tCornMult(c, u4, d);\n\t\tEdgeMult(c, u4, d);\n\t\ttemp = d;\td = c;\tc = temp;\n\t\tif (i % 4 == 3) {\n\t\t\tCornMult(c, lr2, d);\n\t\t\tEdgeMult(c, lr2, d);\n\t\t\ttemp = d;\td = c;\tc = temp;\t\t\t\t\n\t\t}\n\t\tif (i % 8 == 7) {\n\t\t\tCornMult(c, f2, d);\n\t\t\tEdgeMult(c, f2, d);\n\t\t\ttemp = d;\td = c;\tc = temp;\n\t\t}\n\t}\n\n\tfor (var j=0; j<16; j++) {\n\t\tfor (var k=0; k<16; k++) {\n\t\t\tCornMult(CubeSym[j], CubeSym[k], c);\n\t\t\tif (c.cp[0] == 0 && c.cp[1] == 1 && c.cp[2] == 2) {\n\t\t\t\tSymInv[j] = k;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tfor (var i=0; i<16; i++) {\n\t\tfor (var j=0; j<16; j++) {\n\t\t\tCornMult(CubeSym[i], CubeSym[j], c);\n\t\t\tfor (var k=0; k<16; k++) {\n\t\t\t\tif (CubeSym[k].cp[0] == c.cp[0] && CubeSym[k].cp[1] == c.cp[1] && CubeSym[k].cp[2] == c.cp[2]) {\n\t\t\t\t\tSymMult[i][j] = k;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (var j=0; j<18; j++) {\n\t\tfor (var s=0; s<16; s++) {\n\t\t\tCornConjugate(moveCube[j], SymInv[s], c);\n\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\tvar found = 1;\n\t\t\t\tfor (var i=0; i<8; i++) {\n\t\t\t\t\tif (c.cp[i] != moveCube[m].cp[i] || c.co[i] != moveCube[m].co[i]) {\n\t\t\t\t\t\tfound = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (found) {\n\t\t\t\t\tSymMove[s][j] = m;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (var j=0; j<10; j++) {\n\t\tfor (var s=0; s<16; s++) {\n\t\t\tSymMoveUD[s][j] = std2ud[SymMove[s][ud2std[j]]];\n\t\t}\n\t}\n\tfor (var j=0; j<8; j++) {\n\t\tSym8Mult[j] = Array(8);\n\t\tSym8Move[j] = Array(18);\n\t\tSym8MultInv[j] = Array(8);\n\t\tfor (var s=0; s<8; s++) {\n\t\t\tSym8Mult[j][s] = (SymMult[j<<1][s<<1]>>>1);\n\t\t}\n\t}\n\tfor (var j=0; j<18; j++) {\n\t\tfor (var s=0; s<8; s++) {\n\t\t\tSym8Move[s][j] = SymMove[s<<1][j];\n\t\t}\n\t}\n\tfor (var j=0; j<8; j++) {\n\t\tfor (var s=0; s<8; s++) {\n\t\t\tSym8MultInv[j][s] = Sym8Mult[j][SymInv[s<<1]>>1];\n\t\t}\n\t}\n\n\tconst occ = new Array(1260);\n\n\tvar count = 0;\n\tfor (var i=0; i<64; occ[i++] = 0);\n\n\tfor (var i=0; i<2048; i++) {\n\t\tif ((occ[i>>>5]&(1<<(i&0x1f))) == 0) {\n\t\t\tc.setFlip(i);\n\t\t\tfor (var s=0; s<16; s+=2) {\n\t\t\t\tEdgeConjugate(c, s, d);\n\t\t\t\tvar idx = d.getFlip();\n\t\t\t\tocc[idx>>>5] |= 1<<(idx&0x1f);\n\t\t\t\tFlipR2S[idx] = ((count << 3) | (s >>> 1));\n\t\t\t}\n\t\t\tFlipS2R[count++] = i;\n\t\t}\n\t}\n//\talert(count);\n\tcount = 0;\n\tfor (var i=0; i<69; occ[i++] = 0);\n\tfor (var i=0; i<2187; i++) {\n\t\tif ((occ[i>>>5]&(1<<(i&0x1f))) == 0) {\n\t\t\tc.setTwist(i);\n\t\t\tfor (var s=0; s<16; s+=2) {\n\t\t\t\tCornConjugate(c, s, d);\n\t\t\t\tvar idx = d.getTwist();\n\t\t\t\tocc[idx>>>5] |= 1<<(idx&0x1f);\n\t\t\t\tTwistR2S[idx] =  ((count << 3) | (s >>> 1));\n\t\t\t}\n\t\t\tTwistS2R[count++] = i;\n\t\t}\n\t}\n//\talert(count);\n\n\tvar mask = Array(56);\n\tfor (var i=0; i<56; i++) {\n\t\tmask[i] = Array(2);\n\t\tmerge[i] = Array(56);\n\t}\n\tfor (var i=0; i<40320; i++) {\n\t\tset8Perm(c.ep, i);\n\t\tvar a = ~~(c.getURtoUL() / 6);\n\t\tvar b = ~~(c.getDRtoDL() / 6);\n\t\tmask[a][b>>>5] |= 1 << (b&0x1f);\n\t}\n\t\n\tfor (var i=0; i<56; i++) {\n\t\tcount = 0;\n\t\tfor (var j=0; j<56; j++) {\n\t\t\tif ((mask[i][j>>>5]&(1<<(j&0x1f))) != 0) {\n\t\t\t\tmerge[i][j] = count++;\n\t\t\t}\n\t\t}\n\t}\n\tcount = 0;\n\tfor (var i=0; i<1260; occ[i++] = 0);\n\tfor (var i=0; i<40320; i++) {\n\t\tif ((occ[i>>>5]&(1<<(i&0x1f))) == 0) {\n\t\t\tset8Perm(c.ep, i);\n\t\t\tfor (var s=0; s<16; s++) {\n\t\t\t\tEdgeConjugate(c, s, d);\n\t\t\t\tvar idx = get8Perm(d.ep);\n\t\t\t\tocc[idx>>>5] |= 1<<(idx&0x1f);\n\t\t\t\tvar a = d.getURtoUL();\n\t\t\t\tvar b = d.getDRtoDL();\n\t\t\t\tvar m = (merge[~~(a/6)][~~(b/6)] * 4032 + a * 12 + b % 6 * 2 + get8Parity(idx));\n\t\t\t\tMtoEPerm[m] = (count << 4 | s);\n\t\t\t\tEPermR2S[idx] = (count << 4 | s);\n\t\t\t}\n\t\t\tEPermS2R[count++] = i;\n\t\t}\n\t}\n}\n\nvar UDSliceMove = Array(495);//new char[495][18];\nvar TwistMove = Array(324);//new char[324][18];\nvar FlipMove = Array(336);//new char[336][18];\nvar UDSliceConj = Array(495);//new char[495][8];\nvar UDSliceTwistPrun = Array(495*324);//new byte[495 * 324];\nvar UDSliceFlipPrun = Array(495*336);//new byte[495 * 336];\n\t\nvar TwistFlipPrun = Array(336*324*8);//new byte[336 * 324 * 8];\n\t\n\t//phase1to2\nvar Mid3Move = Array(1320);//new char[1320][18];\nvar Mid32MPerm = Array(24);//new byte[24];\nvar CParity = Array(87);//new byte[2768/8];\n\n\t//phase2\nvar CPermMove = Array(2768);//new char[2768][18];\nvar EPermMove = Array(2768);//new char[2768][10];\nvar MPermMove = Array(24);//new byte[24][10];\nvar MPermConj = Array(24);//new byte[24][16];\nvar MCPermPrun = Array(24*2768);//new byte[24*2768];\nvar MEPermPrun = Array(24*2768);//new byte[24*2768];\n\n\nfunction CoordInit() {\n\tvar c = new CubieCube();\n\tvar d = new CubieCube();\n\tvar i, j;\n\tfor (i=0; i<2768; i++) {\n\t\tCPermMove[i] = Array(18);\n\t\tset8Perm(c.cp, CPermS2R[i]);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tCornMult(c, moveCube[j], d);\n\t\t\tCPermMove[i][j] = d.getCPermSym();\n\t\t}\n\t}\t\t\n\tfor (i=0; i<2768; i++) {\n\t\tEPermMove[i] = Array(10);\n\t\tset8Perm(c.ep, EPermS2R[i]);\n\t\tfor (j=0; j<10; j++) {\n\t\t\tEdgeMult(c, moveCube[ud2std[j]], d);\n\t\t\tEPermMove[i][j] = d.getEPermSym();\n\t\t}\n\t}\n\tfor (i=0; i<336; i++) {\n\t\tFlipMove[i] = Array(18);\n\t\tc.setFlip(FlipS2R[i]);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tEdgeMult(c, moveCube[j], d);\n\t\t\tFlipMove[i][j] = d.getFlipSym();\n\t\t}\n\t}\n\tfor (i=0; i<324; i++) {\n\t\tTwistMove[i] = Array(18);\n\t\tc.setTwist(TwistS2R[i]);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tCornMult(c, moveCube[j], d);\n\t\t\tTwistMove[i][j] = d.getTwistSym();\n\t\t}\n\t}\n\tfor (i=0; i<495; i++) {\n\t\tUDSliceMove[i] = Array(18);\n\t\tc.setUDSlice(i);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tEdgeMult(c, moveCube[j], d);\n\t\t\tUDSliceMove[i][j] = d.getUDSlice();\n\t\t}\n\t}\n\tfor (i=0; i<495; i++) {\n\t\tUDSliceConj[i] = Array(8);\n\t\tc.setUDSlice(i);\n\t\tfor (j=0; j<16; j+=2) {\n\t\t\tEdgeConjugate(c, SymInv[j], d);\n\t\t\tUDSliceConj[i][j>>>1] = d.getUDSlice();\n\t\t}\n\t}\n\tfor (i=0; i<1320; i++) {\n\t\tMid3Move[i] = Array(18);\n\t\tc.setMid3(i);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tEdgeMult(c, moveCube[j], d);\n\t\t\tMid3Move[i][j] = d.getMid3();\n\t\t}\n\t}\t\n\tfor (i=0; i<24; i++) {\n\t\tc.setMPerm(i);\n\t\tMid32MPerm[c.getMid3() % 24] = i;\n\t}\n\tfor (i=0; i<2768; i++) {\n\t\tCParity[i>>>3] |= (get8Parity(CPermS2R[i])) << (i & 7);\n\t}\n\tfor (i=0; i<24; i++) {\n\t\tMPermMove[i] = Array(10);\n\t\tc.setMPerm(i);\n\t\tfor (j=0; j<10; j++) {\n\t\t\tEdgeMult(c, moveCube[ud2std[j]], d);\n\t\t\tMPermMove[i][j] = d.getMPerm();\n\t\t}\n\t}\t\t\n\tfor (i=0; i<24; i++) {\n\t\tMPermConj[i] = Array(16);\n\t\tc.setMPerm(i);\n\t\tfor (j=0; j<16; j++) {\n\t\t\tEdgeConjugate(c, SymInv[j], d);\n\t\t\tMPermConj[i][j] = d.getMPerm();\n\t\t}\n\t}\n\t\n\tvar SymState = Array(324);\n\tfor (i=0; i<324; i++) {\n\t\tc.setTwist(TwistS2R[i]);\n\t\tfor (var j=0; j<8; j++) {\n\t\t\tCornConjugate(c, j<<1, d);\n\t\t\tif (binarySearch(TwistS2R, d.getTwist()) != 0xffff) {\n\t\t\t\tSymState[i] |= (1 << j);\n\t\t\t}\n\t\t}\n\t}\n\tvar SymStateF = Array(324);\n\tfor (i=0; i<336; i++) {\n\t\tc.setFlip(FlipS2R[i]);\n\t\tfor (var j=0; j<8; j++) {\n\t\t\tEdgeConjugate(c, j<<1, d);\n\t\t\tif (binarySearch(FlipS2R, d.getFlip()) != 0xffff) {\n\t\t\t\tSymStateF[i] |= (1 << j);\n\t\t\t}\n\t\t}\n\t}\t\t\n\tfor (i=0; i<336*324*8; i++) {\n\t\tTwistFlipPrun[i] = -1;\n\t}\n\tfor (i=0; i<8; i++) {\n\t\tTwistFlipPrun[i] = 0;\n\t}\n\tvar depth = 0;\n\tvar done = 8;\n\tvar inv;\n\tvar select;\n\tvar check;\n\t\n\twhile (done < 336*324*8) {\n\t\tinv = depth > 6;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<336*324*8; i++) {\n\t\t\tif (TwistFlipPrun[i] != select)\n\t\t\t\tcontinue;\n\t\t\tvar twist = ~~(i / 2688);\n\t\t\tvar flip = i % 2688;\n\t\t\tvar fsym = i & 7;\n\t\t\tflip >>>= 3;\n\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\tvar twistx = TwistMove[twist][m];\n\t\t\t\tvar tsymx = twistx & 7;\n\t\t\t\ttwistx >>>= 3;\n\t\t\t\tvar flipx = FlipMove[flip][Sym8Move[fsym][m]];\n\t\t\t\tvar fsymx = Sym8MultInv[Sym8Mult[flipx & 7][fsym]][tsymx];\n\t\t\t\tflipx >>>= 3;\n\t\t\t\tvar idx = twistx * 2688 + (flipx << 3 | fsymx);\n\t\t\t\tif (TwistFlipPrun[idx] == check) {\n\t\t\t\t\tdone++;\n\t\t\t\t\tif (inv) {\n\t\t\t\t\t\tTwistFlipPrun[i] = depth;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tTwistFlipPrun[idx] = depth;\n\t\t\t\t\t\tvar sym = SymState[twistx];\n\t\t\t\t\t\tvar symF = SymStateF[flipx];\n\t\t\t\t\t\tif (sym != 1 || symF != 1) {\n\t\t\t\t\t\t\tfor (var j=0; j<8; j++, symF >>= 1) {\n\t\t\t\t\t\t\t\tif ((symF & 1) == 1) {\n\t\t\t\t\t\t\t\t\tvar fsymxx = Sym8MultInv[fsymx][j];\n\t\t\t\t\t\t\t\t\tfor (var k=0; k<8; k++) {\n\t\t\t\t\t\t\t\t\t\tif ((sym & (1 << k)) != 0) {\n\t\t\t\t\t\t\t\t\t\t\tvar idxx = twistx * 2688 + (flipx << 3 | Sym8MultInv[fsymxx][k]);\n\t\t\t\t\t\t\t\t\t\t\tif (TwistFlipPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\t\tTwistFlipPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\n\tfor (i=0; i<495*324; i++) {\n\t\tUDSliceTwistPrun[i] = -1;\n\t}\n\tUDSliceTwistPrun[0] = 0;\n\tdepth = 0;\n\tdone = 1;\n\twhile (done < 495 * 324) {\n\t\tinv = depth > 6;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<495*324; i++) {\n\t\t\tif (UDSliceTwistPrun[i] == select) {\n\t\t\t\tvar slice = i % 495;\n\t\t\t\tvar twist = ~~(i / 495);\n\t\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\t\tvar twistx = TwistMove[twist][m];\n\t\t\t\t\tvar symx = twistx & 7;\n\t\t\t\t\tvar slicex = UDSliceConj[UDSliceMove[slice][m]][symx];\n\t\t\t\t\ttwistx >>>= 3;\n\t\t\t\t\tvar idx = twistx * 495 + slicex;\n\t\t\t\t\tif (UDSliceTwistPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tUDSliceTwistPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tUDSliceTwistPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymState[twistx];\n\t\t\t\t\t\t\tif (sym != 1) {\n\t\t\t\t\t\t\t\tfor (var j=1; j<8; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = twistx * 495 + UDSliceConj[slicex][j];\n\t\t\t\t\t\t\t\t\t\tif (UDSliceTwistPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tUDSliceTwistPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\t\t\n\n\tfor (i=0; i<495*336; i++) {\n\t\tUDSliceFlipPrun[i] = -1;\n\t}\n\tUDSliceFlipPrun[0] = 0;\n\tdepth = 0;\n\tdone = 1;\n\twhile (done < 495 * 336) {\n\t\tinv = depth > 6;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<495*336; i++) {\n\t\t\tif (UDSliceFlipPrun[i] == select) {\n\t\t\t\tvar slice = i % 495;\n\t\t\t\tvar flip = ~~(i / 495);\n\t\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\t\tvar flipx = FlipMove[flip][m];\n\t\t\t\t\tvar symx = flipx & 7;\n\t\t\t\t\tvar slicex = UDSliceConj[UDSliceMove[slice][m]][symx];\n\t\t\t\t\tflipx >>>= 3;\n\t\t\t\t\tvar idx = flipx * 495 + slicex;\n\t\t\t\t\tif (UDSliceFlipPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tUDSliceFlipPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tUDSliceFlipPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymStateF[flipx];\n\t\t\t\t\t\t\tif (sym != 1) {\n\t\t\t\t\t\t\t\tfor (var j=1; j<8; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = flipx * 495 + UDSliceConj[slicex][j];\n\t\t\t\t\t\t\t\t\t\tif (UDSliceFlipPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tUDSliceFlipPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tdepth++;\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\t\n\t\n\tSymState = Array(2768);\n\tfor (i=0; i<2768; i++) {\n\t\tset8Perm(c.ep, EPermS2R[i]);\n\t\tfor (j=1; j<16; j++) {\n\t\t\tEdgeConjugate(c, j, d);\n\t\t\tif (binarySearch(EPermS2R, get8Perm(d.ep)) != 0xffff) {\n\t\t\t\tSymState[i] |= (1 << j);\n\t\t\t}\n\t\t}\n\t}\n\tfor (i=0; i<24*2768; i++) {\n\t\tMEPermPrun[i] = -1;\n\t}\n\tMEPermPrun[0] = 0;\n\twhile (done < 24*2768) {\n\t\tinv = depth > 7;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<24*2768; i++) {\n\t\t\tif (MEPermPrun[i] == select) {\n\t\t\t\tvar mid = i % 24;\n\t\t\t\tvar edge = ~~(i / 24);\n\t\t\t\tfor (var m=0; m<10; m++) {\n\t\t\t\t\tvar edgex = EPermMove[edge][m];\n\t\t\t\t\tvar symx = edgex & 15;\n\t\t\t\t\tvar midx = MPermConj[MPermMove[mid][m]][symx];\n\t\t\t\t\tedgex >>>= 4;\n\t\t\t\t\tvar idx = edgex * 24 + midx;\n\t\t\t\t\tif (MEPermPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tMEPermPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tMEPermPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymState[edgex];\n\t\t\t\t\t\t\tif (sym != 0) {\n\t\t\t\t\t\t\t\tfor (j=1; j<16; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = edgex * 24 + MPermConj[midx][j];\n\t\t\t\t\t\t\t\t\t\tif (MEPermPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tMEPermPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\t\t\n\t\t\n\tfor (i=0; i<24*2768; i++) {\n\t\tMCPermPrun[i] = -1;\n\t}\n\tMCPermPrun[0] = 0;\n\tdepth = 0;\n\tdone = 1;\n\twhile (done < 24*2768) {\n\t\tinv = depth > 7;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<24*2768; i++) {\n\t\t\tif (MCPermPrun[i] == select) {\n\t\t\t\tvar mid = i % 24;\n\t\t\t\tvar corn = ~~(i / 24);\n\t\t\t\tfor (var m=0; m<10; m++) {\n\t\t\t\t\tvar cornx = CPermMove[corn][ud2std[m]];\n\t\t\t\t\tvar symx = (cornx & 15);\n\t\t\t\t\tvar midx = MPermConj[MPermMove[mid][m]][symx];\n\t\t\t\t\tcornx >>>= 4;\n\t\t\t\t\tvar idx = cornx * 24 + midx;\n\t\t\t\t\tif (MCPermPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tMCPermPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tMCPermPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymState[cornx];\n\t\t\t\t\t\t\tif (sym != 0) {\n\t\t\t\t\t\t\t\tfor (j=1; j<16; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = cornx * 24 + MPermConj[midx][j ^ e2c[j]];\n\t\t\t\t\t\t\t\t\t\tif (MCPermPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tMCPermPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\n}\t\t\t\t\t\n\nfunction randomCube() {\n\tvar eperm;\n\tvar cperm;\n\tdo {\n\t\teperm = ~~(Math.random() * 479001600);\n\t\tcperm = ~~(Math.random() * 40320);\n\t} while (((get8Parity(cperm) ^ get12Parity(eperm))) != 0);\n\tvar c = new CubieCube();\n\tc.init(cperm, ~~(Math.random() * 2187), eperm, ~~(Math.random() * 2048));\n\treturn c;\n}\n\nvar move = Array(31);\n\nvar corn = Array(20);\nvar csym = Array(20);\nvar mid3 = Array(20);\nvar e1 = Array(20);\nvar e2 = Array(20);\nvar urfidx;\n\nvar twist = Array(6);\nvar tsym = Array(6);\nvar flip = Array(6);\nvar fsym = Array(6);\nvar slice = Array(6);\nvar corn0 = Array(6);\nvar csym0 = Array(6);\nvar mid30 = Array(6);\nvar e10 = Array(6);\nvar e20 = Array(6);\nvar prun = Array(6);\n\nvar length1 = 0;\nvar maxlength2 = 0;\nvar sol = 999;\nvar valid1 = 0;\nvar valid2 = 0;\nvar solution = \"\";\nvar useSeparator = false;\n\nfunction Solve(c) {\n\tc.temps = new CubieCube();\n\tfor (var i=0; i<6; i++) {\n\t\ttwist[i] = c.getTwistSym();\n\t\ttsym[i] = twist[i] & 7;\n\t\ttwist[i] >>>= 3;\n\t\tflip[i] = c.getFlipSym();\n\t\tfsym[i] = flip[i] & 7;\n\t\tflip[i] >>>= 3;\n\t\tslice[i] = c.getUDSlice();\n\t\tcorn0[i] = c.getCPermSym();\n\t\tcsym0[i] = corn0[i] & 15;\n\t\tcorn0[i] >>>= 4;\n\t\tmid30[i] = c.getMid3();\n\t\te10[i] = c.getURtoUL();\n\t\te20[i] = c.getDRtoDL();\n\t\tprun[i] = Math.max(Math.max(UDSliceTwistPrun[twist[i] * 495 + UDSliceConj[slice[i]][tsym[i]]],\n\t\t\t\t\t\tUDSliceFlipPrun[flip[i] * 495 + UDSliceConj[slice[i]][fsym[i]]]),\n\t\t\t\t\t\tTwistFlipPrun[twist[i] * 2688 + (flip[i] << 3 | Sym8MultInv[fsym[i]][tsym[i]])]);\n\t\tc.URFConjugate();\n\t\tif (i==2) {\n\t\t\tc.invCubieCube();\n\t\t}\n\t}\n\tsolution = null;\n\tsol = 22;\n\tfor (length1=0; length1<sol; length1++) {\n\t\tmaxlength2 = Math.min(sol/2+1, sol-length1);\n\t\tfor (urfidx=0; urfidx<6; urfidx++) {\n\t\t\tcorn[0] = corn0[urfidx];\n\t\t\tcsym[0] = csym0[urfidx];\n\t\t\tmid3[0] = mid30[urfidx];\n\t\t\te1[0] = e10[urfidx];\n\t\t\te2[0] = e20[urfidx];\n\t\t\tif ((prun[urfidx] <= length1)\n\t\t\t\t\t&& phase1(twist[urfidx], tsym[urfidx], flip[urfidx], fsym[urfidx],\n\t\t\t\t\t\t\t\tslice[urfidx], length1, 18)) {\n\t\t\t\tif (solution == null) {\n\t\t\t\t\treturn \"Error 8\";\n\t\t\t\t} else {\n\t\t\t\t\treturn solution;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn \"Error 7\";\n}\n\nfunction phase1(twist, tsym, flip, fsym, slice, maxl, lm) {\n\tif (twist==0 && flip==0 && slice==0 && maxl < 5) {\n\t\treturn maxl == 0 && init2();\n\t}\n\tfor (var m=0; m<18; m++) {\n\t\tif (ckmv[lm][m]) {\n\t\t\tm+=2;\n\t\t\tcontinue;\n\t\t}\n\t\tvar slicex = UDSliceMove[slice][m];\n\t\tvar twistx = TwistMove[twist][Sym8Move[tsym][m]];\n\t\tvar tsymx = Sym8Mult[twistx & 7][tsym];\n\t\ttwistx >>>= 3;\n\t\tif (UDSliceTwistPrun[twistx * 495 + UDSliceConj[slicex][tsymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar flipx = FlipMove[flip][Sym8Move[fsym][m]];\n\t\tvar fsymx = Sym8Mult[flipx & 7][fsym];\n\t\tflipx >>>= 3;\n\t\tif (TwistFlipPrun[twistx * 2688 + (flipx << 3 | Sym8MultInv[fsymx][tsymx])] >= maxl\n\t\t\t\t||UDSliceFlipPrun[flipx * 495 + UDSliceConj[slicex][fsymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tmove[length1-maxl] = m;\n\t\tvalid1 = Math.min(valid1, length1-maxl);\n\t\tif (phase1(twistx, tsymx, flipx, fsymx, slicex, maxl-1, m)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction init2() {\n//\tif (System.currentTimeMillis() > timeOut) {\n//\t\treturn true;\n//\t}\n\tvalid2 = Math.min(valid2, valid1);\n\tfor (var i=valid1; i<length1; i++) {\n\t\tvar m = move[i];\n\t\tcorn[i+1] = CPermMove[corn[i]][SymMove[csym[i]][m]];\n\t\tcsym[i+1] = SymMult[corn[i+1] & 15][csym[i]];\n\t\tcorn[i+1] >>>= 4;\n\t\tmid3[i+1] = Mid3Move[mid3[i]][m];\n\t}\n\tvalid1 = length1;\n\tvar mid = Mid32MPerm[mid3[length1] % 24];\n\tvar prun = MCPermPrun[corn[length1] * 24 + MPermConj[mid][csym[length1]]];\n\tif (prun >= maxlength2) {\n\t\treturn false;\n\t}\n\tfor (var i=valid2; i<length1; i++) {\n\t\te1[i+1] = Mid3Move[e1[i]][move[i]];\n\t\te2[i+1] = Mid3Move[e2[i]][move[i]];\n\t}\n\tvalid2 = length1;\n\tvar cornx = corn[length1];\n\tvar ex = merge[~~(e1[length1]/6)][~~(e2[length1]/6)] * 4032\n\t\t\t\t + e1[length1] * 12 + e2[length1] % 6 * 2 + (((CParity[cornx>>>3]>>>(cornx&7))&1) ^ get4Parity(mid));\n\tvar edge = MtoEPerm[ex];\n\tvar esym = edge & 15;\n\tedge >>>= 4;\n\t\tprun = Math.max(MEPermPrun[edge * 24 + MPermConj[mid][esym]], prun);\n\tif (prun >= maxlength2) {\n\t\treturn false;\n\t}\n\t\tvar lm = length1==0 ? 10 : std2ud[~~(move[length1-1]/3)*3+1];\n\tfor (var i=prun; i<maxlength2; i++) {\n\t\tif (phase2(edge, esym, corn[length1], csym[length1], mid, i, length1, lm)) {\n\t\t\tsol = length1 + i;\n\t\t\tvar sb = \"\";\n\t\t\tvar urf = urfidx;\n//\t\t\tif (inverse) {\n\t\t\t\turf = (urf + 3) % 6;\n//\t\t\t}\n\t\t\tif (urf < 3) {\n\t\t\t\tfor (var s=0; s<length1; s++) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t\tfor (var s=length1; s<sol; s++) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (var s=sol-1; s>=length1; s--) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t\tfor (var s=length1-1; s>=0; s--) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t}\n\t\t\t// sb += \"(\" + sol + \"f)\";\n\t\t\tsolution = sb;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction phase2(edge, esym, corn, csym, mid, maxl, depth, lm) {\n\tif (edge==0 && corn==0 && mid==0) {\n\t\treturn true;\n\t}\n\tfor (var m=0; m<10; m++) {\n\t\tif (ckmv2[lm][m]) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar midx = MPermMove[mid][m];\n\t\tvar edgex = EPermMove[edge][SymMoveUD[esym][m]];\n\t\tvar esymx = SymMult[edgex & 15][esym];\n\t\tedgex >>>= 4;\n\t\tif (MEPermPrun[edgex * 24 + MPermConj[midx][esymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar cornx = CPermMove[corn][SymMove[csym][ud2std[m]]];\n\t\tvar csymx = SymMult[cornx & 15][csym];\n\t\tcornx >>>= 4;\n\t\tif (MCPermPrun[cornx * 24 + MPermConj[midx][csymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tmove[depth] = ud2std[m];\n\t\tif (phase2(edgex, esymx, cornx, csymx, midx, maxl-1, depth+1, m)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nvar initialized = false;\n\nfunction initialize() {\n\tif (initialized) {\n\t\treturn;\n\t}\n\tCubieInit();\n\tCoordInit();\n\tinitialized = true;\n}\n\nfunction solve(c) {\n\tinitialize();\n\tconst cc = new CubieCube();\n\tcc.cp = c.cp;\n\tcc.co = c.co;\n\tcc.ep = c.ep;\n\tcc.eo = c.eo;\n\treturn Solve(cc);\n};\n\nmodule.exports.initialize = initialize;\nmodule.exports.solve = solve;\nmodule.exports.randomCube = randomCube;\n","import { wrap, releaseProxy } from \"comlink\";\nimport { useEffect, useState, useMemo } from \"react\";\nimport { AnalyzerState, SolutionDesc } from \"./Analyzer\";\n\nexport function useAnalyzer(analyzerState: AnalyzerState) {\n    const [data, setData] = useState({\n        isRunning: false,\n        solutions: undefined as SolutionDesc[] | undefined\n    })\n    const { workerApi } = useWorker()\n\n    useEffect(() => {\n        setData({ isRunning: true, solutions: undefined})\n        if (analyzerState.scramble !== \"\") {\n            workerApi.analyze(analyzerState).then(solutions => setData({ isRunning: false, solutions})); \n        }\n    }, [workerApi, setData, analyzerState])\n\n    return data\n}\n\n// write a wrapper so that cleanup is taken care of for us\nfunction useWorker() {\n    // memoise a worker so it can be reused; create one worker up front\n    // and then reuse it subsequently; no creating new workers each time\n    const workerApiAndCleanup = useMemo(() => makeWorkerApiAndCleanup(), []);\n  \n    useEffect(() => {\n      const { cleanup } = workerApiAndCleanup;\n  \n      // cleanup our worker when we're done with it\n      return () => {\n        cleanup();\n      };\n    }, [workerApiAndCleanup]);\n  \n    return workerApiAndCleanup;\n}\n\nfunction makeWorkerApiAndCleanup() {\n    // Here we create our worker and wrap it with comlink so we can interact with it\n    const worker = new Worker(\"../worker/index\", {\n      name: \"analyzer-worker\",\n      type: \"module\"\n    });\n    const workerApi = wrap<import(\"../worker/index\").AnalyzerWorker>(worker);\n  \n    // A cleanup function that releases the comlink proxy and terminates the worker\n    const cleanup = () => {\n      workerApi[releaseProxy]();\n      worker.terminate();\n    };\n  \n    const workerApiAndCleanup = { workerApi, cleanup };\n  \n    return workerApiAndCleanup;\n}\n","module.exports = __webpack_public_path__ + \"static/js/analyzer-worker.3f5f269e.chunk.worker.js\"","export enum Face {\n    U = 0, D, F, B, L, R, X\n}\n\nconst U = Face.U;\nconst D = Face.D;\nconst F = Face.F;\nconst B = Face.B;\nconst L = Face.L;\nconst R = Face.R;\nexport {U, D, F, B, L, R};\n\nexport enum Typ {\n    C = 0, E, T\n}\nconst C = Typ.C;\nconst E = Typ.E;\nconst T = Typ.T;\nexport {C, E, T}\n\nexport type CubieT = {\n    co: Array<number>,\n    cp: Array<number>,\n    eo: Array<number>,\n    ep: Array<number>,\n    tp: Array<number>\n}\n\nexport type FaceletCube = Array<string>\n\nexport type CornerCoord = [Face, Face, Face]\nlet corners_coord : Array<CornerCoord> = [\n    [U,F,L], [U,L,B], [U,B,R], [U,R,F],\n    [D,L,F], [D,B,L], [D,R,B], [D,F,R]\n]\n\nexport type EdgeCoord = [Face, Face]\nlet edges_coord : Array<EdgeCoord> = [\n    [U,F], [U,L], [U,B], [U,R],\n    [D,F], [D,L], [D,B], [D,R],\n    [F,L], [B,L], [B,R], [F,R],\n]\nexport type CenterCoord = [Face]\nlet centers_coord : Array<CenterCoord> = [\n    [U], [D], [F], [B], [L], [R]\n]\n\nlet cstimer_corners_coord : Array<CornerCoord> = [\n    [U,R,F],[U,F,L], [U,L,B], [U,B,R],\n    [D,F,R],[D,L,F], [D,B,L], [D,R,B]\n]\n\nlet cstimer_edges_coord : Array<EdgeCoord> = [\n    [U, R], [U,F], [U,L], [U,B],\n    [D, R], [D,F], [D,L], [D,B],\n    [F, R], [F,L], [B,L], [B,R]\n]\n\nexport {corners_coord, edges_coord, centers_coord, cstimer_corners_coord, cstimer_edges_coord }\n\nexport type FaceletMapping = [Face[], Face[]][]\n\nexport type PermChg = [number, number]\nexport type OriChg = number\n\nexport type MoveT = {\n    cpc: Array<PermChg>,\n    coc: Array<OriChg>,\n    epc: Array<PermChg>,\n    eoc: Array<OriChg>,\n    tpc: Array<PermChg>,\n    name: string\n}\n\nlet u : MoveT = {\n    cpc: [[0, 1], [1, 2], [2, 3], [3, 0]],\n    coc: [0, 0, 0, 0],\n    epc: [[0, 1], [1, 2], [2, 3], [3, 0]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"U\"\n}\n\nlet f : MoveT = {\n    cpc: [[0, 3], [3, 7], [7, 4], [4, 0]],\n    coc: [1, 2, 1, 2],\n    epc: [[0, 11], [11, 4], [4, 8], [8, 0]],\n    eoc: [1, 1, 1, 1],\n    tpc: [],\n    name: \"F\",\n}\n\nlet r : MoveT = {\n    cpc: [[3, 2], [2, 6], [6, 7], [7, 3]],\n    coc: [1, 2, 1, 2],\n    epc: [[3, 10], [10, 7], [7, 11], [11, 3]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"R\",\n}\n\nlet l : MoveT = {\n    cpc: [[0, 4], [4, 5], [5, 1], [1, 0]],\n    coc: [2, 1, 2, 1],\n    epc: [[1, 8], [8, 5], [5, 9], [9, 1]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"L\",\n}\n\nlet d : MoveT = {\n    cpc: [[4, 7], [7, 6], [6, 5], [5, 4]],\n    coc: [0, 0, 0, 0],\n    epc: [[4, 7], [7, 6], [6, 5], [5, 4]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"D\",\n}\n\nlet b : MoveT = {\n    cpc: [[1, 5], [5, 6], [6, 2], [2, 1]],\n    coc: [2, 1, 2, 1],\n    epc: [[2, 9], [9, 6], [6, 10], [10, 2]],\n    eoc: [1, 1, 1, 1],\n    tpc: [],\n    name: \"B\",\n}\n\nlet m : MoveT = {\n    cpc: [],\n    coc: [],\n    epc: [[0, 4], [4, 6], [6, 2], [2, 0]],\n    eoc: [1, 1, 1, 1],\n    tpc: [[0, 2], [2, 1], [1, 3], [3, 0]],\n    name: \"M\",\n}\n\nlet e : MoveT = {\n    cpc: [],\n    coc: [],\n    epc: [[8, 9], [9, 10], [10, 11], [11, 8]],\n    eoc: [1, 1, 1, 1],\n    tpc: [[2, 4], [4, 3], [3, 5], [5, 2]],\n    name: \"E\",\n}\n\nlet s : MoveT = {\n    cpc: [],\n    coc: [],\n    epc: [[1, 3], [3, 7], [7, 5], [5, 1]],\n    eoc: [1, 1, 1, 1],\n    tpc: [[0, 5], [5, 1], [1, 4], [4, 0] ],\n    name: \"S\",\n}\n\nexport {u, d, f, b, l, r, m, e, s}\n\nexport type StickerT = [number, number, Typ]\nexport type StickerExtT = [number, number, Typ, Face]\nexport type FaceletT = Array<StickerT>\n\nlet u_face : FaceletT = [\n    [1, 0, C], [2, 0, E], [2, 0, C],\n    [1, 0, E], [0, 0, T], [3, 0, E],\n    [0, 0, C], [0, 0, E], [3, 0, C]\n  ]\n\nlet f_face : FaceletT = [\n    [0, 1, C], [0, 1, E], [3, 2, C],\n    [8, 0, E], [2, 0, T], [11,0, E],\n    [4, 2, C], [4, 1, E], [7, 1, C]\n]\n\nexport {u_face, f_face}\n\n// for solved back-FS, ignore CP=5 and C=(1,0)\n// for solved front-FS, ignore CP=4 and C=(0,0)\nconst FBpairPosBackFS : [number, number, number, number][] = [\n    [0, 0, 8, 1], [0, 1, 1, 0], [ 0, 2 , 0, 1],\n    // [1, 0, 9, 1],\n    [1, 1, 2, 0], [1, 2, 1, 1],\n    [2, 0, 10, 1], [2, 1, 3, 0], [2, 2, 2, 1],\n    [3, 0, 11, 0], [3, 1, 0, 0], [3, 2, 3, 1],\n    //[4, 0, 8, 0], \n    [4, 1, 4, 0],\n    // [5, 0, 9, 0], [5, 2, 6, 0],\n    [6, 0, 10, 0], [6, 1, 6, 0], [6, 2, 7, 1],\n    [7, 0, 11, 1], [7, 1, 7, 0], [7, 2, 4, 1]\n]\n// Reason for failing: sampling the solved state would crash our solver, which refuses to expand solution on solved state\nconst FBpairPosFrontFS : [number, number, number, number][] = [\n    //[0, 0, 8, 0], \n    [0, 1, 1, 1], [0, 2, 0, 0],\n    [1, 0, 9, 1], [1, 1, 2, 1], [1, 2, 1, 0],\n    [2, 0, 10, 0], [2, 1, 3, 1], [2, 2, 2, 0],\n    [3, 0, 11, 1], [3, 1, 0, 1], [3, 2, 3, 0],\n    //[4, 0, 8, 1], [4, 1, 4, 1],\n    //[5, 0, 9, 0], \n    [5, 2, 6, 0],\n    [6, 0, 10, 1], [6, 1, 6, 1], [6, 2, 7, 0],\n    [7, 0, 11, 0], [7, 1, 7, 1], [7, 2, 4, 0]\n]\n\nexport {FBpairPosBackFS, FBpairPosFrontFS}\n\nexport type FaceletCubeT = Array<Array<Face>>\n\n// A Cube can be in two representations: cubieCube or faceletCube\n\nlet color_map =`\\\n   UUU\n   UUU\n   UUU\nLLLFFFRRRBBB\nLLLFFFRRRBBB\nLLLFFFRRRBBB\n   DDD\n   DDD\n   DDD`\n\nexport {color_map}\n","let rand_int = (r: number) => {\n    return Math.floor(Math.random() * r)\n}\n\nlet rand_incl = (l: number, r: number) => {\n    return rand_int(r - l + 1) + l;\n}\nlet rand_choice = function<T>(arr: T[]) {\n    return arr[rand_int(arr.length)]\n}\n\nlet rand_shuffle = function<T>(arr: T[]) {\n    for (let i = 0, l = arr.length; i < l - 1; i++) {\n        let j = rand_incl(i, l - 1)\n        let tmp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = tmp\n    }\n    return arr\n}\n\nfunction cartesianProduct<T>(...allEntries: T[][]): T[][] {\n    return allEntries.reduce<T[][]>(\n      (results, entries) =>\n        results\n          .map(result => entries.map(entry => result.concat([entry])))\n          .reduce((subResults, result) => subResults.concat(result), []),\n      [[]]\n    )\n  }\n\nlet getParity = (perm: number[]) => {\n    let visited = Array(perm.length).fill(false)\n    let follow = (i: number, cnt: number) : number => {\n        if (visited[i]) {\n            return 0\n        } else {\n            visited[i] = 1\n            if (visited[perm[i]]) {\n                return cnt;\n            } else\n                return follow(perm[i], cnt + 1)\n        }\n    }\n    let res = 0\n    for (let x of perm) {\n        res += follow(x, 0)\n    }\n    return res\n}\n\nlet arrayEqual = function<T>(arr1: T[], arr2: T[]) {\n    if (arr1.length !== arr2.length) return false;\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) return false;\n    }\n    return true;\n}\n\nlet encodeArr = function(base: number, rarr: number[]) {\n    let int = 0\n    for (let i = rarr.length - 1; i >= 0; i--)\n        int = rarr[i] + int * base\n    return int\n}\n\nexport {rand_int, rand_choice, rand_shuffle, getParity, arrayEqual, encodeArr, cartesianProduct}","import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar OrbitControls = function ( object, domElement ) {\n\n\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\tthis.object = object;\n\tthis.domElement = domElement;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.05;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.panSpeed = 1.0;\n\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t// Touch fingers\n\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t// the target DOM element for key events\n\tthis._domElementKeyEvents = null;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\tthis._domElementKeyEvents = domElement;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().invert();\n\n\t\tvar lastPosition = new Vector3();\n\t\tvar lastQuaternion = new Quaternion();\n\n\t\tvar twoPI = 2 * Math.PI;\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t} else {\n\n\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t}\n\n\t\t\t// restrict theta to be between desired limits\n\n\t\t\tvar min = scope.minAzimuthAngle;\n\t\t\tvar max = scope.maxAzimuthAngle;\n\n\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t}\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove );\n\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t}\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = {\n\t\tNONE: - 1,\n\t\tROTATE: 0,\n\t\tDOLLY: 1,\n\t\tPAN: 2,\n\t\tTOUCH_ROTATE: 3,\n\t\tTOUCH_PAN: 4,\n\t\tTOUCH_DOLLY_PAN: 5,\n\t\tTOUCH_DOLLY_ROTATE: 6\n\t};\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new Spherical();\n\tvar sphericalDelta = new Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new Vector2();\n\tvar rotateEnd = new Vector2();\n\tvar rotateDelta = new Vector2();\n\n\tvar panStart = new Vector2();\n\tvar panEnd = new Vector2();\n\tvar panDelta = new Vector2();\n\n\tvar dollyStart = new Vector2();\n\tvar dollyEnd = new Vector2();\n\tvar dollyDelta = new Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t}\n\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement;\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( /*event*/ ) {\n\n\t\t// no-op\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\tvar needsUpdate = false;\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.update();\n\n\t\t}\n\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\trotateStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartPan( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartDolly( event ) {\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyStart.set( 0, distance );\n\n\t}\n\n\tfunction handleTouchStartDollyPan( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\tif ( scope.enablePan ) handleTouchStartPan( event );\n\n\t}\n\n\tfunction handleTouchStartDollyRotate( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\tif ( scope.enableRotate ) handleTouchStartRotate( event );\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\trotateEnd.set( x, y );\n\n\t\t}\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t}\n\n\tfunction handleTouchMovePan( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanEnd.set( x, y );\n\n\t\t}\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t}\n\n\tfunction handleTouchMoveDolly( event ) {\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyEnd.set( 0, distance );\n\n\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\tdollyOut( dollyDelta.y );\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t}\n\n\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t}\n\n\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t}\n\n\tfunction handleTouchEnd( /*event*/ ) {\n\n\t\t// no-op\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onPointerDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.pointerType ) {\n\n\t\t\tcase 'mouse':\n\t\t\tcase 'pen':\n\t\t\t\tonMouseDown( event );\n\t\t\t\tbreak;\n\n\t\t\t// TODO touch\n\n\t\t}\n\n\t}\n\n\tfunction onPointerMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.pointerType ) {\n\n\t\t\tcase 'mouse':\n\t\t\tcase 'pen':\n\t\t\t\tonMouseMove( event );\n\t\t\t\tbreak;\n\n\t\t\t// TODO touch\n\n\t\t}\n\n\t}\n\n\tfunction onPointerUp( event ) {\n\n\t\tswitch ( event.pointerType ) {\n\n\t\t\tcase 'mouse':\n\t\t\tcase 'pen':\n\t\t\t\tonMouseUp( event );\n\t\t\t\tbreak;\n\n\t\t\t// TODO touch\n\n\t\t}\n\n\t}\n\n\tfunction onMouseDown( event ) {\n\n\t\t// Prevent the browser from scrolling.\n\t\tevent.preventDefault();\n\n\t\t// Manually set the focus since calling preventDefault above\n\t\t// prevents the browser from setting it automatically.\n\n\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n\t\tvar mouseAction;\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase 0:\n\n\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\n\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\n\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tmouseAction = - 1;\n\n\t\t}\n\n\t\tswitch ( mouseAction ) {\n\n\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase MOUSE.PAN:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tscope.dispatchEvent( startEvent );\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault(); // prevent scrolling\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\n\n\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\n\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleTouchStartDollyRotate( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault(); // prevent scrolling\n\t\tevent.stopPropagation();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nOrbitControls.prototype = Object.create( EventDispatcher.prototype );\nOrbitControls.prototype.constructor = OrbitControls;\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nvar MapControls = function ( object, domElement ) {\n\n\tOrbitControls.call( this, object, domElement );\n\n\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\tthis.touches.ONE = TOUCH.PAN;\n\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n};\n\nMapControls.prototype = Object.create( EventDispatcher.prototype );\nMapControls.prototype.constructor = MapControls;\n\nexport { OrbitControls, MapControls };\n","import React, { useEffect } from 'react'\n\nimport { FaceletCubeT, Face } from \"../lib/Defs\";\nimport * as THREE from 'three';\nimport { arrayEqual } from '../lib/Math';\nimport * as chroma from 'chroma-js';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useTheme } from '@mui/material/styles';\nimport { OrbitControls } from '../lib/three/OrbitControls';\n\ntype Config = {\n    cube: FaceletCubeT, width: number, height: number, colorScheme: Array<string>, facesToReveal: Face[],\n    theme: string,\n    hintDistance?: number,\n    enableControl? : boolean\n}\nlet { Vector3 } = THREE\n\n/*\nHow to propagate control of keypress ..? maybe not here, in the app.\n\nLet's look at click analogy: if a user click on sub-component,\nthat message should be propagated upwards to the parent.\n\nThat is, \"keydown\" should transform to some kind of message, e.g. the resulting cube state\nto be passed to the App, which then decides whether to trigger state change or let the cube keep being solved\n\n*/\n\ntype AxesInfo = [THREE.Vector3, THREE.Euler]\nconst TAU = Math.PI * 2;\nconst axesInfo: [THREE.Vector3, THREE.Euler][] = [\n    // UDFBLR\n    [new THREE.Vector3(0, 1, 0), new THREE.Euler(-TAU / 4, 0, 0)],\n    [new THREE.Vector3(0, -1, 0), new THREE.Euler(TAU / 4, 0, 0)],\n    [new THREE.Vector3(0, 0, 1), new THREE.Euler(0, 0, 0)],\n    [new THREE.Vector3(0, 0, -1), new THREE.Euler(0, TAU / 2, 0)],\n    [new THREE.Vector3(-1, 0, 0), new THREE.Euler(0, -TAU / 4, 0)],\n    [new THREE.Vector3(1, 0, 0), new THREE.Euler(0, TAU / 4, 0)],\n];\n\n\nenum CameraState {\n    HOME,\n    PEEK_UFL,\n    PEEK_DFL,\n    PEEK_DFR,\n    PEEK_UBR,\n    PEEK_UBL\n}\ntype ConfigT = {width: number, height: number, colorScheme: Array<string>, mode?: string,\n    faces?: Face[], theme?: string, hintDistance?: number,     enableControl? : boolean,\n    cameraState?: CameraState\n}\n\nconst roundedFace = ((rounded?: number[], cornerRadius?: number, ) => {\n    cornerRadius = cornerRadius || 0.1\n    rounded = rounded || [1, 1, 1, 1]\n    let geo = new THREE.BufferGeometry()\n    let cornerVertices = []\n    let cornerCenter = new THREE.Vector3(1 - cornerRadius, 1 - cornerRadius, 0)\n    let squareCorner = new THREE.Vector3(1, 1, 0)\n    for (let i = 0; i <= 90; i += 10) {\n        let degree = (i * Math.PI) / 180\n        cornerVertices.push( \n            cornerCenter.clone().add(new THREE.Vector3(Math.cos(degree), Math.sin(degree), 0).multiplyScalar(cornerRadius))\n        )\n    }\n    let vertices = []\n    for (let i = 0; i < 4; i++) {\n        if (rounded[i]) {\n            vertices.push(...cornerVertices)\n        } else {\n            vertices.push(squareCorner.clone())\n        }\n        cornerVertices = cornerVertices.map(x => x.clone().applyAxisAngle(new Vector3(0, 0, 1), 0.5 * Math.PI))\n        squareCorner.applyAxisAngle(new Vector3(0, 0, 1), 0.5 * Math.PI)\n    }\n    //vertices.push(new Vector3(0, 0, 0))\n\n    //let vertices_float32 = new Float32Array( vertices.length * 3)\n    //let vertices_attr = new THREE.BufferAttribute(vertices_float32, 3).copyVector3sArray( vertices)\n    // console.log(vertices_attr)\n    let faces = []\n    for (let i = 0; i< vertices.length; i++) {\n        let i1 = (i + 1) % vertices.length;\n        faces.push(vertices[vertices.length - 1])\n        faces.push(vertices[i])\n        faces.push(vertices[i1])\n    }\n    geo.setFromPoints(faces)\n\n    return geo\n})\n\nconst getCameraPosFromState = function (cstate: CameraState) : [number[], THREE.Vector3]{\n    const cameraPosUFR = [2.5, 3.5, 3]\n    const cameraPosUFL = [-2, 3.5, 3]\n    const cameraPosDFL = [-2, -3.5, 3]\n    const cameraPosDFR = [2, -3.5, 3]\n    const cameraPosUBR = [2.5, 3.5, -3]\n    const cameraPosUBL = [-2, 3.5, -3]\n\n    const upVecLookingDownUB = new THREE.Vector3(0, 0, -1)\n    const upVecLookingDownUBL = new THREE.Vector3(0, 0.1, -1)\n    const upVecDefault = new THREE.Vector3(0, 1, 0)\n    switch (cstate) {\n        case CameraState.HOME: return [cameraPosUFR, upVecDefault]\n        case CameraState.PEEK_DFL: return [cameraPosDFL, upVecDefault]\n        case CameraState.PEEK_DFR: return [cameraPosDFR, upVecDefault]\n        case CameraState.PEEK_UFL: return [cameraPosUFL, upVecDefault]\n        case CameraState.PEEK_UBL: return [cameraPosUBL, upVecLookingDownUBL]\n        default: return [cameraPosUBR, upVecLookingDownUB]\n    }\n}\nconst redraw_cube = function (cube: FaceletCubeT, config: ConfigT ) {\n    let { width, height, colorScheme, mode, faces, theme, enableControl} = config\n    let hintDistance = config.hintDistance || 3\n    const bgColor = theme === \"bright\" ? \"#eeeeef\" : '#252525' \n\n    mode = mode || \"FRU\"\n    let facesToReveal = faces || [Face.L, Face.B, Face.D]\n    //facesToReveal = [Face.L]\n\n    const scene = new THREE.Scene()\n    const angle = 50\n    const camera = new THREE.PerspectiveCamera(angle, width / height, 0.1, 1000)\n\n    const mag = 1.0\n    const alpha = 0.5\n    const enableBorder = true\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true })\n    renderer.setSize(width, height, true);\n    //renderer.setViewport( 0, 0, width * window.devicePixelRatio, height * window.devicePixelRatio);\n    renderer.setClearColor(bgColor) // #70788a') //#5a606e') // '#373B43') // '#eeeeee')\n    renderer.setPixelRatio(window.devicePixelRatio)\n    let controls = new OrbitControls( camera, renderer.domElement );\n    controls.enabled = !!config.enableControl\n\n    const angleScale = Math.sin(70 / 180 * Math.PI)  /  Math.sin(angle / 180 * Math.PI)\n    const scale = (hintDistance > 5) ? .96 * angleScale : .9 * angleScale\n\n    const cameraState = config.cameraState || CameraState.HOME\n    const [cameraPositionRaw, cameraUp] = getCameraPosFromState(cameraState)\n    const cameraPosition = (mode === \"FRU\") ?\n        new THREE.Vector3(cameraPositionRaw[0] * scale, \n                          cameraPositionRaw[1] * scale,\n                          cameraPositionRaw[2] * scale) :\n        new THREE.Vector3(0 / 1.1, 3 / 1.1, 3 / 1.1)\n\n    //console.log(\"Setting camera up \", cameraUp, \" camera pos\", cameraPosition)\n    camera.up.copy(cameraUp)\n    camera.position.copy(cameraPosition)\n    camera.aspect = width / height;\n    camera.lookAt(new THREE.Vector3(0, 0, 0))\n\n    let stickers_tmpl: THREE.Mesh[], stickerwrap_tmpl: THREE.Mesh\n\n    const geos : THREE.BufferGeometry[] = []; // new THREE.PlaneGeometry(0.89 * mag * 2, 0.89 * mag * 2)\n    const geo_border = new THREE.PlaneGeometry(2.0, 2.0)//1.0 * mag * 2, 1.0 * mag * 2)\n\n    let materials_border = new THREE.MeshBasicMaterial({ color: 0x000000, side: THREE.FrontSide })\n    stickerwrap_tmpl = (() => {\n        let mesh = new THREE.Mesh(geo_border, materials_border)\n        mesh.setRotationFromEuler(axesInfo[0][1])\n        return mesh\n    })()\n\n    const sticker_scale = 0.88\n    const corner_radius = 0.4\n    const hint_scale = 0.95\n    const rounded_patterns = [\n        [0, 0, 0, 1],\n        [0, 0, 1, 1],\n        [0, 0, 1, 0],\n        [1, 0, 0, 1],\n        [1, 1, 1, 1],\n        [0, 1, 1, 0],\n        [1, 0, 0, 0],\n        [1, 1, 0, 0],\n        [0, 1, 0, 0]\n    ];\n\n    function drawCube(faces: FaceletCubeT, colorScheme: Array<string>): THREE.Group {\n        //console.log(\"update color scheme \", colorScheme_)\n        let materials = Array(7).fill(0).map((_, i) => {\n            let mat = new THREE.MeshBasicMaterial({ color: colorScheme[i], side: THREE.DoubleSide });\n            mat.alphaTest = alpha;\n            return mat\n        })\n\n        stickers_tmpl = materials.map((mat) => {\n            return rounded_patterns.map(pattern => {\n                let geo = roundedFace(pattern, corner_radius)\n                geos.push(geo)\n                let mesh = new THREE.Mesh(geo, mat)\n                mesh.scale.set(sticker_scale, sticker_scale, sticker_scale)\n                mesh.setRotationFromEuler(axesInfo[0][1])\n                return mesh\n            })\n        }).flat()\n\n        let hint_mesh = Array(7).fill(0).map((_, i) => {\n            let color = (theme === \"bright\") \n                ? chroma.mix(colorScheme[i], 'white', 0.18).hex()\n               :  chroma.mix(colorScheme[i], 'black', 0.35).hex()\n \n               // \n            //chroma.default(colorScheme[i]).brighten(0.7).hex()\n                  //desaturate(2).hex() //darken(0.5).hex()\n            let mat = new THREE.MeshBasicMaterial({ color, side: THREE.DoubleSide });\n\n            let geo = roundedFace([1,1,1,1], corner_radius)\n            geos.push(geo)\n            let mesh = new THREE.Mesh(geo, mat)\n            mesh.scale.set(hint_scale, hint_scale, hint_scale)\n            mesh.setRotationFromEuler(axesInfo[0][1])\n            return mesh\n        })\n\n\n        const cube = new THREE.Group();\n        for (let i = 0; i < 6; i++) {\n            const cubie = new THREE.Group();\n            const rot = new THREE.Matrix4().makeRotationFromEuler(axesInfo[i][1]);\n            const rot1 = new THREE.Matrix4().makeRotationFromEuler(axesInfo[1][1]);\n            cubie.setRotationFromMatrix(rot.multiply(rot1))\n            for (let z = -1; z <= 1; z++) {\n                for (let x = -1; x <= 1; x++) {\n                    let idx = (z + 1) * 3 + (x + 1)\n\n                    const curr_tmpl = stickers_tmpl[faces[i][idx] * 9 + idx]\n                    const sticker = curr_tmpl.clone()\n                    const stickerwrap = stickerwrap_tmpl.clone()\n\n                    const eps = 0.05\n                    sticker.position.copy(new THREE.Vector3(x * 2, 3, z * 2))\n                    stickerwrap.position.copy(new THREE.Vector3(x * 2, 3 - eps, z * 2))\n\n                    if (facesToReveal.indexOf(i) > -1) { // (i === 5 && mode === \"UF\")) {\n                        const stickerhint = hint_mesh[faces[i][idx]].clone()\n                        stickerhint.position.copy(new THREE.Vector3(x * 2, 3 + hintDistance, z * 2))\n                        cubie.add(stickerhint)\n                    }\n                    if (enableBorder)\n                        cubie.add(stickerwrap)\n\n                    cubie.add(sticker)\n                }\n\n            }\n            cube.add(cubie)\n        }\n        cube.scale.set(1 / 3, 1 / 3, 1 / 3)\n        return cube\n    }\n\n    let cubeG = drawCube(cube, colorScheme)\n    scene.add(cubeG)\n\n    const render = () => {\n        controls.update();\n        renderer.render(scene, camera)\n    }\n    render()\n\n    let frameID = -1\n    const animate = () => {\n        frameID = requestAnimationFrame(animate)\n        renderer.render(scene, camera)\n    }\n    animate()\n\n    const updateCubeAndColor = (cube: FaceletCubeT, colorScheme: Array<string>) => {\n        scene.remove(cubeG)\n        cubeG.clear()\n        cubeG = drawCube(cube, colorScheme)\n        scene.add(cubeG)\n        renderer.render(scene, camera)\n        return renderer\n    }\n\n    const cleanup = () => {\n        geos.forEach(g => g.dispose())\n        materials_border.dispose()\n        geo_border.dispose()\n        scene.remove(cubeG)\n        cancelAnimationFrame(frameID)\n    }\n    return {\n        updateCubeAndColor,\n        getRenderer: () => renderer,\n        cleanupFunc: cleanup,\n        renderControls: render\n    }\n    //let defaultColorScheme = [ 0x00ff00, 0x0000ff, 0xff0000,0xff8800,0xffff00, 0xffffff]\n}\n\nlet drawCube = (function(){\n    let config_cache : ConfigT | null = null\n    let painter : Painter | null = null\n    let func = (cube: FaceletCubeT, config: ConfigT) => {\n        if (config_cache === null) {\n            painter?.cleanupFunc()\n\n            painter = redraw_cube(cube, config)\n            config_cache = config\n            return painter\n        }\n        else if (config.width === config_cache.width && config.height === config_cache.height &&\n            arrayEqual(config.faces || [], config_cache.faces || []) && config.theme === config_cache.theme &&\n            config.hintDistance === config_cache.hintDistance && config.enableControl === config_cache.enableControl\n            && config.cameraState === config_cache.cameraState) {\n\n            painter?.updateCubeAndColor(cube, config.colorScheme)\n            config_cache = config\n            return painter!\n        } else {\n            painter?.cleanupFunc()\n            painter = redraw_cube(cube, config)\n            config_cache = config\n            return painter!\n        }\n    }\n    return func\n})\n\ntype Painter = {\n    updateCubeAndColor: (cube: FaceletCubeT, scheme: Array<string>) => THREE.WebGLRenderer,\n    getRenderer: () => THREE.WebGLRenderer,\n    cleanupFunc: () => void,\n    renderControls: () => void\n\n}\n\nfunction CubeSim(props: Config) {\n    const mount = React.useRef<HTMLDivElement | null>(null)\n    const [cameraState, setCameraState] = React.useState<CameraState>(CameraState.HOME);\n    let { width, height, colorScheme, facesToReveal, hintDistance, theme} = props\n    let cubePainter = React.useMemo(drawCube, [])\n\n    const gt_xs = useMediaQuery(useTheme().breakpoints.up('sm'));\n    const enableControl = gt_xs\n\n    let painter = cubePainter(props.cube, {\n            width, height, colorScheme, faces: facesToReveal, theme, hintDistance, enableControl,\n            cameraState})\n\n    useEffect( () => {\n        let dom = window //painter.getRenderer().domElement\n        function downHandler ( event: KeyboardEvent){\n            let suppressLogging = 0\n            // intercept keyboard event for local control\n            if (event.key === \"1\") {\n                setCameraState(CameraState.PEEK_DFL);\n            }\n            if (event.key === \"2\") {\n                setCameraState(CameraState.PEEK_DFR);\n            }\n            if (event.key === \"3\") {\n                setCameraState(CameraState.PEEK_UFL);\n            }\n            if (event.key === \"9\") {\n                setCameraState(CameraState.PEEK_UBL);\n            }\n            if (event.key === \"0\") {\n                setCameraState(CameraState.PEEK_UBR);\n            }\n            else {\n                suppressLogging = 1\n            }\n            if (~suppressLogging) {\n                //console.log(\"CubeSim camera rotateion with key \", event.key)\n            }\n        }\n        function upHandler (event: KeyboardEvent) {\n            setCameraState(CameraState.HOME);\n        }\n        dom.addEventListener('keydown', downHandler);\n        dom.addEventListener('keyup', upHandler);\n        return () => {\n            dom.removeEventListener('keydown', downHandler);\n            dom.addEventListener('keyup', upHandler);\n        };\n    });\n\n    useEffect( () => {\n        let dom = mount.current!\n        dom.appendChild(painter.getRenderer().domElement) //renderer.domElement)\n        return () => {\n            dom.removeChild(painter.getRenderer().domElement)\n        }\n    })\n\n    return <div\n        ref={mount}\n        style={{ width: props.width, height: props.height, zIndex: 1 }}\n    />;\n}\n\nexport default CubeSim","import { MoveT, OriChg, PermChg, StickerT, StickerExtT, CornerCoord, EdgeCoord, cstimer_corners_coord, cstimer_edges_coord, CenterCoord, centers_coord } from \"./Defs\";\nimport { u, d, f, b, l, r, m, e, s} from \"./Defs\";\nimport { FaceletT, FaceletCubeT, corners_coord, edges_coord, u_face, f_face, color_map } from \"./Defs\";\nimport { Typ, Face, C, E, T, U, D, F, B, L, R } from \"./Defs\";\nimport { rand_int, rand_shuffle, getParity, rand_choice, arrayEqual } from \"./Math\";\n\nconst C_MOD = 3;\nconst E_MOD = 2;\nconst T_MOD = 1;\n\nexport class CubieCube {\n    cp: number[] = [];\n    co: number[] = [];\n    ep: number[] = [];\n    eo: number[] = [];\n    tp: number[] = [];\n    // The addition of tp is not necessary, but helps us deal with slice moves in Roux during search and simcube.\n    deserialize(s: string) {\n        let obj = JSON.parse(s)\n        this.set(obj);\n        return this\n    }\n    serialize() {\n        let {cp, co, ep, eo, tp} = this\n        return JSON.stringify({cp, co, ep, eo, tp});\n    }\n\n    Id() : CubieCube {\n        this.set({\n            cp: [0, 1, 2, 3, 4, 5, 6, 7],\n            co: [0, 0, 0, 0, 0, 0, 0, 0],\n            ep: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\n            eo: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            tp: [0, 1, 2, 3, 4, 5]\n        })\n        return this\n    }\n    clone() : CubieCube {\n        return new CubieCube({\n            cp: [...this.cp],\n            co: [...this.co],\n            ep: [...this.ep],\n            eo: [...this.eo],\n            tp: [...this.tp]\n        })\n    }\n    constructor(value?: {cp: number[], co: number[], ep: number[], eo: number[], tp?: number[]} | CubieCube) {\n        if (value instanceof CubieCube) {\n            this.set({\n                cp: value.cp, co: value.co, ep: value.ep, eo: value.eo, tp: value.tp\n            })\n        }\n        else if (value) {\n            this.cp = value.cp\n            this.co = value.co\n            this.ep = value.ep\n            this.eo = value.eo\n            this.tp = value.tp || [0, 1, 2, 3, 4, 5] // UD FB LR\n        } else {\n            this.Id()\n        }\n    }\n    set(value: {cp?: number[], co?: number[], ep?: number[], eo?: number[], tp?: number[]} | CubieCube) {\n        this.cp = value.cp || this.cp\n        this.co = value.co || this.co\n        this.ep = value.ep || this.ep\n        this.eo = value.eo || this.eo\n        this.tp = value.tp || this.tp\n    }\n    _apply_partial(o: Array<number>, p: Array<number>, oc: Array<OriChg>, pc: Array<PermChg>, mod: number) {\n        let o_new = [...o];\n        let p_new = [...p];\n\n        for (let i = 0; i < oc.length; i++) {\n            //let [src, dst] = pc[i];\n            let src = pc[i][0], dst = pc[i][1];\n            p_new[dst] = p[src];\n            o_new[dst] = (o[src] + oc[i]) % mod;\n        }\n        return [o_new, p_new]\n    }\n    _apply_partial_perm(p: Array<number>, pc: Array<PermChg>, mod: number) {\n        let p_new = [...p];\n\n        for (let i = 0; i < pc.length; i++) {\n            //let [src, dst] = pc[i];\n            let src = pc[i][0], dst = pc[i][1];\n            p_new[dst] = p[src];\n        }\n        return p_new\n    }\n\n    // all side-effect-less\n    apply_one(move: Move) {\n        let [co, cp] = this._apply_partial(this.co, this.cp, move.coc, move.cpc, C_MOD)\n        let [eo, ep] = this._apply_partial(this.eo, this.ep, move.eoc, move.epc, E_MOD)\n        let tp = this._apply_partial_perm(this.tp, move.tpc, T_MOD)\n        return new CubieCube({ co, cp, eo, ep, tp })\n    }\n\n    static generate_apply_partial_func_perm(pc: Array<PermChg>, mod: number, p: string) {\n        return `\n        let ${p}_new = [...${p}];\n        src = 0, dst = 0;\n        ${Array(pc.length).fill(0).map( (_, i) => {\n            let src = pc[i][0], dst = pc[i][1];\n            return `\n                ${p}_new[${dst}] =  ${p}[${src}];\n            `\n        }).join(\"\\n\")}\n        // return [ ${p}_new]\n        `\n    }\n    static generate_apply_partial_func(oc: Array<OriChg>, pc: Array<PermChg>, mod: number, o: string, p: string) {\n        return `\n        let ${o}_new = [...${o}];\n        let ${p}_new = [...${p}];\n        src = 0, dst = 0;\n        ${Array(oc.length).fill(0).map( (_, i) => {\n            let src = pc[i][0], dst = pc[i][1], ori = oc[i];\n            return `\n                ${p}_new[${dst}] =  ${p}[${src}];\n                ${o}_new[${dst}] = (${o}[${src}] + ${ori}) % ${mod};\n            `\n        }).join(\"\\n\")}\n        // return [${o}_new, ${p}_new]\n        `\n    }\n    static generate_apply_func(move: Move) : (c: CubieCube) => CubieCube {\n        // eslint-disable-next-line no-new-func\n        return new Function(\"cube\", `\n        let {co, cp, eo, ep, tp} = cube;\n        ${CubieCube.generate_apply_partial_func(move.coc, move.cpc, C_MOD, \"co\", \"cp\")}\n        ${CubieCube.generate_apply_partial_func(move.eoc, move.epc, E_MOD, \"eo\", \"ep\")}\n        ${CubieCube.generate_apply_partial_func_perm(move.tpc, T_MOD, \"tp\")}\n        return ({ co: co_new, cp: cp_new, eo: eo_new, \n            ep: ep_new, tp: tp_new })\n        `) as (c: CubieCube) => CubieCube\n    }\n\n    apply(move: Move | Array<Move> | MoveSeq | string): CubieCube {\n        if (Array.isArray(move) || move instanceof MoveSeq) {\n            let moves = Array.isArray(move) ? move : move.moves\n            let cube = this.clone()\n            for (let i = 0; i < moves.length; i++) {\n                cube = cube.apply_one(moves[i])\n            }\n            return cube\n        } else if (typeof move === \"string\") {\n            return this.apply(new MoveSeq(move))\n        }\n        else {\n            return this.apply_one(move)\n        }\n    }\n\n    static _rotate_coord(fs: Face[]) {\n        let faces = [...fs] as Face[]\n        let last_face = faces[faces.length - 1];\n        for (let i = faces.length - 1; i > 0; i--) {\n            faces[i] = faces[i - 1];\n        }\n        faces[0] = last_face\n        return faces\n    }\n    static _backward_rotate_coord(fs: Face[]){\n        let faces = [...fs] as Face[]\n        let first_face = faces[0]\n        for (let i = 0; i < faces.length - 1; i++) {\n            faces[i] = faces[i + 1];\n        }\n        faces[faces.length - 1] = first_face\n        return faces\n    }\n\n    // facelet mapping: from position to piece\n    _to_facelet_mapping(corners_coord: CornerCoord[], edges_coord: EdgeCoord[], centers_coord: CenterCoord[]) {\n        let facelet_mapping : [Face[], Face[]][]= []\n\n        for (let i = 0; i < 8; i++) {\n            let pos = corners_coord[i] as Face[]\n            let piece = corners_coord[this.cp[i]] as Face[]\n\n            for (let j = 0; j < this.co[i];j++) {\n                piece = CubieCube._rotate_coord(piece)\n            }\n            facelet_mapping.push([pos, piece])\n        }\n        for (let i = 0; i < 12; i++) {\n            let pos = edges_coord[i] as Face[]\n            let piece = edges_coord[this.ep[i]] as Face[]\n            for (let j = 0; j < this.eo[i];j++) {\n                piece = CubieCube._rotate_coord(piece)\n            }\n            facelet_mapping.push([pos, piece])\n        }\n        for (let i = 0; i<6;i++) {\n            let pos = centers_coord[i]\n            let piece = centers_coord[this.tp[i]] as Face[]\n            facelet_mapping.push([ pos, piece])\n        }\n        return facelet_mapping\n    }\n\n    _from_facelet_mapping (fm: [Face[], Face[]][], custom_corners_coord: CornerCoord[], custom_edges_coord: EdgeCoord[], custom_centers_coord: CenterCoord[] ) {\n        let cube = new CubieCube()\n\n        let match_pos_piece = (pos: Face[], piece: Face[], coord: Face[][], parity: number) : [number, number, number]=> {\n            let expected = new Map(coord.map( (x, i) => [x.toString(), i]))\n            let ori = 0\n            while (!expected.has(pos.toString())) {\n                pos = CubieCube._backward_rotate_coord(pos)\n                ori--;\n                if (ori <= -parity) break;\n            }\n            while (!expected.has(piece.toString())) {\n                piece = CubieCube._backward_rotate_coord(piece)\n     \n                ori++;\n                if (ori >= 10) {\n                    console.warn(\"can't match piece\", piece, expected)\n                    break\n                }\n            }\n\n            ori = (ori + parity) % parity;\n            return [ori, expected.get(pos.toString())!, expected.get(piece.toString())! ]\n        }\n\n        for (let coord_pair of fm) {\n            let pos = coord_pair[0], piece = coord_pair[1]\n            let coord : Face[][] = (pos.length === 2) ? custom_edges_coord : \n                        (pos.length === 3) ? custom_corners_coord :\n                         custom_centers_coord ;\n            let [newOri,newpos,newPerm] = match_pos_piece(pos, piece, coord, pos.length);\n\n            //console.log( pp([pos, piece]), [newOri, newpos,newPerm])\n            if (pos.length === 2) {\n                cube.eo[newpos] = newOri;\n                cube.ep[newpos] = newPerm;\n            } else if (pos.length === 3){\n                cube.co[newpos] = newOri;\n                cube.cp[newpos] = newPerm;\n            } else {\n                cube.tp[newpos] = newPerm;\n            }\n        }\n        return cube\n    }\n\n    to_cstimer_cube() {\n        let facelet_mapping = this._to_facelet_mapping(corners_coord, edges_coord, centers_coord)\n        let cube = this._from_facelet_mapping(facelet_mapping, cstimer_corners_coord, cstimer_edges_coord, centers_coord)\n        return cube\n    }\n\n    is_solveable() {\n        if (this.tp[0] !== 0) {\n            this.apply(new MoveSeq(\"M2\")) // assuming lse\n        }\n        let perm_correct = (getParity(this.cp) + getParity(this.ep)) % 2 === 0\n        let ori_correct = (this.co.reduce((x, y) => x + y, 0) % 3 === 0) && (this.eo.reduce((x, y) => x + y, 0) % 2 === 0)\n        return perm_correct && ori_correct\n    }\n\n    changeBasis(s: MoveSeq) {\n        // only take x and y for now\n        let facelet_mapping = this._to_facelet_mapping(corners_coord, edges_coord, centers_coord)\n\n        let transformed_mapping = s.moves.reduce( (mapping, move) : [Face[], Face[]][] => {\n            let face_mapping = Object.fromEntries(move.tpc)\n            //console.log(\"applying face mapping for \", move.name, face_mapping)\n            //console.log(\"before\", pp(mapping))\n            let result = mapping.map( ([face_pos, face_target]) => \n                [face_pos.map(f => face_mapping[f] ?? f ),\n                 face_target.map(f => face_mapping[f] ?? f) ]\n            )\n            //console.log('after', pp(result))\n            return result as any \n        } , facelet_mapping)\n        //console.log(s.toString(), facelet_mapping, transformed_mapping)\n        let cube = this._from_facelet_mapping(transformed_mapping, corners_coord, edges_coord, centers_coord)\n        return cube\n        //let cube = this._from_facelet_mapping(facelet_mapping, corners_coord, edges_coord, centers_coord)\n    }\n}\n\n\n/* Moves */\n/* We will generate all the moves based on the base moves and rotations, and return them in an array */\nexport class Move {\n    cpc: Array<PermChg> = [];\n    coc: Array<OriChg> = [];\n    epc: Array<PermChg> = [];\n    eoc: Array<OriChg> = [];\n    tpc: Array<PermChg> = [];\n    name: string = \"\";\n    constructor(arg?: Array<Move> | CubieCube | Move | MoveT, name?: string) {\n        if (Array.isArray(arg)) {\n            this.from_moves(arg, name!)\n        } else if (arg instanceof Move){\n            this.cpc = [...arg.cpc]\n            this.coc = [...arg.coc]\n            this.epc = [...arg.epc]\n            this.eoc = [...arg.eoc]\n            this.tpc = [...arg.tpc]\n            this.name = name!\n        } else if (arg instanceof CubieCube) {\n            this.from_cube(arg, name!)\n        } else if (arg) {\n            this.set(arg)\n        }\n    }\n    set(move: Move | MoveT) {\n        this.cpc = move.cpc\n        this.coc = move.coc\n        this.epc = move.epc\n        this.eoc = move.eoc\n        this.tpc = move.tpc\n        this.name = move.name\n    }\n    from_cube(cube: CubieCube, name: string) {\n        let get_change = (p: Array<number>, o: Array<number>, acc_p: Array<PermChg>, acc_o: Array<OriChg>) => {\n            for (let i = 0; i < p.length; i++) {\n                if (i === p[i] && o[i] === 0) {\n                } else {\n                    acc_p.push([p[i], i]);\n                    acc_o.push(o[i]);\n                }\n            }\n        }\n        get_change(cube.cp, cube.co, this.cpc, this.coc);\n        get_change(cube.ep, cube.eo, this.epc, this.eoc);\n        get_change(cube.tp, [0, 0, 0, 0, 0, 0], this.tpc, []);\n        this.name = name\n        return this\n    }\n    from_moves (moves: Move[], name: string) {\n        this.from_cube(new CubieCube().apply(moves), name)\n        return this\n    }\n    clone() {\n        return new Move(this, this.name)\n    }\n    static make_rot_set(move: Move): Array<Move> {\n        return [move,\n            new Move().from_moves([move, move], move.name + \"2\"),\n            new Move().from_moves([move, move, move], move.name + \"'\"),\n        ]\n    }\n\n    static generate_base_moves = () => {\n        let make_rot_set = Move.make_rot_set\n        let us = make_rot_set(new Move(u));\n        let fs = make_rot_set(new Move(f));\n        let rs = make_rot_set(new Move(r));\n        let ls = make_rot_set(new Move(l));\n        let ds = make_rot_set(new Move(d));\n        let bs = make_rot_set(new Move(b));\n        let ms = make_rot_set(new Move(m));\n        let es = make_rot_set(new Move(e));\n        let ss = make_rot_set(new Move(s));\n\n        let rw = new Move([new Move(r), ms[2]], \"r\")\n        let rws = make_rot_set(rw)\n        let lw = new Move([new Move(l), new Move(m)], \"l\")\n        let lws = make_rot_set(lw)\n        let uw = new Move([new Move(u), new Move(e)], \"u\")\n        let uws = make_rot_set(uw)\n        let fw = new Move([new Move(f), new Move(s)], \"f\")\n        let fws = make_rot_set(fw)\n\n        let x = new Move([new Move(r), ls[2], ms[2]], \"x\")\n        let xs = make_rot_set(x)\n        let y = new Move([new Move(u), new Move(e), ds[2]], \"y\")\n        let ys = make_rot_set(y)\n        let z = new Move([x, y, x, x, x], \"z\")\n        let zs = make_rot_set(z)\n\n        let id = new Move(new CubieCube(), \"id\")\n        let moves = [\n            id,\n            us, fs, rs, ls, ds, bs, ms, es, ss,\n            xs, ys, zs,\n            rws, lws, uws, fws\n        ].flat()\n        let moves_dict: { [key: string]: Move } = Object.create({})\n        moves.forEach(m => moves_dict[m.name] = m)\n        return moves_dict\n    }\n    static all: {[key: string]: Move} = Move.generate_base_moves();\n\n    inv(): Move {\n        let name: string\n        switch (this.name[this.name.length - 1]) {\n            case \"'\": name = this.name.slice(0, this.name.length - 1); break\n            case \"2\": name = this.name; break\n            default: name = this.name + \"'\"\n        }\n        return Move.all[name]\n    }\n\n    toString() {\n        return this.name\n    }\n}\n\n\nexport class MoveSeq {\n    moves: Move[] = [];\n\n    constructor(moves: Move[] | string) {\n        if (typeof moves === \"string\") {\n            this.parse(moves);\n        } else {\n            this.moves = moves\n        }\n    }\n\n    static quarterMap : {[key: string]: string} = ({\n        \"U2\": \"U'\",\n        \"R2\": \"R'\",\n        \"r2\": \"r'\",\n        \"M2\": \"M'\",\n        \"L2\": \"L\",\n    });\n    toQuarter() {\n        let nm : Move[] = []\n        for (let i = 0 ; i < this.moves.length; i++) {\n            let m = this.moves[i]\n            if (m.name[1] === \"2\") {\n                let k = MoveSeq.quarterMap[m.name] || m.name[0]\n                nm.push(Move.all[ k ])\n                nm.push(Move.all[ k ])\n            } else {\n                nm.push(m)\n            }\n        }\n        return new MoveSeq(nm)\n    }\n\n    static _combine(move1: Move, move2: Move) : MoveSeq {\n        const getCnt = (name : string) => {\n            if (name.length === 1) return 1\n            return name[1] === \"2\" ? 2 : 3\n        }\n        const getStr = (cnt : number) => {\n            return (cnt === 1) ? \"\" : (cnt === 2 ? \"2\" : \"'\")\n        }\n        if (move1.name[0] === move2.name[0]) {\n            let cnt = (getCnt(move1.name) + getCnt(move2.name)) % 4\n            if (cnt === 0) return new MoveSeq([])\n            else return new MoveSeq([ Move.all[move1.name[0] + getStr(cnt)] ])\n        } else {\n            return new MoveSeq([move1, move2])\n        }\n    }\n\n    remove_setup() {\n        let rotset = new Set([\"x\", \"x'\", \"x2\", \"y\", \"y'\", \"y2\", \"z\", \"z'\", \"z2\"]);\n        while (this.moves.length > 0 && rotset.has(this.moves[0].name)) {\n            this.moves.shift()\n        }\n        return this\n    }\n\n    parse_line(str: string) {\n        let tokens = []\n        let token = \"\"\n        let comment_idx = str.search(/\\/\\//)\n        if (comment_idx > -1) str = str.slice(0, comment_idx)\n        for (let i = 0; i < str.length; i++) {\n            let ch = str[i]\n            if (ch === '2' || ch === '\\'') {\n                if (token.length === 1) {\n                    token += str[i];\n                    tokens.push(token)\n                    token = \"\"\n                }\n            } else if (ch === ' ') {\n                if (token.length > 0) {\n                    tokens.push(token); token = \"\";\n                }\n            } else {\n                const ord = ch.charCodeAt(0)\n                if ( (65 <= ord && ord < 65 + 26) || (97 <= ord && ord < 97 + 26)) {\n                    if (token.length > 0) {\n                        tokens.push(token)\n                        token = \"\"\n                    }\n                    token += str[i]\n                }\n            }\n        }\n        let moves = []\n        if (token.length > 0) tokens.push(token);\n        for (let token of tokens) {\n            let move = Move.all[token]\n            if (move) {\n                moves.push(move)\n            }\n        }\n        return moves\n    }\n    parse(str: string) {\n        this.moves = str.split(\"\\n\").map(x => this.parse_line(x)).flat()\n        return this\n    }\n\n    collapse() : MoveSeq {\n        let newMoves : Move[] = []\n        let moves = this.moves\n        while (moves.length > 0) {\n            const nextMove = moves.shift()!\n            if (newMoves.length === 0) {\n                newMoves.push(nextMove)\n            } else {\n                const move = newMoves.pop()!\n                const combined = MoveSeq._combine(move, nextMove)\n                for (let m of combined.moves)\n                    newMoves.push(m)\n            }\n        }\n        return new MoveSeq(newMoves);\n    }\n\n    inv() {\n        let moves: Move[] = this.moves.slice(0).reverse().map(x => x.inv()).flat()\n        return new MoveSeq(moves)\n    }\n\n    slice(n: number) {\n        let moves: Move[] = this.moves.slice(0, n)\n        return new MoveSeq(moves)\n    }\n\n    length() {\n        return this.moves.length\n    }\n\n    static add_auf(moves: Array<Move>, auf_moves?: Array<Move | MoveSeq>) {\n        auf_moves = auf_moves || [ Move.all[\"id\"], Move.all[\"U\"], Move.all[\"U'\"], Move.all[\"U2\"]]\n        let auf_move = rand_choice(auf_moves)\n        if (auf_move instanceof MoveSeq) {\n            moves.concat(auf_move.moves)\n        } else {\n            moves.push(auf_move)\n        }\n    }\n\n    toString(useMetric?: string) {\n        return this.moves.map(m => m.toString()).join(\" \") + \" \" + (useMetric ? \"(\" + this.moves.length + \")\" : \"\")\n    }\n}\n\n/* Faces */\nlet FaceletCube = function () {\n    let mult_move = (face: FaceletT, move: Move): FaceletT => {\n        let face_new: FaceletT = [...face]\n        let mod_for_typ = (typ: Typ) => {\n            switch (typ) {\n                case C: return 3;\n                case E: return 2;\n                case T: return 1\n            }\n        }\n        let work = (p: PermChg, o: number, typ: Typ) => {\n            let mod = mod_for_typ(typ)\n            let [p1, p2] = p\n            for (let i = 0; i < face.length; i++) {\n                let [p_curr, o_curr, typ_curr] = face[i];\n                if (typ_curr === typ && p_curr === p1) {\n                    face_new[i] = [p2, (o_curr + o) % mod, typ]\n                }\n            }\n        }\n        for (let i = 0; i < move.cpc.length; i++) {\n            work(move.cpc[i], move.coc[i], C)\n        }\n        for (let i = 0; i < move.epc.length; i++) {\n            work(move.epc[i], move.eoc[i], E)\n        }\n        for (let i = 0; i < move.tpc.length; i++) {\n            work(move.tpc[i], 0, T)\n        }\n        return face_new\n    }\n    let color_of_c = (p: number, o1: number, o2: number) =>\n    corners_coord[p][(3 - o1 + o2) % 3];\n    let color_of_e = (p: number, o1: number, o2: number) =>\n        edges_coord[p][(2 - o1 + o2) % 2];\n    let color_of_t = (p: number) => [U, D, F, B, L, R][p]\n\n    let color_of_sticker = (cube: CubieCube, sticker: StickerT) => {\n        let [p, o, typ] = sticker\n        if (typ === C) {\n            return color_of_c(cube.cp[p], cube.co[p], o)\n        } else if (typ === E) {\n            return color_of_e(cube.ep[p], cube.eo[p], o)\n        } else if (typ === T) {\n            return color_of_t(cube.tp[p])\n        } else {\n            throw Error(\"unidentified type \" + typ)\n        }\n    }\n\n    let from_cubie_partial = (cube: CubieCube, facelet: FaceletT) => {\n        return facelet.map(s => color_of_sticker(cube, s))\n    }\n    let from_cubie_partial_masked = (cube: CubieCube, facelet: FaceletT, mask: Mask) => {\n        return facelet.map(([p, o, typ]) => {\n            if (typ === C) {\n                if (mask.cp[cube.cp[p]] === 1)\n                    return color_of_c(cube.cp[p], cube.co[p], o)\n                else\n                    return Face.X\n            } else if (typ === E) {\n                if (mask.ep[cube.ep[p]] === 1)\n                    return color_of_e(cube.ep[p], cube.eo[p], o)\n                else\n                    return Face.X\n            } else if (typ === T) {\n                if (mask.tp && mask.tp[cube.tp[p]] === 0)\n                    return Face.X\n                else\n                    return color_of_t(cube.tp[p])\n            } else {\n                throw Error(\"unidentified type \" + typ)\n            }\n        })\n    }\n\n    let moves = Move.all\n    let generate_base_facelets = () => {\n        let d_face = mult_move(f_face, moves[\"x'\"])\n        let l_face = mult_move(f_face, moves[\"y\"])\n        let r_face = mult_move(f_face, moves[\"y'\"])\n        let b_face = mult_move(f_face, moves[\"y2\"])\n        return {\n            d_face, l_face, r_face, b_face\n        }\n    }\n    let { d_face, l_face, r_face, b_face } = generate_base_facelets()\n\n    let from_cubie = (cube: CubieCube, mask?: Mask): FaceletCubeT => {\n        //console.log(\"converting from cube\", cube)\n        let faces = [u_face, d_face, f_face, b_face, l_face, r_face]\n        if (mask)\n            return faces.map((facelet) => from_cubie_partial_masked(cube, facelet, mask))\n        else\n            return faces.map((facelet) => from_cubie_partial(cube, facelet))\n    }\n\n    let to_unfolded_cube_str = (faceletCube: FaceletCubeT): String => {\n        let face_count = [0, 0, 0, 0, 0, 0];\n        let str_face_map: { [key: string]: Face } = {\n            \"U\": U, \"D\": D, \"F\": F, \"B\": B, \"L\": L, \"R\": R\n        }\n        let face_str_map = \"UDFBLR\"\n        let color_cube = \"\"\n        for (let i = 0; i < color_map.length; i++) {\n            let face_char = color_map[i];\n            if (str_face_map.hasOwnProperty(face_char)) {\n                let face: number = str_face_map[face_char] as number;\n                let count = face_count[face];\n                let color = faceletCube[face][count]\n                color_cube += face_str_map[color]\n                face_count[face] += 1;\n            } else {\n                color_cube += color_map[i];\n            }\n        }\n        return color_cube;\n    }\n\n\n    return {\n        from_cubie,\n        to_unfolded_cube_str,\n        color_of_sticker,\n        faces: {\n            u_face, d_face, l_face, r_face, f_face, b_face\n        }\n    }\n}()\n\ntype Mask = {\n    co?: number[],\n    eo?: number[],\n    tp?: number[],\n    cp: number[],\n    ep: number[],\n}\nexport type MaskT = Mask;\nfunction mask_copy (m: Mask) {\n    return {\n        co: m.co && [...m.co],\n        eo: m.eo && [...m.eo],\n        tp: m.tp && [...m.tp],\n        cp: [...m.cp],\n        ep: [...m.ep]\n    }\n}\n\nconst lse_mask: Mask = {\n    cp: [1, 1, 1, 1, 1, 1, 1, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1],\n}\n\nconst lse_4c_mask: Mask = {\n    cp: [1, 1, 1, 1, 1, 1, 1, 1],\n    ep: [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1],\n    eo: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n}\n\nconst solved_mask : Mask = {\n    cp: [1, 1, 1, 1,  1, 1, 1, 1],\n    ep:[1, 1, 1, 1,  1, 1, 1, 1, 1, 1, 1, 1],\n}\nconst empty_mask : Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n}\nconst dl_solved_mask : Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]\n}\nconst bl_solved_mask : Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]\n}\nconst fs_back_mask: Mask = {\n    cp: [0, 0, 0, 0, 0, 1, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\n\nconst fs_front_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\n\nconst fb_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\n\nconst f2b_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 1, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1],\n    tp: [0, 0, 0, 0, 1, 1]\n}\n\nconst zhouheng_mask: Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst fbdr_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst ss_front_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 0, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst ss_back_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 1, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst ssdp_front_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 0, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst ssdp_back_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 1, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst ssdp_both_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 1, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\n\nconst sb_mask : Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 1, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst cmll_mask : Mask = {\n    cp: [1, 1, 1, 1, 1, 1, 1, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1],\n    tp: [0, 0, 0, 0, 1, 1]\n}\n\nlet CubeUtil = (() => {\n    let is_cube_solved = (cube: CubieCube) => {\n        let id = new CubieCube()\n        return arrayEqual(cube.co, id.co) &&\n               arrayEqual(cube.eo, id.eo) &&\n               arrayEqual(cube.cp, id.cp) &&\n               arrayEqual(cube.ep, id.ep)\n    }\n\n    let is_solved = (cube: CubieCube, mask: Mask) => {\n        let {co: co_, cp, eo: eo_, ep, tp: tp_} = mask\n        let co = co_ || cp\n        let eo = eo_ || ep\n        let tp = tp_ || Array(6).fill(1)\n        let c_true = co.every( (_, i) =>  (cp[i] === 0 || cube.cp[i] === i) \n                        && (co[i] === 0 || cube.co[i] === 0) )\n        if (!c_true) return false\n        let e_true = eo.every( (_, i) =>  (ep[i] === 0 || cube.ep[i] === i) \n        && (eo[i] === 0 || cube.eo[i] === 0) )\n        if (!e_true) return false\n        let t_true = tp.every( (_, i) =>  (tp[i] === 0 || cube.tp[i] === i) )\n        return t_true\n    }\n\n    function ext(stickers: StickerT[], f: Face) : StickerExtT[] {\n        return stickers.map(x => {\n            let [a, b, c] = x;\n            return [a,b,c,f]\n        })\n    }\n\n    let { u_face, d_face, l_face, r_face, f_face, b_face } = FaceletCube.faces\n    let stickers = [ ...ext(u_face, U), ...ext(d_face, D),\n        ...ext(l_face, L), ...ext(r_face, R), ...ext(f_face,F),  ...ext(b_face, B)]\n\n    let find_pairs = function() {\n        // enumerate each sticker\n        let edge_stickers = stickers.filter(s => s[2] === Typ.E)\n        let corner_stickers = stickers.filter(s => s[2] === Typ.C)\n\n        let ep_stickers : StickerExtT[][] = Array(12).fill(0).map(_ => Array(0))\n        edge_stickers.map(s => ep_stickers[s[0]].push(s) )\n\n        let cp_stickers : StickerExtT[][] = Array(8).fill(0).map(_ => Array(0))\n        corner_stickers.map(s => cp_stickers[s[0]].push(s))\n\n        const epcp_pairs : [number, number][] = []\n        for (let e = 0; e < 12; e++) {\n            for (let c = 0; c < 8; c++) {\n                let efs = ep_stickers[e]\n                let cfs = cp_stickers[c]\n\n                let match = 0;\n                efs.forEach( (e) => {\n                    cfs.forEach( (c) => { if (e[3] === c[3]) match++ })\n                })\n                if (match === 2) {\n                    epcp_pairs.push( [e, c] )\n                }\n            }\n        }\n\n\n        let get_color = (cube: CubieCube, s: StickerExtT) => {\n            return FaceletCube.color_of_sticker(cube, [s[0], s[1], s[2]] )\n        }\n        let func = (cube: CubieCube) => {\n            // now we process the cube\n            let connected_pairs : [number, number][]= []\n            //console.log(\"All neighboring pairs \", epcp_pairs)\n            for (let [ep, cp] of epcp_pairs) {\n                let efs = ep_stickers[ep]\n                let cfs = cp_stickers[cp]\n                let cnt = 0;\n                efs.forEach( (e) => {\n                    const c = cfs.filter( (c) => e[3] === c[3])[0]\n                    if (get_color(cube, e) === get_color(cube, c)) cnt++;\n                })\n                if (cnt === 2) {\n                    connected_pairs.push([ep, cp])\n                }\n            }\n            return connected_pairs\n        }\n        return func\n    }()\n\n    let is_mask_solved2 = (cube: CubieCube, { co, eo, cp, ep }: Mask, premove: (Move | Move[])[]) => {\n        //let moves = [ [], Move.all[\"U\"], Move.all[\"U'\"], Move.all[\"U2\"] ]\n        co = co || cp\n        eo = eo || ep\n        for (let move of premove) {\n            let cube1 = cube.apply(move)\n            let solved = true\n            for (let i = 0; i < 8 && solved; i++) {\n                if ((co[i] && cube1.co[i] !== 0)\n                    || (cp[i] && cube1.cp[i] !== i)) {\n                    solved = false;\n                }\n            }\n            for (let i = 0; i < 12 && solved; i++) {\n                if ((eo[i] && cube1.eo[i] !== 0)\n                    || (ep[i] && cube1.ep[i] !== i)) {\n                    solved = false;\n                }\n            }\n            if (solved) return true;\n        }\n        return false;\n    }\n\n    const u_premove = [[], Move.all[\"U\"], Move.all[\"U'\"], Move.all[\"U2\"]]\n    const m2_premove = [[], Move.all[\"M2\"]]\n\n    let is_cmll_solved = (cube: CubieCube) => {\n        return is_mask_solved2(cube, lse_mask, u_premove)\n    }\n\n    const oris = [\"\", \"y\", \"y'\", \"y2\", \"x2\", \"x2y\", \"x2y'\", \"x2y2\",\n        \"x\", \"xy\", \"xy'\", \"xy2\", \"x'\", \"x'y\", \"x'y'\", \"x'y2\",\n        \"z\", \"zy\", \"zy'\", \"zy2\", \"z'\", \"z'y\", \"z'y'\", \"z'y2\"];\n    let rebase_to_edge = (cube: CubieCube, ep: number): [CubieCube, string] => {\n        for (let ori of oris) {\n            const cube_rebased = cube.apply(ori)\n            if ((cube_rebased.ep[ep] === ep)) {\n                return [cube_rebased, ori]\n            }\n        }\n        return [cube, \"\"]\n    }\n\n    let get_random_with_mask = ({ co, eo, cp, ep }: Mask): CubieCube => {\n        co = co || cp\n        eo = eo || ep\n        // get_random -- figure out which masks are 0, and assign random to these\n        let random_ori = (ori_mask: number[], typ: Typ) => {\n            let ori = Array(ori_mask.length).fill(0)\n            let mod = (typ === C) ? 3 : 2\n            let sum: number\n            do {\n                sum = 0\n                for (let i in ori_mask) {\n                    if (ori_mask[i] === 0) {\n                        ori[i] = rand_int(mod)\n                        sum += ori[i]\n                    }\n                }\n            } while (sum % mod > 0)\n            return ori\n        }\n        let random_perm = (perm_mask: number[]) => {\n            let perm: number[] = Array(perm_mask.length).fill(0)\n            let undecided: number[] = []\n            for (let i = 0; i < perm_mask.length; i++) {\n                if (perm_mask[i] === 0) {\n                    undecided.push(i)\n                } else {\n                    perm[i] = i\n                }\n            }\n            rand_shuffle(undecided)\n            for (let i = 0, cnt = 0; i < perm_mask.length; i++) {\n                if (perm_mask[i] === 0) {\n                    perm[i] = undecided[cnt]\n                    cnt += 1\n                }\n            }\n            return perm\n        }\n        let cp_rand, ep_rand, par\n        do {\n            [cp_rand, ep_rand] = [random_perm(cp), random_perm(ep)]\n            par = (getParity(cp_rand) + getParity(ep_rand)) & 1\n        } while (par > 0)\n\n        return new CubieCube({\n            co: random_ori(co, C),\n            cp: cp_rand,\n            eo: random_ori(eo, E),\n            ep: ep_rand,\n        })\n    }\n\n    let get_random_lse = (): CubieCube => {\n        let cube = get_random_with_mask(lse_mask)\n        return cube.apply(rand_choice(m2_premove))\n    }\n\n \n\n    return {\n        is_cmll_solved,\n        is_solved,\n        get_random_lse,\n        get_random_with_mask,\n        is_cube_solved,\n        find_pairs,\n        stickers,\n        rebase_to_edge\n    }\n})()\n\nexport abstract class Storage {\n    abstract name: string;\n    abstract serialize(): string;\n    abstract deserialize(x: string): void;\n    abstract _setDefault(): void;\n    save() {\n        window.localStorage.setItem(this.name, this.serialize());\n    }\n    load() {\n        const item = window.localStorage.getItem(this.name)\n        if (item) this.deserialize(item);\n        else this._setDefault();\n    }\n}\n\nexport class ColorScheme extends Storage {\n    // UDFBLR\n    // specify the colors for uf\n    // how to do this?\n    static default_colors = {\n        \"G\": \"#00b500\",\n        \"B\": \"#0000ff\",\n        \"R\": \"#ff0000\",\n        \"O\": \"#ff8800\",\n        \"Y\": \"#ffff00\",\n        \"W\": \"#ffffff\",\n        \"X\": \"#cccccc\"\n    }\n    name = \"colorscheme\";\n    colors: {[key:string]:string} = {};\n    // UDFBLR from UF\n    // INFERR UFR from UF?\n    static valid_schemes = [\n        \"WYGBOR\",\n        \"WYBGRO\",\n        \"WYROGB\",\n        \"WYORBG\",\n        \"YWGBRO\",\n        \"YWBGOR\",\n        \"YWROBG\",\n        \"YWORGB\",\n\n        \"GBWYRO\",\n        \"GBYWOR\",\n        \"GBROYW\",\n        \"GBORWY\",\n        \"BGWYOR\",\n        \"BGYWRO\",\n        \"BGROWY\",\n        \"BGORYW\",\n\n        \"ORWYGB\",\n        \"ORYWBG\",\n        \"ORGBYW\",\n        \"ORBGWY\",\n        \"ROWYBG\",\n        \"ROYWGB\",\n        \"ROGBWY\",\n        \"ROBGYW\",\n    ]\n    static valid_schemes_map = function() {\n        return new Map(ColorScheme.valid_schemes.map(x => [ x[0] + x[2], x]))\n    }();\n    constructor(suppressLoad?: boolean) {\n        super();\n        if (!suppressLoad) {\n            this.load();\n        }\n    }\n    toUserInput() {\n        return \"GBROYWX\".split('').map(x => this.colors[x])\n    }\n    set( colors:{[key:string]:string} | string[]) {\n        let newScheme = new ColorScheme(true);\n        if (Array.isArray(colors)) {\n            colors.forEach( (color, i) => newScheme.colors[\"GBROYWX\"[i]] = color )\n        } else {\n            newScheme.colors = {...this.colors, ...colors};\n        }\n        newScheme.save();\n        return newScheme\n    }\n    setWithDefault() {\n        let newScheme = new ColorScheme(true);\n        newScheme._setDefault();\n        newScheme.save();\n        return newScheme\n    }\n    _setDefault() { this.colors = ColorScheme.default_colors; };\n    serialize() {\n        return JSON.stringify(this.colors)\n    }\n    deserialize(s: string) {\n        this.colors = JSON.parse(s)\n    }\n    getColorsForOri(s: string) {\n        let faces = (ColorScheme.valid_schemes_map.get(s) || ColorScheme.valid_schemes_map.get(\"WG\")) + \"X\";\n        let arr : string[] = []\n        for (let i = 0; i < faces.length; i++) {\n            arr.push(this.colors[faces[i]]!)\n        }\n        return arr\n    }\n}\n\nlet Mask = {\n    lse_mask, fs_back_mask, fs_front_mask, fbdr_mask, fb_mask, f2b_mask, sb_mask, cmll_mask, ss_front_mask, ss_back_mask,\n    ssdp_front_mask, ssdp_back_mask, ssdp_both_mask, empty_mask, dl_solved_mask, bl_solved_mask, solved_mask, zhouheng_mask, lse_4c_mask,\n    copy: mask_copy\n}\n\nexport { FaceletCube, CubeUtil, Mask }\n","import React from 'react'\n\nimport {\n  FormControlLabel,\n  FormGroup,\n  Button,\n  Box,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  Checkbox,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from '@mui/material';\n\nimport makeStyles from '@mui/styles/makeStyles';\n\nimport { styled } from '@mui/material/styles';\n\nimport SettingsIcon from '@mui/icons-material/Settings';\n\nimport Radio from '@mui/material/Radio';\n\nimport { AppState, Action, SliderOpt } from '../Types';\nimport Selector from '../lib/Selector';\nimport Slider, { SliderThumb } from '@mui/material/Slider';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(2),\n      backgroundColor: theme.palette.background.default\n    },\n    button: {\n      width: \"100%\",\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    infoColumn: {\n      color: theme.palette.background.paper\n    },\n    scrambleColumn: {\n      paddingLeft: theme.spacing(3)\n    },\n    textColumn: {\n      // color: \"black\",\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 138\n      },\n    },\n    fixedHeight: {\n      height: 250,\n    },\n    title : {\n        flexGrow: 1,\n    },\n    select: {\n      color: theme.palette.text.primary\n    },\n    selectLabel: {\n      color: theme.palette.text.secondary\n    }\n\n}))\n\nfunction SliderThumbComponent(props: any) {\n  const { children, ...other } = props;\n  return (\n    <SliderThumb {...other}>\n      {children}\n      <span className=\"airbnb-bar\" />\n      <span className=\"airbnb-bar\" />\n      <span className=\"airbnb-bar\" />\n    </SliderThumb>\n  );\n}\n\nconst LevelSlider = styled(Slider)({\n  '& .MuiSlider-markLabel': {\n    fontSize: \"1rem\"\n  }\n})\n\nfunction SliderView(props: {\n  slider: SliderOpt, onChange: (n: number) => void}) {\n  let { slider } = props\n  let classes = useStyles()\n  const handleChange = (_: any, newValue: number|number[]) => {\n      let v = Array.isArray(newValue) ? newValue[0] : newValue\n      if ((slider.l - 1<= v && v <= slider.r))\n        props.onChange(v)\n  }\n  let label = slider.label\n  let marks = React.useMemo(() => {\n    let obj = [{value: slider.l - 1, label: \"Any\"}]\n    for (let i = slider.l; i <= slider.r; i++) {\n      let suffix = \"\"\n      if (i === slider.l && slider.extend_l) suffix = \"-\";\n      if (i === slider.r && slider.extend_r) suffix = \"+\";\n      obj.push({value: i, label: i.toString() + suffix})\n    }\n    return obj\n  }, [slider.l, slider.r, slider.extend_l, slider.extend_r])\n  return (\n  <Box>\n    <FormLabel component=\"legend\" className={classes.selectLabel} >Level</FormLabel>\n    <Box paddingX={5}>\n      <LevelSlider\n      marks={marks}\n      track={false}\n      min={slider.l - 1}\n      max={slider.r}\n      value={slider.value}\n      onChange={handleChange} \n      onFocus={(evt) => evt.target.blur()}\n      style={{fontSize: \"1.2rem\"}}\n      />\n    </Box>\n  </Box>)\n}\n\nfunction SliderSelect(props: {state: AppState, dispatch: React.Dispatch<Action>,\n  select: string}) {\n    let sliderName = props.select\n    let sliderOpt = (props.state.config as any)[sliderName] as SliderOpt\n    return <SliderView\n      slider={(props.state.config as any)[sliderName] as SliderOpt}\n      onChange={(n: number) => {\n        props.dispatch( { type: \"config\", \n         content: { [sliderName]: ({...sliderOpt, value:n }) }\n        } )\n      }}\n    />\n}\n\n\nfunction SingleSelect(props: {state: AppState, dispatch: React.Dispatch<Action>,\n    select: string, label?: string}) {\n  let { state, dispatch, select } = props\n  let { config } = state\n  let sel = (config as any)[select] as Selector\n  let classes = useStyles()\n\n  const handleChange = (evt: { target: { value: string; }; }) => {\n    let { names } = sel\n    let n = names.length\n    let new_flags = Array(n).fill(0)\n\n    for (let i = 0; i < names.length; i++) {\n      if (names[i] === evt.target.value) {\n        new_flags[i] = 1\n      }\n    }\n    dispatch( { type: \"config\", content: {[select]: sel.setFlags(new_flags) } } )\n  }\n\n  let radioValue = function() {\n    let { names, flags } = sel\n    for (let i = 0; i < flags.length; i++) {\n      if (flags[i] === 1) return names[i]\n    }\n    return \"\"\n  }()\n\n  let label = sel.label || props.label || \"\"\n  return (\n  <Box>\n    <FormLabel component=\"legend\" className={classes.selectLabel} >\n      {label}\n    </FormLabel>\n    {/* {sel.annotation ? <Box> <CustomTooltip title={sel.annotation}>\n        <IconButton>\n          <HelpOutlineIcon sx={{ fontSize: 30 }}/>\n        </IconButton>\n      </CustomTooltip> </Box> : null} */}\n    <RadioGroup aria-label=\"position\" name=\"position\" value={radioValue} onChange={handleChange} row>\n      {\n        sel.names.map(name => (\n          <FormControlLabel\n            key={name}\n            value={name}\n            control={<Radio color=\"primary\" />}\n            label={name}\n            labelPlacement=\"end\"\n          />\n        ))\n      }\n    </RadioGroup>\n  </Box>)\n}\n\n\n\ntype MultiSelectOptions = {\n  label?: string, noDialog?: boolean,\n  manipulators?: {name: string, enableIdx: number[]}[]\n}\n\n\nfunction MultiSelectContent(props: {state: AppState, dispatch: React.Dispatch<Action>, select: string, options?: MultiSelectOptions }) {\n  let { state, dispatch, select, options } = props\n  options = options || {}\n  let { config } = state\n\n  let sel = (config as any)[select] as Selector\n  const handleChange = (evt: { target: { value: string; checked: boolean }; }) => {\n    let { names, flags } = sel\n    let new_flags = [...flags]\n\n    for (let i = 0; i < names.length; i++) {\n      if (names[i] === evt.target.value) {\n        new_flags[i] = (evt.target.checked)? 1 : 0\n      }\n    }\n    dispatch( { type: \"config\", content: {[select]: sel.setFlags(new_flags) } } )\n  }\n\n  let makeBox = (name: string, checked: boolean) => {\n    return (\n    <FormControlLabel\n        control={\n        <Checkbox color=\"primary\" checked={checked} onChange={handleChange} />\n        }\n        label={name}\n        key={name}\n        value={name}\n    />)\n  }\n\n  const [manipChecked, setManipChecked] = React.useState< { [ name: string ]: boolean } >({})\n  let label = sel.label || options.label || \"\"\n  let makeManipulator = (manip: {name: string, enableIdx: number[]}) => {\n    let {name, enableIdx} = manip\n    let handleChange = (evt: { target: { value: string; checked: boolean }; }) => {\n      setManipChecked( {...manipChecked, [name] : evt.target.checked } )\n      let fillValue = (evt.target.checked);\n      let { flags } = sel\n      let new_flags = [...flags]\n      for (let i of enableIdx) {\n        new_flags[i] = fillValue ? 1 : 0;\n      }\n      dispatch( { type: \"config\", content: {[select]: sel.setFlags(new_flags) } } )\n    }\n    return (\n      <FormControlLabel\n      control={\n      <Checkbox color=\"primary\" checked={manipChecked[name]} onChange={handleChange} />\n      }\n      label={name}\n      key={name}\n      value={name}\n      />)\n  }\n  let manipulator_row = options.manipulators ?\n    (<FormGroup row>\n    {options.manipulators.map(x => makeManipulator(x)) }\n    </FormGroup>) : null;\n  const content = (\n    <React.Fragment>\n      {manipulator_row}\n      <FormGroup row>\n      {sel.names.map( (name, i) => makeBox(name, !!sel.flags[i]))}\n      </FormGroup>\n    </React.Fragment>\n  )\n  return {label, content}\n}\n\nfunction MultiSelect(props: {state: AppState, dispatch: React.Dispatch<Action>, select: string, options?: MultiSelectOptions }) {\n  let { state, dispatch, select, options } = props\n  let {label, content} = MultiSelectContent({state, dispatch, select, options})\n  options = options || {}\n\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  }\n  let classes = useStyles()\n\n  if (options.noDialog)\n  return (\n    <FormControl component=\"fieldset\" className={classes.select}>\n      <FormLabel component=\"legend\"className={classes.selectLabel} >{label}</FormLabel>\n      {content}\n    </FormControl>\n  )\n\n  return (\n  <Box>\n    <FormLabel component=\"legend\">{label}</FormLabel>\n    <Box height={8}/>\n    <Button color=\"primary\" variant=\"outlined\" style={{borderWidth: 2}} onClick={handleClickOpen}>\n    <SettingsIcon fontSize=\"small\" color=\"primary\" style={{marginLeft: -6, marginRight: 3}}></SettingsIcon>\n      Edit\n    </Button>\n    <Box height={8}/>\n    <Dialog disableEscapeKeyDown open={open} onClose={handleClose}>\n      <DialogTitle> {label} </DialogTitle>\n      <DialogContent>\n        {content}\n      </DialogContent>\n      <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Ok\n          </Button>\n      </DialogActions>\n    </Dialog>\n  </Box>\n  )\n}\n\n\nexport { SingleSelect, MultiSelectContent, MultiSelect, SliderSelect }","import React, { Fragment } from 'react'\n\nimport {\n    TextField,\n    Divider,\n    Button, Box,\n    FormLabel, Dialog, DialogTitle, DialogContent, DialogActions\n} from '@mui/material';\n\nimport SettingsIcon from '@mui/icons-material/Settings';\n\nimport { AppState, Action } from '../Types';\nimport { Config } from '../Config';\nimport { ColorScheme } from '../lib/CubeLib';\n\nimport { MultiSelectContent } from './SelectorViews';\n\nexport function ColorSetter(props: {state: AppState, dispatch: React.Dispatch<Action>}) {\n    const [text, setText] = React.useState(props.state.colorScheme.toUserInput().join(\",\"))\n    const handleChange = (event: any) => setText(event.target.value);\n    const handleClick = () => {\n        let arr = text.split(\",\")\n        props.dispatch({\n            type: \"colorScheme\",\n            content: arr.length === 7? arr : ColorScheme.default_colors\n        })\n    }\n    return (\n        <Fragment>\n        <Box>\n        <TextField\n            label=\"Color\"\n            helperText=\"G,B,R,O,Y,W,Gray\"\n            onChange={handleChange}\n            fullWidth\n            value={text}\n        /></Box>\n\n        <Box>\n        <Button variant=\"outlined\" size=\"medium\" color=\"primary\" onClick={handleClick} >\n            Set color\n        </Button>\n        </Box>\n        </Fragment>\n    )\n}\n\nexport function ColorPanel(props: {state: AppState, dispatch: React.Dispatch<Action>}) {\n    let { state, dispatch } = props\n    let select = \"orientationSelector\"\n    let {content} = MultiSelectContent({state, dispatch, select})\n\n    const [open, setOpen] = React.useState(false);\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n    const handleClose = (e: any, reason: string) => {\n      if (reason === \"backdropClick\") \n        setOpen(false);\n    }\n    return (\n        <div>\n        <FormLabel component=\"legend\">Orientation and Color Scheme</FormLabel>\n        <Box height={8}/>\n        <Button color=\"primary\" variant=\"outlined\" style={{borderWidth: 2}} onClick={handleClickOpen}>\n        <SettingsIcon fontSize=\"small\" color=\"primary\" style={{marginLeft: -6, marginRight: 3}}></SettingsIcon>\n          Edit\n        </Button>\n        <Box height={8}/>\n        <Dialog disableEscapeKeyDown open={open} onClose={handleClose}>\n          <DialogTitle> Set Orientation (U-F) and Color Scheme  </DialogTitle>\n          <DialogContent>\n            {content}\n            <Box height={20}/>\n                <Divider />\n            <Box height={20}/>\n            <ColorSetter {...{state, dispatch}}/>\n\n          </DialogContent>\n          <DialogActions>\n              <Button onClick={() => setOpen(false)} color=\"primary\">\n                  Close\n              </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n}","import React, { useEffect } from 'react'\nimport * as SRVisualizer from 'sr-visualizer'\nimport { MoveSeq } from '../lib/CubeLib'\nimport {Face as VFace} from 'sr-visualizer'\n\n\nfunction CaseVisualizer(props: {name: string, alg: string,size: number, mask?: string, color?: string[], cubeOptions: Partial<SRVisualizer.CubeOptions>}) {\n  const mount = React.useRef<HTMLDivElement | null>(null)\n  useEffect( () => {\n    let dom = mount.current\n    if (dom) {\n      const args = {\n        width: props.size,\n\t      height: props.size,\n        view: 'plan',\n\t      algorithm: new MoveSeq(props.alg).inv().toString(),\n        mask: props.mask as SRVisualizer.Masking,\n        ...props.cubeOptions\n      }\n      const color = props.color\n      if (color) {\n        // map our scheme (UDFBLR) to theirs (URFDLB)\n        args.colorScheme = [\n          color[0],\n          color[5],\n          color[2],\n          color[1],\n          color[4],\n          color[3],\n        ]\n      }\n      SRVisualizer.cubeSVG(dom, args)\n    }\n    return () => {\n      if (dom) dom.innerHTML = \"\"\n    }\n  })\n  return (<div ref={mount}>\n  </div>)\n}\n\nexport default CaseVisualizer;","import React from 'react';\nimport { FormLabel, Box, Button, Dialog, DialogTitle, DialogContent, DialogActions, FormControl } from '@mui/material';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport { getDefaultCompilerOptions } from 'typescript';\n\nexport interface DialogProps {\n  label: string,\n  title?: string,\n}\nexport interface DialogOptions {\n  fullWidth? : boolean\n}\nconst defaultOptions = {\n  fullWidth: false\n}\n\nconst makeDialog = <P extends object>(\n  Component: React.ComponentType<P>, options?: DialogOptions\n) => (function DialogView(props: P & DialogProps) {\n  options = options || defaultOptions\n  const title = props.title || props.label\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  }\n\n  return (\n  <Box>\n    <FormLabel component=\"legend\">{props.label}</FormLabel>\n    <Box height={8}/>\n    <Button color=\"primary\" variant=\"outlined\" style={{borderWidth: 2}} onClick={handleClickOpen}>\n      <SettingsIcon fontSize=\"small\" color=\"primary\" style={{marginLeft: -6, marginRight: 3}}></SettingsIcon>\n        {\"SELECT\"}\n    </Button>\n    <Box height={8}/>\n\n\n    <Dialog disableEscapeKeyDown open={open} onClose={handleClose} maxWidth=\"md\" style={{marginLeft: 10,marginRight: 10}}> \n      <DialogTitle> {title} </DialogTitle>\n      <DialogContent >\n        <Box paddingLeft={1}>\n          <Component {...props}/>\n        </Box>\n      </DialogContent>\n      <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" size=\"large\" >\n            {\"CLOSE\" }\n          </Button>\n      </DialogActions>\n    </Dialog>\n    </Box>\n  )\n\n})\n\nexport {makeDialog}","import { red } from '@mui/material/colors';\nimport { createTheme, adaptV4Theme } from '@mui/material/styles';\n\n// A custom theme for this app\nconst components = {\n  components: {\n    MuiSlider: {\n      styleOverrides: {\n        root: {\n          height: 100\n        },\n        track: {\n          height: 100\n        }\n      }\n      \n    }\n  }\n}\nconst theme = createTheme(adaptV4Theme({\n  name: \"bright\",\n  palette: {\n    primary: {\n      main: '#556cd6',// '#e0e8ff'//b0c4ee', //\n    },\n    secondary: {\n      main: '#d32f2f',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#eeeeef',\n      paper: '#fff'\n    },\n    text: {\n      primary: '#000',\n      secondary: '#888',\n      disabled: '#556cd6'\n    }\n  },\n  ...components\n  /*\n  typography: {\n    \"fontFamily\": `\"Public Sans\", \"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n    \"fontSize\": 14,\n    \"fontWeightLight\": 400,\n    \"fontWeightRegular\": 500,\n    \"fontWeightMedium\": 600\n  }\n  */\n\n}));\nconst themeDark = createTheme(adaptV4Theme({\n  name: \"dark\",\n  palette: {\n    primary: {\n      main: '#9FA4C2', // '#757575',\n    },\n    secondary: {\n      main: '#ffffff', //f55057',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#121212',\n      paper: '#252525' //#424242'\n    },\n    text: {\n      primary: '#fff',\n      secondary: '#ddd',\n      disabled: '#eee'\n    }\n  },\n  overrides: {\n    // Style sheet name ⚛️\n    MuiDivider: {\n      // Name of the rule\n      // Some CSS\n      root: {\n        backgroundColor: 'rgba(255, 255 ,255, 0.3)',\n      }\n    },\n  },\n  ...components\n\n}));\n\nexport { theme, themeDark };","import Grid from '@mui/material/Grid'\nimport Box from '@mui/material/Box'\nimport React from 'react'\nimport CaseVisualizer from './CaseVisualizer'\n\nimport { AppState, Action } from \"../Types\";\nimport { makeDialog } from './Dialog';\nimport SRVisualizer from 'sr-visualizer';\n\nimport { Button, ButtonGroup, Divider, Typography, useMediaQuery } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Selector from '../lib/Selector';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport { theme } from '../theme';\n\ntype CaseSelectSettings = {\n  selector: string,\n  algs: [string, string][],\n  groups: string[],\n  cubeOptions?: Partial<SRVisualizer.CubeOptions>\n}\n\nfunction splitAlgIntoGroups(algs: [string, string][], groups: string[], flags: number[]) {\n  const algGroups : { [k: string] : [[string, string], number][] }= Object.fromEntries(groups.map(g => [g, []]))\n  algs.forEach((alg, i) => {\n    const prefix = alg[0].split(\"_\", 1)[0]\n    if (prefix in algGroups)\n      algGroups[prefix].push([alg, i])\n  })\n  return algGroups\n}\n\nconst useStyles = makeStyles(theme => {\n  let is_bright = theme.palette.primary.main === '#556cd6'\n  return ({\n    caseBoxOn: {\n      backgroundColor: is_bright ? '#bdedff' : theme.palette.primary.main,\n    },\n    groupBox: {\n    }\n  })\n})\n\nfunction CaseSelectContent(props: { state: AppState, dispatch: React.Dispatch<Action>, settings: CaseSelectSettings }) {\n  let { selector, groups, algs } = props.settings\n  const sel = (props.state.config as any)[selector] as Selector\n  const algGroups = splitAlgIntoGroups(algs, groups, sel.flags)\n  const handleSelectGroup = (groupname: string, value: number) => () => {\n    const newFlags = [...sel.flags]\n    algGroups[groupname].forEach( ([alg, i]) => {\n      newFlags[i] = value\n    })\n    props.dispatch({ type: \"config\", content: {[selector]: sel.setFlags(newFlags) } } )\n  }\n  const handleSelectCase = (caseIdx: number) => () => {\n    const newFlags = [...sel.flags]\n    newFlags[caseIdx] = (newFlags[caseIdx] === 0) ? 1 : 0\n    props.dispatch({ type: \"config\", content: {[selector]: sel.setFlags(newFlags) } } )\n  }\n  const handleSelectAll = (value: number) => () => {\n    const newFlags = Array(sel.flags.length).fill(value)\n    props.dispatch({ type: \"config\", content: {[selector]: sel.setFlags(newFlags)}})\n  }\n  const classes = useStyles()\n  const gt_sm = useMediaQuery(theme.breakpoints.up('sm'));\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" marginRight={10}>\n      <Box marginBottom={3}>\n        <ButtonGroup color=\"primary\" style={{height: \"2rem\"}}>\n          <Button onClick={handleSelectAll(1)}\n            startIcon={<CheckCircleIcon/>}>Select All</Button>\n          <Button onClick={handleSelectAll(0)}\n            startIcon={<CancelIcon/>}>Deselect All</Button>\n        </ButtonGroup>\n      </Box>\n      {groups.map((groupname, i) => (\n        <Box display=\"flex\" flexDirection={gt_sm ? \"row\" : \"column\"} key={i} className={classes.groupBox} marginBottom={2}>\n          <Box display=\"flex\" flexDirection={gt_sm ? \"column\" : \"row\"} marginRight={4} >\n\n            <Box marginRight={2}>\n            <Typography variant=\"h5\" gutterBottom>\n              {groupname[0].toUpperCase() + groupname.substr(1)}\n            </Typography>\n            </Box>\n            <Box display=\"flex\" alignItems=\"center\">\n              <ButtonGroup color=\"primary\" variant=\"contained\" aria-label=\"outlined primary button group\" style={{height: \"3.7rem\"}}>\n                <Button onClick={handleSelectGroup(groupname, 1)}\n                  startIcon={<CheckCircleIcon/>}></Button>\n                <Button  variant=\"outlined\" onClick={handleSelectGroup(groupname, 0)}\n                  startIcon={<CancelIcon/>}></Button>\n              </ButtonGroup>\n            </Box>\n          </Box>\n          <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"wrap\">\n          {\n            algGroups[groupname].map( ([[name, alg], idx]) =>\n              <Box border={1} borderColor=\"primary.main\" \n                key={name} \n                onClick={handleSelectCase(idx)}\n                style={{transition: \"all .3s ease\" }}\n                className={sel.flags[idx] ? classes.caseBoxOn : \"\"}>\n                <CaseVisualizer \n                  name={name}\n                  size={100}\n                  alg={alg}\n                  mask=\"cmll\"\n                  cubeOptions={props.settings.cubeOptions || {}}\n                />\n              </Box>\n            )\n          }\n          </Box>\n          <Divider></Divider>\n        </Box>\n      ))}\n    </Box>\n  )\n}\n\nconst CaseSelectDialog = makeDialog(CaseSelectContent) // {fullWidth: true})\n\nexport default CaseSelectDialog;","import { Cases } from \"@mui/icons-material\";\nimport Selector from \"../lib/Selector\";\nimport { rand_choice } from \"./Math\";\n\nconst get_active_names = (sel : Selector) => {\n    let res = []\n    for (let i = 0; i < sel.names.length; i++) {\n        if (sel.flags[i]) {\n            res.push(sel.names[i]);\n        }\n    }\n    return res\n}\n\nexport type CaseDesc = {\n    id: string,\n    algs: string[],\n    setup?: string,\n    kind: string\n}\n\nexport let createAlg = (id: string, alg: string | string[], kind:string, setup?: string) : CaseDesc => ({\n    id, algs:Array.isArray(alg) ? alg : [alg], kind, setup\n})\n\nconst empty_alg = createAlg(\"empty\", \"\", \"any\")\n\nexport const cmll_algs_raw : [string,string][] = [\n    [\"o_adjacent_swap\", \"R U R' F' R U R' U' R' F R2 U' R'\"],\n    [\"o_diagonal_swap\", \"F R U' R' U' R U R' F' R U R' U' R' F R F'\"],\n    [\"h_columns\", \"U' R U R' U R U' R' U R U2 R'\"],\n    [\"h_rows\", \"F R U R' U' R U R' U' R U R' U' F'\"],\n    [\"h_column\", \"U' R U2' R2' F R F' U2 R' F R F'\"],\n    [\"h_row\", \"r U' r2' D' r U' r' D r2 U r'\"],\n    [\"pi_right_bar\", \"F R U R' U' R U R' U' F'\"],\n    [\"pi_back_slash\", \"U F R' F' R U2 R U' R' U R U2' R'\"],\n    [\"pi_x_checkerboard\", \"U' R' F R U F U' R U R' U' F'\"],\n    [\"pi_forward_slash\", \"R U2 R' U' R U R' U2' R' F R F'\"],\n    [\"pi_columns\", \"U' r U' r2' D' r U r' D r2 U r'\"],\n    [\"pi_left_bar\", \"U' R' U' R' F R F' R U' R' U2 R\"],\n    [\"u_forward_slash\", \"U2 R2 D R' U2 R D' R' U2 R'\"],\n    [\"u_back_slash\", \"R2' D' R U2 R' D R U2 R\"],\n    [\"u_front_row\", \"R' U' R U' R' U2 R2 U R' U R U2 R'\"],\n    [\"u_rows\", \"U' F R2 D R' U R D' R2' U' F'\"],\n    [\"u_x_checkerboard\", \"U2 r U' r' U r' D' r U' r' D r\"],\n    [\"u_back_row\", \"U' F R U R' U' F'\"],\n    [\"t_left_bar\", \"U' R U R' U' R' F R F'\"],\n    [\"t_right_bar\", \"U L' U' L U L F' L' F\"],\n    [\"t_rows\", \"R U2 R' U' R U' R2' U2' R U R' U R\"],\n    [\"t_front_row\", \"r' U r U2' R2' F R F' R\"],\n    [\"t_back_row\", \"r' D' r U r' D r U' r U r'\"],\n    [\"t_columns\", \"U2 r2' D' r U r' D r2 U' r' U' r\"],\n    [\"s_left_bar\", \"R U R' U R U2 R'\"],\n    [\"s_x_checkerboard\", \"L' U2 L U2' L F' L' F\"],\n    [\"s_forward_slash\", \"F R' F' R U2 R U2' R'\"],\n    [\"s_columns\", \"R U R' U' R' F R F' R U R' U R U2' R'\"],\n    [\"s_right_bar\", \"U2' R U R' U R' F R F' R U2' R'\"],\n    [\"s_back_slash\", \"R U' L' U R' U' L\"],\n    [\"as_right_bar\", \"U' R U2' R' U' R U' R'\"],\n    [\"as_columns\", \"R2 D R' U R D' R' U R' U' R U' R'\"],\n    [\"as_back_slash\", \"F' r U r' U2' r' F2 r\"],\n    [\"as_x_checkerboard\", \"R U2' R' U2' R' F R F'\"],\n    [\"as_forward_slash\", \"L' U R U' L U R'\"],\n    [\"as_left_bar\", \"U2' R U2' R' F R' F' R U' R U' R'\"],\n    [\"l_mirror\", \"F R U' R' U' R U R' F'\"],\n    [\"l_inverse\", \"F R' F' R U R U' R'\"],\n    [\"l_pure\", \"U2 R U R' U R U' R' U R U' R' U R U2' R'\"],\n    [\"l_front_commutator\", \"R U2 R D R' U2 R D' R2'\"],\n    [\"l_diag\", \"U2 R' U' R U R' F' R U R' U' R' F R2\"],\n    [\"l_back_commutator\", \"U' R' U2 R' D' R U2 R' D R2\"],\n    [\"solved\", \"\"]\n]\n\nexport const nmcll_to_cmll_mapping : [string, [string, string][]][] = [\n    [\"o_1\", \n       [[\"h_rows\", \"\"],\n        [\"pi_columns\", \"\"],\n        [\"h_columns\", \"\"],\n       ]\n    ],\n    [\"o_2\", \n        [[\"pi_x_checkerboard\", \"U\"]],\n    ],\n    [\"s_1\", [\n        [\"as_right_bar\", \"U\"],\n        [\"t_right_bar\", \"U\"],\n        [\"l_diag\",\"U\"],\n        [\"as_forward_slash\", \"U\"]\n    ]],\n    [\"s_2\", [\n        [\"u_forward_slash\", \"U\"],\n        [\"as_left_bar\", \"U\"],\n        [\"l_pure\", \"\"],\n        [\"as_x_checkerboard\", \"U\"]\n    ]],\n    [\"s_3\", [\n        [\"u_back_slash\", \"U\"],\n        [\"t_left_bar\", \"\"],\n        [\"as_back_slash\", \"U\"],\n        [\"as_columns\", \"\"]\n    ]],\n    [\"as_1\", [\n        [\"t_left_bar\", \"U\"],\n        [\"s_left_bar\", \"\"],\n        [\"l_diag\", \"\"],\n        [\"s_back_slash\", \"U\"]\n    ]],\n    [\"as_2\", [\n        [\"u_back_slash\", \"\"], \n        [\"s_right_bar\", \"U\"],\n        [\"l_pure\", \"U\"],\n        [\"s_x_checkerboard\", \"U\"]\n    ]],\n    [\"as_3\", [\n        [\"s_forward_slash\", \"U\"],\n        [\"t_right_bar\", \"\"],\n        [\"u_forward_slash\", \"\"],\n        [\"s_columns\", \"\"]\n    ]],\n    [\"t_1\", [\n        [\"u_back_row\", \"U\"],\n        [\"t_back_row\", \"\"],\n        [\"h_row\", \"\"],\n        [\"pi_right_bar\", \"U\"],\n    ]],\n    [\"t_2\", [\n        [\"u_front_row\", \"U\"],\n        [\"as_back_slash\", \"\"],\n        [\"s_forward_slash\", \"\"],\n        [\"pi_left_bar\", \"U\"]\n    ]],\n    [\"t_3\", [\n        [\"t_front_row\", \"U\"],\n        [\"as_forward_slash\", \"\"],\n        [\"s_back_slash\", \"\"],\n        [\"h_row\", \"U\"]\n    ]],\n    [\"u_1\", [\n        [\"u_rows\", \"\"],\n        [\"t_rows\", \"\"],\n        [\"pi_left_bar\", \"\"],\n        [\"h_column\", \"U\"],\n    ]],\n    [\"u_2\", [\n        [\"t_columns\", \"\"],\n        [\"s_columns\", \"U\"],\n        [\"as_columns\", \"U\"],\n        [\"pi_right_bar\", \"\"],\n    ]],\n    [\"u_3\", [\n        [\"u_x_checkerboard\", \"U\"],\n        [\"s_x_checkerboard\", \"\"],\n        [\"as_x_checkerboard\", \"\"],\n        [\"h_column\", \"\"],\n    ]],\n    [\"l_1\", [\n        [\"l_inverse\", \"\"],\n        [\"as_right_bar\", \"\"],\n        [\"s_right_bar\", \"\"],\n        [\"pi_forward_slash\", \"U\"],\n    ]],\n    [\"l_2\", [\n        [\"l_mirror\", \"\"],\n        [\"as_left_bar\", \"\"],\n        [\"s_left_bar\", \"U\"],\n        [\"pi_back_slash\", \"\"],\n    ]],\n    [\"l_3\", [\n        [\"l_back_commutator\", \"\"],\n        [\"l_front_commutator\", \"\"],\n        [\"pi_forward_slash\", \"\"],\n        [\"pi_back_slash\", \"U\"],\n    ]],\n    [\"pi_1\", [\n        [\"o_adjacent_swap\", \"\"],\n        [\"u_front_row\", \"\"],\n        [\"t_columns\", \"U\"],\n        [\"pi_x_checkerboard\", \"\"],\n    ]],\n    [\"pi_2\", [\n        [\"u_back_row\", \"\"],\n        [\"l_front_commutator\", \"U\"],\n        [\"l_back_commutator\", \"U\"],\n        [\"t_rows\", \"U\"],\n    ]],\n    [\"pi_3\", [\n        [\"o_adjacent_swap\", \"U\"],\n        [\"l_mirror\", \"U\"],\n        [\"l_inverse\", \"U\"],\n        [\"pi_columns\", \"U\"],\n    ]],\n    [\"h_1\", [\n        [\"solved\", \"U\"],\n        [\"t_front_row\", \"\"],\n        [\"h_rows\", \"U\"]\n    ]],\n    [\"h_2\", [\n        [\"o_diagonal_swap\", \"U\"],\n        [\"u_x_checkerboard\", \"\"],\n        [\"h_columns\", \"U\"]\n    ]],\n    [\"h_3\", [\n        [\"u_rows\", \"U\"],\n        [\"t_back_row\", \"U\"]\n    ]]\n]\n\nconst cmll_algs_raw_lookup = Object.fromEntries(cmll_algs_raw)\nconst nmcll_algs: CaseDesc[] = nmcll_to_cmll_mapping.map(([group_name, cases]) => {\n        return cases.map(([cmll_name, parity]) =>\n        [`nmcll-${group_name}-${cmll_name}`, cmll_algs_raw_lookup[cmll_name] + \" \" + parity])\n    }).flat().map( ([x, y]) => createAlg(x, y, \"nmcll\"))\n\nexport const nmcll_display_parity : [string, string, string][] = [\n [\"o_1\", \"U\", \"\"],\n [\"o_2\", \"\", \"\"], \n [\"s_1\", \"\", \"U\"],\n [\"s_2\", \"U\", \"U\"],\n [\"s_3\", \"\", \"U\"],\n [\"as_1\",\"\", \"U2\"],\n [\"as_2\",\"U\", \"U'\"],\n [\"as_3\",\"\", \"\"],\n [\"t_1\", \"\", \"U2\"],\n [\"t_2\", \"\", \"U2\"],\n [\"t_3\", \"\", \"U2\"],\n [\"u_1\", \"U\", \"U2\"],\n [\"u_2\", \"U\", \"U2\"],\n [\"u_3\", \"\", \"U2\"],\n [\"l_1\", \"U\", \"\"],\n [\"l_2\", \"U\", \"U2\"],\n [\"h_3\", \"\", \"\"], \n [\"pi_1\",\"\", \"U2\"],\n [\"pi_2\",\"U\", \"U'\"],\n [\"pi_3\",\"\", \"U2\"],\n [\"l_3\", \"U\", \"\"],\n [\"h_1\", \"\", \"\"], \n [\"h_2\", \"\", \"\"], \n]\nconst cmll_algs : CaseDesc[] = cmll_algs_raw.map( ([x, y]) => createAlg(x, y, \"cmll\"))\n\nlet trigger_algs: CaseDesc[] = [\n    createAlg(\"RUR'_1\", \"R U R'\", \"trigger\"),\n    createAlg(\"RUR'_2\", \"r U r'\", \"trigger\"),\n    createAlg(\"RU'R'_1\", \"R U' R'\", \"trigger\"),\n    createAlg(\"RU'R'_2\", \"r U' r'\", \"trigger\"),\n    createAlg(\"R'U'R_1\", \"R' U' R\", \"trigger\"),\n    createAlg(\"R'U'R_2\", \"r' U' r\", \"trigger\"),\n    createAlg(\"R'UR_1\", \"R' U R\", \"trigger\"),\n    createAlg(\"R'UR_2\", \"r' U r\", \"trigger\"),\n    createAlg(\"RU2R'_1\", \"R U2 R'\", \"trigger\"),\n    createAlg(\"RU2R'_2\", \"r U2 r'\", \"trigger\"),\n    createAlg(\"R'U2R_1\", \"R' U2 R\", \"trigger\"),\n    createAlg(\"R'U2R_2\", \"r' U2 r\", \"trigger\"),\n]\n\nlet u_auf_algs: CaseDesc[] = [\n    createAlg(\"U\", \"U\", \"u_auf\"),\n    createAlg(\"U'\", \"U'\", \"u_auf\"),\n    createAlg(\"U2\", \"U2\", \"u_auf\"),\n    createAlg(\"None\", \"\", \"u_auf\"),\n]\n\nlet ori_algs: CaseDesc[] =\n    [\"WG\", \"WB\", \"WO\", \"WR\",\n    \"YG\", \"YB\", \"YO\", \"YR\",\n    \"BW\", \"BY\", \"BO\", \"BR\",\n    \"GW\", \"GY\", \"GO\", \"GR\",\n    \"OW\", \"OY\", \"OB\", \"OG\",\n    \"RW\", \"RY\", \"RB\", \"RG\"].map(s => createAlg(s, \"\", \"orientation\"))\n\nlet lookup_algset = (kind : string) => {\n    switch (kind) {\n        case \"cmll\": \n        case \"cmll_case\": return cmll_algs;\n        case \"nmcll\": return nmcll_algs;\n        case \"trigger\": return trigger_algs;\n        case \"orientation\": return ori_algs;\n        case \"u_auf\": return u_auf_algs;\n        default: return []\n    }\n}\n\nlet alg_generator_from_group = (selector: Selector) => {\n    let algSet = lookup_algset(selector.kind)\n    let lookup = new Set(selector.getActiveNames())\n    let get_prefix = (id: string) => {\n        return id.split(\"_\", 1)[0]\n    }\n    let algs : CaseDesc[] = (() => {\n        return algSet.filter(alg => {\n            let prefix = get_prefix(alg.id);\n            return lookup.has(prefix)\n        })\n    })()\n\n    let next = () => {\n        if (algs.length === 0) {\n            return empty_alg\n        } else {\n            return rand_choice(algs)\n        }\n    }\n    return next\n}\n\nlet alg_generator_from_cases_exact = (kind: string, activeNames: string[]) => {\n    let activeNamesSet = new Set(activeNames)\n    console.log(\"generating from active caes\", activeNamesSet)\n    let algs = lookup_algset(kind).filter(c => activeNamesSet.has(c.id) )\n    let next = () => {\n        if (algs.length === 0) {\n            return empty_alg\n        } else {\n            return rand_choice(algs)\n        }\n    }\n    return next\n}\n\nlet alg_generator_from_cases_contain = (kind: string, activeNames: string[]) => {\n    let activeNamesSet = new Set(activeNames)\n    console.log(\"generating from active caes\", activeNamesSet)\n    let algs = lookup_algset(kind).filter(c => activeNames.some(name => c.id.includes(name)) )\n    let next = () => {\n        if (algs.length === 0) {\n            return empty_alg\n        } else {\n            return rand_choice(algs)\n        }\n    }\n    return next\n}\n\nexport { alg_generator_from_group , alg_generator_from_cases_exact as alg_generator_from_cases, lookup_algset,\nalg_generator_from_cases_contain }","import React, { Fragment } from 'react'\n\nimport CubeSim from './CubeSim'\nimport { useTheme, FormControl, FormLabel, Typography, Button } from '@mui/material';\n\nimport makeStyles from '@mui/styles/makeStyles';\n\nimport Divider from '@mui/material/Divider';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport { CubeUtil, FaceletCube, Mask, MoveSeq } from '../lib/CubeLib';\n\nimport { AppState, Action } from \"../Types\";\nimport clsx from 'clsx';\nimport { Face } from '../lib/Defs';\nimport { MultiSelect, SingleSelect } from './SelectorViews';\nimport CaseSelect from './CaseSelectView';\nimport { ColorPanel } from './Input';\nimport CaseSelectDialog from './CaseSelectView';\nimport { cmll_algs_raw, nmcll_display_parity, nmcll_to_cmll_mapping } from '../lib/Algs';\n\nimport CaseVisualizer from './CaseVisualizer';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(2),\n      backgroundColor: theme.palette.background.default\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    fixedHeight: {\n      height: 350,\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    title : {\n        color: theme.palette.text.disabled,\n        fontWeight: 500,\n        fontSize: 18,\n        borderBottom: \"2px solid\",\n    },\n    prompt: {\n      color: theme.palette.text.secondary,\n    },\n    button: {\n      width: \"100%\"\n    },\n}))\n\nconst cmll_name_to_alg = Object.fromEntries(cmll_algs_raw)\nconst nmcll_display_algs = nmcll_to_cmll_mapping.map( ([x, y], i) => {\n  let parity = nmcll_display_parity[i]\n  let alg = cmll_name_to_alg[y[0][0]]\n  alg = parity[2] + \" \" + alg + \" \" + parity[1]\n  return [x, alg] as [string, string]\n})\n//console.log(nmcll_display_algs)\n\nfunction NMCLLSelect(props:  { state: AppState, dispatch: React.Dispatch<Action> } ) {\n  const {state, dispatch} = props\n  const groups = [\"o\", \"s\", \"as\", \"t\", \"u\", \"l\", \"pi\", \"h\"]\n  return <CaseSelectDialog {...{state, dispatch, settings: {\n    selector: \"nmcllSelector\",\n    groups,\n    algs: nmcll_display_algs,\n    cubeOptions: {\n      colorScheme: {\n        0: '#ffffff', // URFDLB. U = white\n        1: '#ee0000', // R = red\n        2: '#404040', // F = green\n        3: '#404040', // D = yellow\n        4: '#ffa100', // L = orange\n        5: '#404040', // B = blue\n      }\n    }\n    }, \n    title: \"Select cases by NMCLL recog (this is a separate selection from above, only activated when you're in L/R or F/B mode)\",\n    label: \"Select by NMCLL\"\n  } }/>\n}\n\nfunction _getMask(name: string) {\n  switch (name) {\n    case \"Show\": return Mask.solved_mask;\n    case \"Hide\": return Mask.empty_mask;\n    case \"Hide LSE\": return Mask.lse_mask;\n    default: return Mask.solved_mask\n  }\n}\nfunction CmllTrainerView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n    let { state, dispatch } = props\n    let cube = state.cube.state\n    let classes = useStyles()\n    const canvasPaper = clsx(classes.canvasPaper, classes.fixedHeight);\n    let facelet = FaceletCube.from_cubie(cube,\n      _getMask( state.config.cmllCubeMaskSelector.getActiveName() || \"Show\"))\n\n    let hyperori = state.config.hyperOriSelector.getActiveName() || \"off\"\n    if (hyperori !== \"off\") {\n      if (hyperori === \"F/B\") {\n        facelet = facelet.map( face => face.map(f => f === Face.L || f === Face.R ? Face.X : f) )\n      } else\n        facelet = facelet.map( face => face.map(f => f === Face.F || f === Face.B ? Face.X : f) )\n    }\n    const theme = useTheme()\n\n    const cmll = \"cmllSelector\";\n    const cmllcubemask = \"cmllCubeMaskSelector\";\n    const cmllauf = \"cmllAufSelector\";\n    const trigger = \"triggerSelector\";\n    const hyperorisel = \"hyperOriSelector\";\n\n    const panel = (\n      <Box> \n        { /* <MultiSelect {...{state, dispatch, select: cmll, options: { label: \"CMLL Case\", noDialog: true} }} /> */ }\n        <CaseSelectDialog {...{state, dispatch, settings: {\n          selector: \"cmllCaseSelector\",\n          algs: cmll_algs_raw,\n          groups: [\"o\", \"s\", \"as\", \"t\", \"u\", \"l\", \"pi\", \"h\"],\n          cubeOptions: {\n            colorScheme: {\n              0: '#FEFE00', // URFDLB. U = yellow\n              1: '#ffa100', // R = o\n              2: '#00b800', // F = g\n              3: '#404040', // D = w\n              4: '#ee0000', // L = r\n              5: '#0000f2', // B = blue\n            }\n          }\n          }, \n          label: \"Select CMLL Cases\"\n        } }/>\n        <Box width={8}></Box>\n        <MultiSelect {...{state, dispatch, select: cmllauf, options: { label: \"CMLL Auf\", noDialog: true} }} />\n        <MultiSelect {...{state, dispatch, select: trigger, options: { label: \"SB Last Pair Trigger (Uncheck all for pure CMLL)\", noDialog: true} } } />\n\n        <br/>\n        <NMCLLSelect {...{state, dispatch}}/>\n        <Box width={8}></Box>\n        <SingleSelect {...{state, dispatch, select: hyperorisel, label: \"NMCLL Recog Mode\" } } />\n\n        <SingleSelect {...{state, dispatch, select: cmllcubemask, label: \"Virtual Cube\"}} />\n        <ColorPanel {...{state, dispatch}} />\n      </Box>\n    )\n\n    React.useEffect( () =>  {\n      setReveal(false) // todo: drive this from props. now there's a delay which causes the answer to leak for a split second\n    }, [ state ])\n    const [reveal, setReveal] = React.useState(false)\n    const handleClick = () => {\n      setReveal(true)\n    }\n    const handleNext = () => {\n      dispatch({type: \"key\", content: \"#space\"})\n    }\n\n    React.useEffect(() => {\n      function downHandler(event: KeyboardEvent) {\n        state.keyMapping.handle(event, dispatch);\n        // intercept keyboard event for local control\n        if (event.key === \"/\") {\n          setReveal(true)\n        }\n      }\n      window.addEventListener('keydown', downHandler);\n      return () => {\n        window.removeEventListener('keydown', downHandler);\n      };\n    });\n\n    let alg = \"\"\n    let setup = \"\"\n    if (state.case.desc.length === 4) {\n      setup = state.case.desc[3].algs[0]\n    }\n    if (reveal && state.case.desc.length >= 3) {\n      const moves = new MoveSeq(state.case.desc[1].algs[0] + state.case.desc[2].algs[0] )\n      let moves_c = moves.collapse()\n      if (moves_c.moves.length > 0) {\n        if (moves_c.moves[0].name[0] === \"U\") {\n          alg += \"(\" + moves_c.moves[0].name + \") \";\n          moves_c.moves = moves_c.moves.slice(1)\n        }\n        alg += moves_c.toString()\n      }\n    }\n    const colorSchemeColors = state.colorScheme.getColorsForOri(state.cube.ori)\n    return (\n    <Box className={classes.container}>\n    <Grid container >\n      <Grid item xs={12} >\n            <Paper className={canvasPaper}>\n              <Box margin=\"auto\">\n              <CubeSim\n                width={400}\n                height={350}\n                cube={facelet}\n                colorScheme={colorSchemeColors}\n                theme={state.config.theme.getActiveName()}\n                facesToReveal={[/*Face.L*/]}\n              />\n              </Box>\n            </Paper>\n      </Grid>\n    </Grid>\n\n    <Box height = {5}/>\n\n    <Paper className={classes.paper} elevation={2}>\n    <Grid container spacing={2}>\n\n      <Grid item xs={3}>\n\n      <Box display=\"flex\">\n              <Box>\n              <Box className={classes.title} >\n                Scramble\n              </Box> </Box>\n      </Box>\n      </Grid>\n      <Grid item xs={9}>\n        <Box paddingBottom={1} lineHeight={1} >\n          <Typography style={{whiteSpace: 'pre-line', fontSize: 18, fontWeight: 500}}>\n            { setup }\n          </Typography>\n        </Box>\n\n      </Grid>\n      <Grid item xs={3}>\n\n      <Box display=\"flex\">\n              <Box>\n              <Box className={classes.title} >\n                Case\n              </Box> </Box>\n      </Box>\n      </Grid>\n      { (!reveal) ?\n      <Grid item xs={3}>\n      <Button onFocus={(evt) => evt.target.blur() } className={classes.button}\n      size=\"medium\" variant=\"outlined\" color=\"primary\" onClick={handleClick}> { /* className={classes.margin}>  */ }\n          Show\n      </Button>\n      </Grid>\n      :\n      <Grid item xs={9}>\n        <Box paddingBottom={1} lineHeight={1} >\n          <Typography style={{whiteSpace: 'pre-line', fontSize: 18, fontWeight: 500}}>\n            { alg }\n          </Typography>\n        </Box>\n\n        <Box borderColor=\"primary.main\" \n                style={{transition: \"all .3s ease\" }}>\n                <CaseVisualizer \n                  name=\"\"\n                  size={100}\n                  alg={alg}\n                  mask=\"cmll\"\n                  color={colorSchemeColors}\n                  cubeOptions={{}}\n                />\n        </Box>\n\n      </Grid>\n      }\n    </Grid>\n    <Box height={30}/>\n\n    <Grid container spacing={0}>\n        <Grid item xs={4} sm={4} md={3}>\n          <Button onFocus={(evt) => evt.target.blur() } className={classes.button}\n          size=\"medium\" variant=\"contained\" color=\"primary\" onClick={handleNext}>\n              Next\n          </Button>\n        </Grid>\n    </Grid>\n    </Paper>\n\n\n    <Box height={20}/>\n      <Divider />\n    <Box height={20}/>\n    { panel }\n\n    <Box height={20}/>\n      <Divider />\n    <Box height={15}/>\n\n    <Box>\n    <FormControl component=\"fieldset\" className={classes.prompt}>\n      <FormLabel component=\"legend\">\n         Usage: Press space for next case. Enter to redo. / to reveal.\n      </FormLabel>\n      </FormControl>\n    </Box>\n\n    </Box>\n    );\n}\n\nexport default CmllTrainerView\n\n\n","import React, { Fragment } from 'react'\n\nimport {\n    TextField,\n    Button,\n    Box,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    useMediaQuery,\n} from '@mui/material';\n\nimport makeStyles from '@mui/styles/makeStyles';\n\nimport EditIcon from '@mui/icons-material/Edit';\nimport { theme } from '../theme';\n\n\nimport { Action } from '../Types';\nimport { MoveSeq } from '../lib/CubeLib';\n\nconst useStyles = makeStyles(theme => ({\n\n    setupEdit: {\n        whiteSpace: 'pre-line',\n        fontSize: \"1.2rem\",\n        fontWeight:500,\n        [theme.breakpoints.down('sm')]: {\n        fontSize: \"1.0rem\",\n        fontWeight: 500\n        },\n    },\n    button: {\n        marginRight: theme.spacing(1)\n        //margin: theme.spacing(1)\n    }\n}))\n\nexport function ScrambleInputView(props: { display: string, scrambles: string[], dispatch: React.Dispatch<Action>}) {\n    let classes = useStyles()\n    let [editing, setEditing] = React.useState(false)\n    let [value, setValue] = React.useState(props.scrambles.join(\"\\n\"))\n    let textField = React.useRef<HTMLInputElement | null>(null)\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue(event.target.value)\n        event.stopPropagation()\n    }\n    const onKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        event.stopPropagation()\n    }\n    const toggleEdit = () => {\n        setEditing(!editing)\n    }\n    const handleClose = () => {\n        setEditing(false)\n    }\n    const handleSubmit = () => {\n        setEditing(false)\n        props.dispatch({type: \"scrambleInput\", content: value.split(\"\\n\").filter(s => s.trim())})\n    }\n    const handleInvert = () => {\n        setEditing(false)\n        const inverted = (value.split(\"\\n\").map(x => new MoveSeq(x).inv().toString()))\n        props.dispatch({type: \"scrambleInput\", content: inverted})\n    }\n    React.useEffect(  () => {\n        setValue(props.scrambles.join(\"\\n\"))\n    }, [props.scrambles])\n\n    /*\n    React.useEffect( ()=> {\n        if (editing) {\n            textField.current && textField.current.focus()\n        } else {\n            textField.current && textField.current.blur()\n            editButton.current && editButton.current.blur()\n        }\n    }, [editing]*/\n\n    const onEntered = () => {\n        textField.current && textField.current.focus()\n    }\n    const gt_sm = useMediaQuery(theme.breakpoints.up('sm'));\n    return <>\n    <Box>\n        { gt_sm ? \n            <Button variant={editing ? \"contained\" : \"outlined\"}\n                color=\"primary\"\n                size=\"small\"\n                onClick={toggleEdit}\n                className={classes.button}\n                startIcon={<EditIcon />}\n            >\n                Input\n            </Button>\n            : \n            <Button variant={editing ? \"contained\" : \"outlined\"}\n                color=\"primary\"\n                size=\"small\"\n                onClick={toggleEdit}\n                className={classes.button}\n            >\n                <Box marginTop={0.5}>\n                    <EditIcon fontSize=\"small\"/>\n                </Box>\n            </Button>\n            // <Box>\n            // <IconButton \n            //     size=\"small\"\n            //     onClick={toggleEdit}\n            //     className={classes.button}\n            //     color=\"primary\"\n            // >\n            //     <EditIcon />\n            // </IconButton>\n            // </Box>\n        }\n\n    </Box>\n\n    <Dialog open={editing} \n            onClose={handleClose}  \n            onKeyPress={onKeyPress} \n            onKeyDown={onKeyPress} \n            onKeyUp={onKeyPress}\n            /* onEntered={onEntered} */\n            >\n          <DialogTitle> Input your own solution / scrambles (one per line) </DialogTitle>\n          <DialogContent>\n                <TextField\n                    inputRef={textField}\n                    multiline\n                    size=\"medium\"\n                    fullWidth\n                    maxRows={10}\n                    rows={3}\n                    InputProps={{\n                        className:classes.setupEdit\n                    }}\n                    autoFocus\n                \n                    value={value}\n                    onChange={onChange}\n                    variant=\"outlined\">\n                </TextField>\n          </DialogContent>\n          <DialogActions>\n              <Box padding={1}>\n              <Button onClick={handleInvert} color=\"primary\" variant=\"outlined\" fullWidth >\n                  Use as solution\n              </Button>\n              <Button onClick={handleSubmit} color=\"primary\" variant=\"outlined\" fullWidth >\n                  Use as scramble\n              </Button>\n              </Box>\n          </DialogActions>\n    </Dialog>\n    </>\n}","import React from 'react'\nimport Tooltip, { tooltipClasses, TooltipProps } from '@mui/material/Tooltip';\nimport { styled } from '@mui/material/styles';\nimport { theme } from '../theme';\n\nexport const CustomTooltip = styled(({ className, ...props }: TooltipProps) => (\n    <Tooltip {...props} classes={{ popper: className }} />\n  ))({\n    [`& .${tooltipClasses.tooltip}`]: {\n      maxWidth: 400,\n      fontSize: \"1rem\"\n    },\n  });","import React, { Fragment } from 'react'\n\nimport CubeSim from './CubeSim'\nimport { Button, Typography, useTheme, FormControl, FormLabel } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Divider from '@mui/material/Divider';\n\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\n\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\nimport IconButton from '@mui/material/IconButton';\n\n\nimport { FaceletCube, Mask, MoveSeq } from '../lib/CubeLib';\n\nimport { AppState,  Action, FavCase, Mode} from \"../Types\";\nimport 'typeface-roboto-mono';\nimport { Face } from '../lib/Defs';\n\nimport { SingleSelect, MultiSelect, SliderSelect } from './SelectorViews';\nimport { ColorPanel } from './Input';\nimport { CaseDesc } from '../lib/Algs';\nimport { ScrambleInputView } from './ScrambleInputView';\nimport { CustomTooltip } from './Tooltip';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(2),\n      backgroundColor: theme.palette.background.default,\n      transition: \"all .5s ease-in-out\"\n    },\n    button: {\n      width: \"100%\",\n      height: 50\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n      marginBottom: 3,\n      borderRadius: 0\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    infoColumn: {\n      color: theme.palette.background.paper\n    },\n    scrambleColumn: {\n      paddingLeft: theme.spacing(3)\n    },\n    textColumn: {\n      // color: \"black\",\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 138\n      },\n    },\n    setup: {\n      whiteSpace: 'pre-line',\n      fontSize: \"1.4rem\",\n      fontWeight:500,\n      [theme.breakpoints.down('sm')]: {\n      fontSize: \"1.2rem\",\n      fontWeight: 500\n      },\n    },\n    condGap: {\n    },\n    fgap: {\n      flexShrink: 100, flexBasis: \"2.5rem\", minWidth: \"1.5em\",\n      [theme.breakpoints.down('sm')]: {\n        flexBasis: \"1.0rem\", \n        minWidth: \"0.4rem\"\n      }\n    },\n    fixedHeight: {\n      height: 250,\n    },\n    title : {\n        color: theme.palette.text.disabled,\n        fontWeight: 500,\n        borderBottom: \"3px solid\",\n    },\n    sourceIcon : {\n        color: theme.palette.text.disabled,\n        fontSize: 15,\n        padding: 0\n    },\n    sourceIconWrap : {\n        //border: \"1px solid \" + theme.palette.text.disabled,\n        //borderRadius: 3\n    },\n    fab: {\n      position: 'absolute',\n      top: theme.spacing(7),\n      left: theme.spacing(2),\n    },\n    prompt: {\n      color: theme.palette.text.secondary,\n    },\n  }))\n\n\nfunction getMask(state: AppState) : Mask {\n    if (state.mode === \"fbdr\") {\n      const fbOnly = (state.case.desc.length === 0 || state.case.desc[0].kind === \"fb\")\n      //   getActiveName(state.config.fbOnlySelector) === \"FB Last Pair\"\n      return fbOnly ? Mask.fb_mask : Mask.fbdr_mask\n    }\n    else if (state.mode === \"fs\") {\n      let name = state.config.fsSelector.getActiveName()\n      return ({\n        \"Front FS\": Mask.fs_front_mask,\n        \"Back FS\": Mask.fs_back_mask,\n        \"Both\": Mask.fb_mask\n      } as any)[name]\n    }\n    else if (state.mode === \"ss\") {\n      if (state.case.desc.length === 0) return Mask.sb_mask\n      let name = state.config.ssSelector.getActiveName()\n      let dpair = state.config.ssPairOnlySelector.getActiveName() === \"D-Pair only\"\n\n      switch (name) {\n        case \"Front SS\": return dpair ? Mask.ssdp_front_mask : Mask.ss_front_mask; \n        case \"Back SS\": return dpair ? Mask.ssdp_back_mask : Mask.ss_back_mask; \n        default : return dpair ? Mask.ssdp_both_mask : Mask.f2b_mask\n      }\n    }\n    else if (state.mode === \"fb\") {\n      if (state.case.desc.length === 0 || state.case.desc[0].kind === \"fb\" || state.case.desc[0].kind.startsWith(\"fb@\")) {\n        return Mask.fb_mask\n      }\n      else if (state.case.desc[0].kind === \"fbdr\") {\n        return Mask.fbdr_mask\n      } else {\n        return Mask.solved_mask\n      }\n    }\n    else if (state.mode === \"fbss\") {\n      let name = state.config.fbssSsSelector.getActiveName()\n      return ({\n        \"Front SS\": Mask.ss_front_mask,\n        \"Back SS\": Mask.ss_back_mask,\n        \"Both\": Mask.f2b_mask\n      } as any)[name]\n    }\n    else if (state.mode === \"4c\" || state.mode === \"eopair\") {\n      return Mask.solved_mask\n    }\n    else return Mask.sb_mask\n}\n\nfunction getHelperTextForMode(mode: Mode) {\n  if (mode === \"4c\" || mode === \"eopair\") {\n    return (\"Usage: Press space for next case. Enter to redo.\"\n      + \"\\n\\nVirtual Cube: I/K (E/D) for M'/M, J/F for U/U'\")\n  } else {\n    return null\n  }\n}\n\n\nfunction BlockTrainerView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n    let { state, dispatch } = props\n    let cube = state.cube.state\n    let classes = useStyles()\n\n    let facelet = FaceletCube.from_cubie(cube, getMask(state))\n\n    let desc : CaseDesc[] = state.case.desc.length ? state.case.desc :\n       [ { algs: [\"\"], setup:\"Press next for new case\", id: \"\", kind: \"\"} ]\n\n    let spaceButtonText = (state.name === \"hiding\") ? \"Reveal\" : \"Next\"\n    let showMoveCountHint = state.config.moveCountHint.getActiveName() === \"Show\"\n\n    let describe_reveal = function(algs: CaseDesc[]) {\n      let get_algs = (d: CaseDesc) => d.algs;\n      if (algs.length === 1) {\n        return get_algs(algs[0]).join(\"\\n\")\n      } else {\n        return algs.map( alg =>\n          `[${alg.kind}]:\\n` + get_algs(alg).join(\"\\n\") + \"\\n\"\n        )\n      }\n    }\n\n    let describe_hide = (desc: CaseDesc[]) => {\n      let minMove = desc.map( d =>\n        d.algs.map(a => new MoveSeq(a).remove_setup().moves.length))\n        .flat()\n        .reduce( (a, b) => Math.min(a, b), 100 )\n      return `(Min = ${minMove} STM)`\n    }\n    let algText = (state.name === \"hiding\") ? (showMoveCountHint ? describe_hide(desc) : \"\")\n      : (state.name === \"revealed\") ? describe_reveal(desc) : \"\"\n\n    const handleSpace = () => {\n      dispatch({type: \"key\", content: \"#space\"})\n      if (spaceButtonText === \"Next\") {\n        setFav(false)\n      }\n    }\n\n    const setup = desc.length ? desc[0].setup! : \"\"\n    const theme = useTheme()\n\n    // source\n    // Add event listeners\n    React.useEffect(() => {\n      function downHandler(event: KeyboardEvent) {\n        if (event.key === \" \" && spaceButtonText === \"Next\") {\n          setFav(false)\n        }\n        state.keyMapping.handle(event, dispatch);\n      }\n      window.addEventListener('keydown', downHandler);\n      return () => {\n        window.removeEventListener('keydown', downHandler);\n      };\n    });\n\n    const [favSelected, setFav] = React.useState(false)\n    const handleFav = () => {\n      if (state.case.desc.length === 0) return\n      const case_ : FavCase = {\n        mode: state.mode,\n        solver: state.case.desc.map(x => x.kind),\n        setup: setup || \"\"\n      }\n      if (!favSelected){\n        setFav(true)\n        dispatch({type: \"favList\", content: [ case_ ], action: \"add\"})\n      } else {\n        setFav(false)\n        dispatch({type: \"favList\", content: [ case_ ], action: \"remove\" })\n      }\n    }\n\n    const gt_sm = useMediaQuery(theme.breakpoints.up('sm'));\n    const canvas_wh = (gt_sm) ? [400, 350] : [320, 280]\n    const ADD_STR = (gt_sm) ? \"Add\" : \"\";\n\n    // helper-text\n    let helperText = getHelperTextForMode(state.mode)\n\n    let levelSelectionWarning = \"We weren't able to generate your level within time limit. You can try again -- some levels are reachable within a few tries.\"\n    let levelSelectionSuccess = state.cube.levelSuccess\n\n    const scramblePanel = \n          <Box style={{display: \"flex\", flexWrap: \"wrap\", padding: 0}}>\n            <ScrambleInputView display = {setup}\n                dispatch={dispatch} scrambles={state.scrambleInput}/>\n\n            <Box>\n            {\n              gt_sm ?\n              <Button variant={favSelected ? \"contained\" : \"outlined\"}\n                  color=\"primary\"\n                  size=\"small\"\n                  name=\"fav\"\n                  onClick={handleFav}\n                  startIcon={<FavoriteIcon/>} \n                  >\n                  {favSelected ? \"✓\" : ADD_STR}\n              </Button> \n              :\n              null\n              // <Button variant={favSelected ? \"contained\" : \"outlined\"}\n              //     color=\"primary\"\n              //     size=\"small\"\n              //     name=\"fav\"\n              //     onClick={handleFav}\n              // >\n              //   <Box marginTop={0.5}>\n              //     <FavoriteIcon fontSize=\"small\"/>\n              //   </Box>\n              // </Button>\n            }\n            </Box>\n          </Box>\n\n    return (\n    <Box className={classes.container}>\n      <Paper className={classes.paper} elevation={1}>\n        <Box style={{display: \"flex\"}}>\n          <Box style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\n            <Box className={classes.title} style={{}}>\n              Scramble\n            </Box> \n          </Box>\n          <Box style={{}} className={classes.fgap} />\n          <Box style={{display: \"flex\", alignItems: \"center\", flexGrow: 1}}>\n            <Typography className={classes.setup} >\n                  {setup}\n            </Typography>\n          </Box>\n          <Box style={{}} className={classes.fgap} />\n\n          {gt_sm && scramblePanel}\n          \n          \n        </Box>\n      </Paper>\n\n      <Paper className={ classes.paper}>\n      <Grid container>\n\n        <Grid item md={6} sm={12} xs={12} className={classes.condGap}>\n          <Box style={{display: \"flex\" }}>\n            <Box display=\"flex\" >\n                <Box style={{display: \"flex\", alignSelf: \"flex-start\"}}> <Box className={classes.title} style={{}}>\n                  Solutions\n                </Box> </Box>\n            </Box>\n            <Box style={{}} className={classes.fgap} />\n            <div>\n              <Box paddingBottom={2} lineHeight={1}>\n                <Typography style={{whiteSpace: 'pre-line', fontSize: \"1.2rem\"}} >\n                  {algText}\n                </Typography>\n              </Box>\n            </div>\n          </Box>\n        </Grid>\n\n\n        <Grid item md={6} sm={12} xs={12} style={{display: \"flex\", justifyContent: \"center\"}}>\n          <Box style={{backgroundColor: \"rgba(0, 0, 0, 0)\"}}>\n            { props.state.config.showCube.getActiveName() === \"Show\" ?\n            <CubeSim\n              width={canvas_wh[0]}\n              height={canvas_wh[1]}\n              cube={facelet}\n\n              colorScheme={state.colorScheme.getColorsForOri(state.cube.ori)}\n              hintDistance={ (state.mode === \"4c\" || state.mode === \"eopair\") ? 3 : 7 }\n              theme={state.config.theme.getActiveName()}\n              facesToReveal={ [Face.L, Face.B, Face.D]  }\n            /> : null }\n          </Box>\n        </Grid>\n      </Grid>\n      </Paper>\n\n      <Paper className={classes.paper} style={{paddingTop: 20, paddingBottom: 22}}>\n\n      <Grid container spacing={1}>\n        <Grid item xs={5} sm={4} md={3} marginLeft={1}>\n          <Button onFocus={(evt) => evt.target.blur() } className={classes.button} \n            size=\"large\" variant=\"contained\" color=\"primary\" \n            onClick={handleSpace} sx={{borderRadius: 0}}>\n              {spaceButtonText}\n          </Button>\n        </Grid>\n        {\n          !levelSelectionSuccess ?\n          <Grid item xs={1} marginLeft={1}>\n            <CustomTooltip title={levelSelectionWarning}>\n              <IconButton>\n                <ErrorOutlineIcon sx={{ fontSize: 30 }}/>\n              </IconButton>\n            </CustomTooltip> \n          </Grid> :\n          null\n        }\n\n\n      </Grid>\n\n      </Paper>\n\n      <Box height={20}/>\n      <Divider/>\n      <Box height={20}/>\n\n      <ConfigPanelGroup {...{state, dispatch} } />\n\n      {helperText ?\n      <Fragment>\n        <Box height={20}/>\n          <Divider/>\n        <Box height={15}/>\n        <Box>\n        <FormControl component=\"fieldset\" className={classes.prompt}>\n          <FormLabel component=\"legend\">\n            <pre style={{ fontFamily: 'inherit' }}>\n              {helperText}\n            </pre>\n          </FormLabel>\n          </FormControl>\n        </Box>\n      </Fragment> : null }\n    </Box>\n    );\n}\n\n\n\nfunction ConfigPanelGroup(props: {state: AppState, dispatch: React.Dispatch<Action> }) {\n  let { state, dispatch } = props\n  if (state.mode === \"ss\") {\n    let DRManip = [\n      // names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n      // \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n      { name: \"Toggle Select All\", enableIdx: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17] },\n      { name: \"Toggle All Oriented\", enableIdx: [0, 2, 4, 6, 8, 10, 12, 14, 16] },\n    ]\n    return (\n      <Fragment>\n      <SliderSelect {...{state, dispatch, select: \"ssLevelSelector\"}} /> \n\n      <SingleSelect {...{state, dispatch, select: \"ssSelector\"}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: \"ssPairOnlySelector\"}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: \"solutionNumSelector\"}}> </SingleSelect>\n      {/* <SingleSelect {...{state, dispatch, select: \"evaluator\"}}> </SingleSelect> */}\n      \n      <SingleSelect {...{state, dispatch, select: \"moveCountHint\"}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: \"showCube\"}}> </SingleSelect>\n      <MultiSelect {...{state, dispatch, select: \"ssPosSelector\", options: {manipulators: DRManip} }}> </MultiSelect>\n      <ColorPanel {...{state, dispatch}} />\n\n      </Fragment>\n    )\n  } else if (state.mode === \"fbdr\") {\n    let select1 = \"fbdrSelector\"\n    let select2 = \"fbOnlySelector\"\n    let select3 = \"fbPairSolvedSelector\"\n    let select4 = \"fbdrScrambleSelector\"\n    let select5 = \"solutionNumSelector\"\n\n    let LPEdgeManip = [\n      { name: \"Toggle Select All\", enableIdx: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17] },\n    ]\n    let pos1 = \"fbdrPosSelector1\"\n    let pos3 = \"fbdrPosSelector3\"\n\n    return (\n      <Fragment>\n      <SliderSelect {...{state, dispatch, select: \"fbdrLevelSelector\"}} /> \n\n      <SingleSelect {...{state, dispatch, select: select2}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select1}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select3}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select4}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select5}}> </SingleSelect>\n      {/* <SingleSelect {...{state, dispatch, select: \"evaluator\"}}> </SingleSelect> */}\n      <SingleSelect {...{state, dispatch, select: \"moveCountHint\"}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: \"showCube\"}}> </SingleSelect>\n\n      <MultiSelect {...{state, dispatch, select: pos1, options: {manipulators: LPEdgeManip} }}> </MultiSelect>\n      <MultiSelect {...{state, dispatch, select: pos3, options: {manipulators: LPEdgeManip} }}> </MultiSelect>\n      <ColorPanel {...{state, dispatch}} />\n\n      </Fragment>\n    )\n  } else if (state.mode === \"fb\") {\n    return (\n      <Fragment>\n        <SliderSelect {...{state, dispatch, select: \"fbLevelSelector\"}} /> \n        {/* <SingleSelect {...{state, dispatch, select: \"fbStratSelector\"}} />  */}\n\n        <SingleSelect {...{ state, dispatch, select: \"fbPieceSolvedSelector\" }}> </SingleSelect>\n        {/* <SingleSelect {...{state, dispatch, select: \"fbBasisSelector\"}} />  */}\n        <SingleSelect {...{ state, dispatch, select: \"solutionNumSelector\"}}> </SingleSelect>\n      {/* <SingleSelect {...{state, dispatch, select: \"evaluator\"}}> </SingleSelect> */}\n        <SingleSelect {...{state, dispatch, select: \"moveCountHint\"}}> </SingleSelect>\n        <SingleSelect {...{state, dispatch, select: \"showCube\"}}> </SingleSelect>\n\n        <ColorPanel {...{state, dispatch}} />\n\n\n      </Fragment>\n    )\n   } else if (state.mode === \"fs\") {\n    let select1 = \"fsSelector\"\n    let select2 = \"solutionNumSelector\"\n\n    return (\n      <Fragment>\n        <SliderSelect {...{state, dispatch, select: \"fsLevelSelector\"}} /> \n\n        <SingleSelect {...{ state, dispatch, select: select1 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n        {/* <SingleSelect {...{state, dispatch, select: \"evaluator\"}}> </SingleSelect> */}\n        <SingleSelect {...{state, dispatch, select: \"moveCountHint\"}}> </SingleSelect>\n        <SingleSelect {...{state, dispatch, select: \"showCube\" }}> </SingleSelect>\n\n        <ColorPanel {...{state, dispatch}} />\n\n\n      </Fragment>\n    )\n   } else if (state.mode === \"fsdr\") {\n    let select1 = \"fsSelector\"\n    let select2 = \"solutionNumSelector\"\n\n    return (\n      <Fragment>\n        <SliderSelect {...{state, dispatch, select: \"fsLevelSelector\"}} /> \n\n        <SingleSelect {...{ state, dispatch, select: select1 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n        {/* <SingleSelect {...{state, dispatch, select: \"evaluator\"}}> </SingleSelect> */}\n        <SingleSelect {...{state, dispatch, select: \"moveCountHint\"}}> </SingleSelect>\n        <SingleSelect {...{state, dispatch, select: \"showCube\" }}> </SingleSelect>\n\n        <ColorPanel {...{state, dispatch}} />\n\n\n      </Fragment>\n    )\n   }  \n   else if (state.mode === \"fbss\") {\n    let select1 = \"fbssLpSelector\"\n    let select2 = \"fbssSsSelector\"\n    let select3 = \"solutionNumSelector\"\n\n    return (\n      <Fragment>\n        <SliderSelect {...{state, dispatch, select: \"fbssLevelSelector\"}} /> \n        <SingleSelect {...{ state, dispatch, select: select1 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select3 }}> </SingleSelect>\n        {/* <SingleSelect {...{state, dispatch, select: \"evaluator\"}}> </SingleSelect> */}\n        <SingleSelect {...{state, dispatch, select: \"moveCountHint\"}}> </SingleSelect>\n        <ColorPanel {...{state, dispatch}} />\n\n\n      </Fragment>\n    )\n   }\n   else if (state.mode === \"4c\"){\n    let select1 = \"lseStageSelector\"\n    let select2 = \"lseMCSelector\"\n    let select3 = \"lseBarSelector\"\n    let select4 = \"solutionNumSelector\"\n\n    return (\n      <Fragment>\n        <SingleSelect {...{ state, dispatch, select: select1 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select3 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select4 }}> </SingleSelect>\n        {/* <SingleSelect {...{state, dispatch, select: \"evaluator\"}}> </SingleSelect> */}\n        <SingleSelect {...{state, dispatch, select: \"moveCountHint\"}}> </SingleSelect>\n        <SingleSelect {...{state, dispatch, select: \"showCube\"}}> </SingleSelect>\n\n        <ColorPanel {...{state, dispatch}} />\n      </Fragment>\n    )\n   } else if (state.mode === \"eopair\"){\n    let select1 = \"lseEOSelector\"\n    let select2 = \"lseEOLRMCSelector\"\n    let select3 = \"lseBarbieSelector\"\n    let select4 = \"lseEOLRScrambleSelector\"\n    let select5 = \"solutionNumSelector\"\n\n    return (\n      <Fragment>\n        <MultiSelect {...{ state, dispatch, select: select1, options: {noDialog: true}} }> </MultiSelect>\n        <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select3 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select4 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select5 }}> </SingleSelect>\n        {/* <SingleSelect {...{state, dispatch, select: \"evaluator\"}}> </SingleSelect> */}\n        <SingleSelect {...{state, dispatch, select: \"moveCountHint\"}}> </SingleSelect>\n        <SingleSelect {...{state, dispatch, select: \"showCube\"}}> </SingleSelect>\n\n        <ColorPanel {...{state, dispatch}} />\n      </Fragment>\n    )\n   }\n   else return <Fragment/>\n}\n\n\n\nexport default BlockTrainerView\n\n\n","import React, { Dispatch } from 'react'\n\nimport makeStyles from '@mui/styles/makeStyles';\nimport { ImageList, ImageListItem} from '@mui/material';\n\nimport { CaseDesc } from \"../lib/Algs\";\nimport { AppState, Action } from '../Types';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n      },\n    container: {\n        paddingTop: theme.spacing(0),\n        paddingBottom: theme.spacing(2),\n        backgroundColor: theme.palette.background.default,\n      },\n    paper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n      gridList: {\n        width: 600,\n        height: 450,\n      },\n}))\n\ntype VisualCubeConfig = {\n    alg: string;\n    stage: string;\n    sch: string; //yrbwog\n}\nfunction VisualCube(props: VisualCubeConfig) {\n  let { alg, stage, sch } = props\n  const template =\n  `http://localhost:8000/visualcube.php?fmt=svg&r=y30x-24&size=150&co=40&fo=100&cc=ccc`\n    + `&stage=${stage}&sch=${sch}&case=${alg}`\n  return <img src={template} alt=\"\"/>\n}\n\nfunction PanoramaTable(props: {algs: CaseDesc[]}){\n    let classes = useStyles()\n    let { algs } = props\n    //  /* cellHeight={160} className={classes.gridList} cols={3}>\n    return <ImageList>\n            {algs.map((alg) => (\n                <ImageListItem key={alg.id} cols={1}>\n                    <VisualCube alg={alg.algs[0]} stage=\"f2b\" sch=\"yrbwog\"/>\n                </ImageListItem>\n            ))}\n        </ImageList>\n}\n\nexport default function PanoramaView(props: { state: AppState, dispatch: Dispatch<Action> }) {\n    let classes = useStyles()\n    let algs : CaseDesc[] = [\n        \"RUR\", \"RU'R'\"\n    ].map( str => ({\n        id: str,\n        algs: [str],\n        kind: \"sb\"\n    }))\n\n    return <div className={classes.root}>\n        <div>\n        <PanoramaTable algs={algs}/>\n        </div>\n        <div>\n        <PanoramaTable algs={algs}/>\n        </div>\n    </div>\n}","import { CubieCube, Move } from './CubeLib';\nimport { Face } from './Defs';\nimport { cartesianProduct } from './Math';\nif ((globalThis as any).$RefreshReg$ === undefined) {\n    // hack for disabling refresh plugin in web worker\n    (globalThis as any).$RefreshReg$ = () => {};\n    (globalThis as any).$RefreshSig$ = () => () => {};\n}\n\nexport type PrunerConfig = {\n    size: number,\n    encode: (cube : CubieCube) => number,\n    solved_states: CubieCube[],\n    max_depth: number,\n    moveset: string[],\n    rev_lookup_depth?: number,\n    name: string\n}\n\nexport type PrunerT = {\n    init: () => void,\n    query: (c : CubieCube) => number,\n    equal: (c1 : CubieCube, c2: CubieCube) => boolean,\n    encode: (c : CubieCube) => number,\n    moveset: Move[],\n    max_depth: number,\n    size: number\n}\n\nenum PrunerPiece {\n    S, O, I, X\n}; // Solved, Oriented, Ignore, Exclude \nconst { S, I } = PrunerPiece\n\nexport type PrunerDef = {\n    corner: PrunerPiece[],\n    edge:   PrunerPiece[],\n    center: PrunerPiece[],\n    solved_states: string[],\n    moveset: string[],\n    max_depth: number,\n    name: string\n}\n\nlet htm_rwm = [\"U\", \"U2\", \"U'\", \"F\", \"F2\", \"F'\", \"R\", \"R2\", \"R'\",\n    \"r\", \"r2\", \"r'\", \"D\", \"D2\", \"D'\", \"M\", \"M'\", \"M2\", \"B\", \"B'\", \"B2\"]\nlet rrwmu = [\"U\", \"U'\", \"U2\", \"R\", \"R'\", \"R2\",\n    \"r\", \"r'\", \"r2\", \"M'\", \"M\", \"M2\"]\nlet rrwmu_m_first = [\"U\", \"U'\", \"U2\", \"R\", \"R'\", \"R2\", \"M'\", \"M\", \"M2\",\n\"r\", \"r'\", \"r2\"]\nlet rrwmu_f = [\"U\", \"U'\", \"U2\", \"R\", \"R'\", \"R2\",\n    \"r\", \"r'\", \"r2\", \"M'\", \"M\", \"M2\", \"F'\", \"F\", \"F2\"]\nlet rrwmu_b = [\"U\", \"U'\", \"U2\", \"R\", \"R'\", \"R2\",\n    \"r\", \"r'\", \"r2\", \"M'\", \"M\", \"M2\", \"B'\", \"B\", \"B2\"]\nlet htm_rwm_uw = [\"U\", \"U2\", \"U'\", \"F\", \"F2\", \"F'\", \"R\", \"R2\", \"R'\",\n    \"r\", \"r2\", \"r'\", \"u\", \"u2\", \"u'\", \"M\", \"M'\", \"M2\", \"B\", \"B'\", \"B2\"]\nlet htm_rwm_fws = [\"U\", \"U2\", \"U'\", \"F\", \"F2\", \"F'\", \"R\", \"R2\", \"R'\",\n    \"r\", \"r2\", \"r'\", \"M\", \"M'\", \"M2\", \"D\", \"D'\", \"D2\",\n    \"f\", \"f'\", \"f2\", \"S'\", \"S\", \"S2\"] // TODO: suppress the other S for OH mode?\n\nexport function Pruner(config: PrunerConfig) : PrunerT {\n    let dist: Uint8Array;\n    let { size, encode, solved_states, max_depth, moveset: moveset_str, name} = config\n    let moveset = moveset_str.map(x => Move.all[x])\n    let initialized = false\n    let level_states = [[...solved_states]]\n    function init() {\n        if (initialized) return\n        initialized = true\n        dist = new Uint8Array(size).fill(255)\n        for (let state of solved_states) {\n            dist[encode(state)] = 0\n        }\n        let frontier = [...solved_states]\n        let total_expanded = frontier.length\n        for (let i = 0; i < max_depth; i++) {\n            //console.log(\"pruner: expanding depth \", i)\n            let new_frontier = []\n            for (let state of frontier) {\n                for (let move of moveset) {\n                    let newState = state.apply(move) // clone\n                    let idx = encode(newState)\n                    if (dist[idx] === 255) {\n                        dist[idx] = i + 1;\n                        new_frontier.push(newState)\n                    }\n                }\n            }\n            frontier = new_frontier\n            if (config.rev_lookup_depth && i + 1 <= config.rev_lookup_depth) {\n                level_states.push([...frontier])\n            }\n            total_expanded += frontier.length\n        }\n        //console.log(`${name} pruning table generated. depth = ${max_depth}. size = ${total_expanded}`)\n        if (config.rev_lookup_depth) {\n            // console.log(`${name} pruning reverse lookup generated. depth = ${config.rev_lookup_depth}. size = ${level_states.map(x => x.length).reduce((x,y)=>x+y)}`)\n        }\n    }\n    function query(cube: CubieCube) {\n        let d = dist[encode(cube)]\n        if (d === 255) return max_depth + 1;\n        return d\n    }\n    function equal(cube1: CubieCube, cube2: CubieCube) {\n        return encode(cube1) === encode(cube2)\n    }\n    return  {\n        init,\n        query,\n        equal,\n        encode,\n        moveset,\n        max_depth,\n        size\n    }\n}\n\n\n\nlet prunerFactory = function(def: PrunerDef): PrunerConfig {\n    // edge\n    if (def.corner.length !== 8 || def.edge.length !== 12 || def.center.length !== 6) {\n        throw new Error(\"Invalid pruner def\");\n    }\n    const {S, O, I, X} = PrunerPiece\n    const def_to_idx = (d : PrunerPiece[], count_all?: boolean) => {\n        let curr_idx = 0, idx_arr = []\n        for (let i = 0; i < d.length; i++) {\n            if (d[i] === S || (count_all && (d[i] === O || d[i] === I))) {\n                idx_arr.push(curr_idx++);\n            } else idx_arr.push(-1);\n        }\n        return idx_arr;\n    }\n    let eosize = def.edge.filter(x => x === S || x === O).length\n    let epsize = def.edge.filter(x => x === S).length\n    let eisize = def.edge.filter(x => x !== X).length\n    let esize = Math.pow(2, eosize) * Math.pow(eisize, epsize)\n    let ep_idx = def_to_idx(def.edge, false);\n    let e_idx = def_to_idx(def.edge, true);\n\n    let cosize = def.corner.filter(x => x === S || x === O).length\n    let cpsize = def.corner.filter(x => x === S).length\n    let cisize = def.corner.filter(x => x !== X).length\n    let csize = Math.pow(3, cosize) * Math.pow(cisize, cpsize)\n    let cp_idx = def_to_idx(def.corner, false);\n    let c_idx = def_to_idx(def.corner, true);\n\n    let tosize = def.center.filter(x => x === O).length\n    let tpsize = def.center.filter(x => x === S).length\n    let tisize = def.center.filter(x => x !== X).length\n    let tsize = Math.pow(2, tosize) * Math.pow(tisize, tpsize)\n    let tp_idx = def_to_idx(def.center, false);\n\n    let size = esize * csize * tsize;\n\n    function encode(cube: CubieCube) {\n        let eo = 0, ep = 0, co = 0, cp = 0, to = 0, tp = 0, e, c, t\n        for (let i = 0; i < 12; i++) {\n            switch (def.edge[cube.ep[i]]) {\n                case S:\n                    eo = eo * 2 + cube.eo[i];\n                    ep = ep + Math.pow(eisize, ep_idx[cube.ep[i]]) * e_idx[i];\n                    break;\n                case O:\n                    eo = eo * 2 + cube.eo[i];\n                    break;\n            }\n        }\n        e = ep * Math.pow(2, eosize) + eo\n        for (let i = 0; i < 8; i++) {\n            switch (def.corner[cube.cp[i]]) {\n                case S:\n                    co = co * 3 + cube.co[i];\n                    cp = cp + Math.pow(cisize, cp_idx[cube.cp[i]]) * c_idx[i];\n                    break;\n                case O:\n                    co = co * 3 + cube.co[i];\n                    break;\n            }\n        }\n        c = cp * Math.pow(3, cosize) + co\n        for (let i = 0; i < 6; i++) {\n            switch (def.center[cube.tp[i]]) {\n                case S:\n                    tp = Math.pow(tisize, tp_idx[cube.tp[i]]) + i;\n                    break;\n                case O:\n                    to = to * 3 + (cube.tp[i] / 2) | 0;\n                    break;\n            }\n        }\n        t = tp * Math.pow(3, tosize) + to\n        return e * csize * tsize + c * tsize + t\n    }\n\n    const solved_states = def.solved_states.map( m => new CubieCube().apply(m))\n    const moveset = def.moveset\n    const max_depth = def.max_depth\n    const name = def.name\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset,\n        name\n    }\n}\n\n\nlet fbdrPrunerConfigGen = (max_depth: number) : PrunerConfig => {\n    const esize = Math.pow(24, 4)\n    const csize = Math.pow(24, 2)\n    const size = esize * csize\n\n    function encode(cube:CubieCube) {\n      let c1 = 0, c2 = 0\n      for (let i = 0; i < 8; i++) {\n        if (cube.cp[i] === 4) {\n          c1 = i * 3 + cube.co[i]\n        } else if (cube.cp[i] === 5) {\n          c2 = i * 3 + cube.co[i];\n        }\n      }\n      const enc_c = c1 * 24 + c2\n      let e1 = 0, e2 = 0, e3 = 0, e4 = 0\n      for (let i = 0; i < 12; i++) {\n          switch (cube.ep[i]) {\n              case 5 : e1 = i * 2 + cube.eo[i]; break;\n              case 8 : e2 = i * 2 + cube.eo[i]; break;\n              case 9 : e3 = i * 2 + cube.eo[i]; break;\n              case 7 : e4 = i * 2 + cube.eo[i]; break;\n          } \n      }\n      const enc_e = e1 * (24 * 24 * 24) + e2 * (24 * 24) + e3 * 24 + e4\n      return enc_c + 24 * 24 * enc_e\n    }\n\n    const moves = [[]]//, Move.parse(\"L R'\"), Move.parse(\"L' R\"), Move.parse(\"L2 R2\")] \n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move) )\n    const moveset = htm_rwm\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset,\n        name: \"fbdr\"\n    }\n}\n\nlet fbdrPrunerConfig = fbdrPrunerConfigGen(5)\n\n// let fbPrunerConfigAuto = prunerFactory({\n//     corner: [I,I,I,I,S,S,I,I],\n//     edge:   [I,I,I,I,I,S,I,I,S,S,I,I],\n//     center: [I,I,I,I,S,I],\n//     solved_states: [\"id\"],\n//     moveset: htm_rwm,\n//     max_depth: 5\n// });\n\n\nlet fbAtBLPrunerConfigGen = (max_depth: number) : PrunerConfig => {\n    const esize = Math.pow(24, 2)\n    const csize = Math.pow(24, 2)\n    const tsize = 6\n    const size = esize * csize * tsize\n\n    function encode(cube:CubieCube) {\n      let c1 = 0, c2 = 0\n      for (let i = 0; i < 8; i++) {\n        switch (cube.cp[i]) {\n            case 4: c1 = i * 3 + cube.co[i]; break;\n            case 5: c2 = i * 3 + cube.co[i]; break;\n        }\n      }\n      const enc_c = c1 * 24 + c2\n      let e1 = 0, e2 = 0\n      for (let i = 0; i < 12; i++) {\n          switch (cube.ep[i]) {\n              case 5 : e1 = i * 2 + cube.eo[i]; break;\n              case 8 : e2 = i * 2 + cube.eo[i]; break;\n          } \n      }\n      const enc_e = e1 * (24) + e2\n      let t1 = 0\n      for (let i = 0; i < 6; i++) {\n         if (cube.tp[i] === Face.L) {\n            t1 = i;\n         }\n      }\n      const enc_t = t1\n      return enc_e * (csize * tsize) + enc_c * tsize + enc_t\n    }\n\n    const moves = [[]]//, Move.parse(\"L R'\"), Move.parse(\"L' R\"), Move.parse(\"L2 R2\")] \n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move) )\n\n    const moveset = htm_rwm_fws\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset,\n        // rev_lookup_depth: 3,\n        name: \"fb\"\n    }\n}\n\nlet fbAtDLPrunerConfigGen = (max_depth: number) : PrunerConfig => {\n    const esize = Math.pow(24, 2)\n    const csize = Math.pow(24, 2)\n    const tsize = 6\n    const size = esize * csize * tsize\n\n    function encode(cube:CubieCube) {\n      let c1 = 0, c2 = 0\n      for (let i = 0; i < 8; i++) {\n        switch (cube.cp[i]) {\n            case 4: c1 = i * 3 + cube.co[i]; break;\n            case 5: c2 = i * 3 + cube.co[i]; break;\n        }\n      }\n      const enc_c = c1 * 24 + c2\n      let e1 = 0, e2 = 0\n      for (let i = 0; i < 12; i++) {\n          switch (cube.ep[i]) {\n              case 8 : e1 = i * 2 + cube.eo[i]; break;\n              case 9 : e2 = i * 2 + cube.eo[i]; break;\n          } \n      }\n      const enc_e = e1 * (24) + e2\n      let t1 = 0\n      for (let i = 0; i < 6; i++) {\n         if (cube.tp[i] === Face.L) {\n            t1 = i;\n         }\n      }\n      const enc_t = t1\n      return enc_e * (csize * tsize) + enc_c * tsize + enc_t\n    }\n\n    const moves = [[]]//, Move.parse(\"L R'\"), Move.parse(\"L' R\"), Move.parse(\"L2 R2\")] \n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move) )\n\n    const moveset = htm_rwm_uw\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset,\n        // rev_lookup_depth: 3,\n        name: \"fb\"\n    }\n}\n\nlet fbPrunerConfigGen = (max_depth: number) : PrunerConfig => {\n    const esize = Math.pow(24, 3)\n    const csize = Math.pow(24, 2)\n    const size = esize * csize\n\n    function encode(cube:CubieCube) {\n      let c1 = 0, c2 = 0\n      for (let i = 0; i < 8; i++) {\n        switch (cube.cp[i]) {\n            case 4: c1 = i * 3 + cube.co[i]; break;\n            case 5: c2 = i * 3 + cube.co[i]; break;\n        }\n      }\n      const enc_c = c1 * 24 + c2\n      let e1 = 0, e2 = 0, e3 = 0\n      for (let i = 0; i < 12; i++) {\n          switch (cube.ep[i]) {\n              case 5 : e1 = i * 2 + cube.eo[i]; break;\n              case 8 : e2 = i * 2 + cube.eo[i]; break;\n              case 9 : e3 = i * 2 + cube.eo[i]; break;\n          } \n      }\n      const enc_e = e1 * (24 * 24) + e2 * (24) + e3\n      return enc_e * (24 * 24) + enc_c\n    }\n\n    const moves = [[]]//, Move.parse(\"L R'\"), Move.parse(\"L' R\"), Move.parse(\"L2 R2\")] \n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move) )\n\n    const moveset = htm_rwm\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset,\n        // rev_lookup_depth: 3,\n        name: \"fb\"\n    }\n}\n\nlet fbAtBLPrunerConfig = fbAtBLPrunerConfigGen(5)\nlet fbAtDLPrunerConfig = fbAtDLPrunerConfigGen(5)\nlet fbPrunerConfig = fbPrunerConfigGen(5)\nlet ssPrunerConfig = (is_front: boolean) => {\n    const size = Math.pow(24, 3)\n    const c1 = is_front ? 7 : 6;\n    const e1 = is_front ? 11 : 10\n    const e2 = 7\n    function encode(cube:CubieCube) {\n      let v = [0 ,0, 0]\n      for (let i = 0; i < 8; i++) {\n        if ( cube.cp[i] === c1) v[0] = i * 3 + cube.co[i]\n      }\n      for (let i = 0; i < 12; i++) {\n          if (cube.ep[i] === e1) v[1] = i * 2 + cube.eo[i];\n          else if (cube.ep[i] === e2) v[2] = i * 2 + cube.eo[i]\n      }\n      return v[0] + v[1] * 24 + v[2] * 24 * 24\n    }\n\n    const moves = [[]] \n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move))\n    const max_depth = 8\n    const moveset = rrwmu\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset,\n        name: \"ss\" + (is_front ? \"-front\" : \"-back\")\n    }\n}\n\nlet ssDpPrunerConfig = (is_front: boolean) => {\n    const size = Math.pow(24, 2)\n    const c1 = is_front ? 7 : 6;\n    const e1 = 7\n    function encode(cube:CubieCube) {\n      let v0 = 0, v1 = 0\n      for (let i = 0; i < 8; i++) {\n        if ( cube.cp[i] === c1) v0 = i * 3 + cube.co[i]\n      }\n      for (let i = 0; i < 12; i++) {\n          if (cube.ep[i] === e1) v1 = i * 2 + cube.eo[i];\n      }\n      return v0 + v1 * 24\n    }\n\n    const moves = [\"\", \"R\", \"R2\", \"R'\"] \n    const solved_states = moves.map( (move : string) => new CubieCube().apply(move))\n    const max_depth = 8\n    const moveset = rrwmu_m_first\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset,\n        name: \"ssdp\" + (is_front ? \"-front\" : \"-back\")\n    }\n}\n\nlet sbPrunerConfig = function(){\n    const esize = Math.pow(24, 3)\n    const csize = Math.pow(24, 2)\n    const size = esize * csize\n\n    function encode(cube:CubieCube) {\n      let c1 = 0, c2 = 0\n      for (let i = 0; i < 8; i++) {\n        switch (cube.cp[i]) {\n            case 6: c1 = i * 3 + cube.co[i]; break;\n            case 7: c2 = i * 3 + cube.co[i]; break;\n        }\n      }\n      const enc_c = c1 * 24 + c2\n      let e1 = 0, e2 = 0, e3 = 0\n      for (let i = 0; i < 12; i++) {\n          switch (cube.ep[i]) {\n              case 7  : e1 = i * 2 + cube.eo[i]; break;\n              case 10 : e2 = i * 2 + cube.eo[i]; break;\n              case 11 : e3 = i * 2 + cube.eo[i]; break;\n          } \n      }\n      const enc_e = e1 * (24 * 24) + e2 * (24) + e3\n      return enc_e * (24 * 24) + enc_c\n    }\n\n    const moves = [[]]\n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move) )\n\n    const moveset = rrwmu\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth: 6,\n        moveset,\n        // rev_lookup_depth: 3,\n        name: \"sb_rRUM\"\n    }\n}()\n\nlet lpSbPrunerConfigsAuto = (lp_front: boolean) => [\n    prunerFactory({\n        corner: lp_front ? [I,I,I,I,S,I,I,S] : [I,I,I,I,I,S,S,I],\n        edge:   lp_front ? [I,I,I,I,I,I,I,S,S,I,I,S] : [I,I,I,I,I,I,I,S,I,S,S,I],\n        center: [I,I,I,I,I,I],\n        solved_states: [\"id\"],\n        moveset: lp_front ? rrwmu_f : rrwmu_b,\n        max_depth: 5,\n        name: \"FBLP+SSdiag\"\n    }),\n    prunerFactory({ // SB\n        corner: [I,I,I,I,I,I,S,S],\n        edge:   [I,I,I,I,I,I,I,S,I,I,S,S],\n        center: [I,I,I,I,I,I],\n        solved_states: [\"id\"],\n        moveset: lp_front ? rrwmu_f : rrwmu_b,\n        max_depth: 5,\n        name: \"SB with LP\"\n    }),\n];\n\nlet lpSbSbPrunerConfigGen = (lp_front: boolean, max_depth: number) : PrunerConfig => {\n    const esize = Math.pow(24, 3)\n    const csize = Math.pow(24, 2)\n    const size = esize * csize\n    function encode(cube:CubieCube) {\n      let c1 = 0, c2 = 0\n      for (let i = 0; i < 8; i++) {\n        switch (cube.cp[i]) {\n            case 6: c1 = i * 3 + cube.co[i]; break;\n            case 7: c2 = i * 3 + cube.co[i]; break;\n        }\n      }\n      const enc_c = c1 * 24 + c2\n      let e1 = 0, e2 = 0, e3 = 0\n      for (let i = 0; i < 12; i++) {\n          switch (cube.ep[i]) {\n              case 7 : e1 = i * 2 + cube.eo[i]; break;\n              case 10 : e2 = i * 2 + cube.eo[i]; break;\n              case 11 : e3 = i * 2 + cube.eo[i]; break;\n          } \n      }\n      const enc_e = e1 * (24 * 24) + e2 * (24) + e3\n      return enc_e * (24 * 24) + enc_c\n    }\n\n    const moves = [[]]//, Move.parse(\"L R'\"), Move.parse(\"L' R\"), Move.parse(\"L2 R2\")] \n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move) )\n\n    const moveset = (lp_front ? rrwmu_f : rrwmu_b)\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset,\n        name: \"lpsb-sb\" + (lp_front ? \"+front-lp\" : \"+back-lp\")\n    }\n}\n\nlet lpSbDiagPrunerConfigGen = (lp_front: boolean, max_depth: number) : PrunerConfig => {\n    const esize = Math.pow(24, 3)\n    const csize = Math.pow(24, 2)\n    const size = esize * csize\n    function encode_f(cube:CubieCube) {\n      let c1 = 0, c2 = 0\n      for (let i = 0; i < 8; i++) {\n        switch (cube.cp[i]) {\n            case 4: c1 = i * 3 + cube.co[i]; break;\n            case 7: c2 = i * 3 + cube.co[i]; break;\n        }\n      }\n      const enc_c = c1 * 24 + c2\n      let e1 = 0, e2 = 0, e3 = 0\n      for (let i = 0; i < 12; i++) {\n          switch (cube.ep[i]) {\n              case 7 : e1 = i * 2 + cube.eo[i]; break;\n              case 8 : e2 = i * 2 + cube.eo[i]; break;\n              case 11 : e3 = i * 2 + cube.eo[i]; break;\n          } \n      }\n      const enc_e = e1 * (24 * 24) + e2 * (24) + e3\n      return enc_e * (24 * 24) + enc_c\n    }\n    function encode_b(cube:CubieCube) {\n        let c1 = 0, c2 = 0\n        for (let i = 0; i < 8; i++) {\n          switch (cube.cp[i]) {\n              case 5: c1 = i * 3 + cube.co[i]; break;\n              case 6: c2 = i * 3 + cube.co[i]; break;\n          }\n        }\n        const enc_c = c1 * 24 + c2\n        let e1 = 0, e2 = 0, e3 = 0\n        for (let i = 0; i < 12; i++) {\n            switch (cube.ep[i]) {\n                case 7 : e1 = i * 2 + cube.eo[i]; break;\n                case 9 : e2 = i * 2 + cube.eo[i]; break;\n                case 10 : e3 = i * 2 + cube.eo[i]; break;\n            } \n        }\n        const enc_e = e1 * (24 * 24) + e2 * (24) + e3\n        return enc_e * (24 * 24) + enc_c\n      }\n\n    const moves = [[]]//, Move.parse(\"L R'\"), Move.parse(\"L' R\"), Move.parse(\"L2 R2\")] \n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move) )\n\n    const moveset = (lp_front ? rrwmu_f : rrwmu_b)\n\n    return {\n        size,\n        encode: lp_front ? encode_f : encode_b,\n        solved_states,\n        max_depth,\n        moveset,\n        name: \"lpsb-2sq\" + (lp_front ? \"+front-lp\" : \"+back-lp\")\n    }\n}\n\nlet lpSbPrunerConfigs = (lp_front: boolean) => [\n    lpSbSbPrunerConfigGen(lp_front, 5),\n    lpSbDiagPrunerConfigGen(lp_front, 5)\n];\n\nlet fsPrunerConfig = (is_front: boolean) => {\n    const size = Math.pow(24, 3)\n    const c1 = is_front ? 4 : 5;\n    const e1 = is_front ? 8 : 9;\n    const e2 = 5\n    function encode(cube:CubieCube) {\n      let v0 = 0, v1 = 0, v2 = 0\n      for (let i = 0; i < 8; i++) {\n        if ( cube.cp[i] === c1) v0 = i * 3 + cube.co[i]\n      }\n      for (let i = 0; i < 12; i++) {\n          if (cube.ep[i] === e1) v1 = i * 2 + cube.eo[i];\n          else if (cube.ep[i] === e2) v2 = i * 2 + cube.eo[i]\n      }\n      return v0 + v1 * 24 + v2 * 24 * 24\n    }\n\n    const moves = [[]] \n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move))\n\n    const max_depth = 5\n    const moveset = htm_rwm\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset,\n        name: \"fs\" + (is_front ? \"-front\" : \"-back\")\n    }\n}\nlet fsDrPrunerConfig = (is_front: boolean) => {\n    const size = Math.pow(24, 4)\n    const c1 = is_front ? 4 : 5;\n    const e1 = is_front ? 8 : 9;\n    const e2 = 5\n    const e3 = 7\n    function encode(cube:CubieCube) {\n      let v0 = 0, v1 = 0, v2 = 0, v3 = 0\n      for (let i = 0; i < 8; i++) {\n        if ( cube.cp[i] === c1) v0 = i * 3 + cube.co[i]\n      }\n      for (let i = 0; i < 12; i++) {\n        const ep = cube.ep[i]\n        const eo = cube.eo[i]\n        if (ep === e1) v1 = i * 2 + eo;\n        else if (ep === e2) v2 = i * 2 + eo;\n        else if (ep === e3) v3 = i * 2 + eo;\n      }\n      return v0 + v1 * 24 + v2 * (24 * 24) + v3 * (24 * 24 * 24)\n    }\n\n    const moves = [[]] \n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move))\n\n    const max_depth = 5\n    const moveset = htm_rwm\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset,\n        name: \"fs\" + (is_front ? \"-front\" : \"-back\")\n    }\n}\n\n// let fsPrunerConfigAuto = (is_front: boolean) => prunerFactory({\n//         corner: is_front ? [I,I,I,I,S,I,I,I] : [I,I,I,I,I,S,I,I] ,\n//         edge:   is_front ? [I,I,I,I,I,S,I,I,S,I,I,I] : [I,I,I,I,I,S,I,I,I,S,I,I] ,\n//         center: [I,I,I,I,S,I],\n//         solved_states: [\"id\"],\n//         moveset: htm_rwm,\n//         max_depth: 4\n// });\n\nlet fbssPrunerConfigsManual = (is_front: boolean, max_depth?: number) : PrunerConfig[] => {\n    // make a line+ss solver\n    max_depth = max_depth || 5\n    const esize = Math.pow(24, 3) // 3 edges\n    const csize = Math.pow(24, 3) // 3 corners\n    const size = esize * csize\n\n    function encode_front(cube:CubieCube) {\n      let c1 = 0, c2 = 0, c3 = 0\n      for (let i = 0; i < 8; i++) {\n        switch (cube.cp[i]) {\n            case 4 : c1 = i * 3 + cube.co[i]; break\n            case 5 : c2 = i * 3 + cube.co[i]; break\n            case 7 : c3 = i * 3 + cube.co[i]; break\n        }\n      }\n      const enc_c = c1 * (24 * 24) + c2 * 24 + c3\n      let e1 = 0, e2 = 0, e3 = 0\n      for (let i = 0; i < 12; i++) {\n          switch (cube.ep[i]) {\n              case 5 : e1 = i * 2 + cube.eo[i]; break;\n              case 7 : e2 = i * 2 + cube.eo[i]; break;\n              case 11 : e3 = i * 2 + cube.eo[i]; break;\n          } \n      }\n      const enc_e = e1 * (24 * 24) + e2 * 24 + e3\n      return enc_c + csize * enc_e\n    }\n    \n    function encode_back(cube:CubieCube) {\n        let c1 = 0, c2 = 0, c3 = 0\n        for (let i = 0; i < 8; i++) {\n          switch (cube.cp[i]) {\n              case 4 : c1 = i * 3 + cube.co[i]; break\n              case 5 : c2 = i * 3 + cube.co[i]; break\n              case 6 : c3 = i * 3 + cube.co[i]; break\n          }\n        }\n        const enc_c = c1 * (24 * 24) + c2 * 24 + c3\n        let e1 = 0, e2 = 0, e3 = 0\n        for (let i = 0; i < 12; i++) {\n            switch (cube.ep[i]) {\n                case 5 : e1 = i * 2 + cube.eo[i]; break;\n                case 7 : e2 = i * 2 + cube.eo[i]; break;\n                case 10 : e3 = i * 2 + cube.eo[i]; break;\n            } \n        }\n        const enc_e = e1 * (24 * 24) + e2 * 24 + e3\n        return enc_c + csize * enc_e\n    }\n\n    const moves = [[]]//, Move.parse(\"L R'\"), Move.parse(\"L' R\"), Move.parse(\"L2 R2\")] \n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move) )\n\n    //const moveset : Move[] = [\"U\", \"U2\", \"U'\", \"F\", \"F2\", \"F'\", \"R\", \"R2\", \"R'\",\n    //\"r\", \"r2\", \"r'\", \"D\", \"D2\", \"D'\", \"M\", \"M'\", \"M2\", \"B\", \"B'\", \"B2\"].map(s => Move.all[s])\n\n    const moveset = htm_rwm\n    \n    return [\n        fbdrPrunerConfigGen(max_depth),\n        {\n            size,\n            encode: (is_front ? encode_front : encode_back),\n            solved_states,\n            max_depth,\n            moveset,\n            name: \"liness-\" + (is_front ? \"front\" : \"back\")\n        },\n    ]\n}\n\n// let fbssPrunerConfigsAuto = (is_front: boolean) => [\n//     prunerFactory({\n//         corner: is_front ? [I,I,I,I,S,S,I,S]: [I,I,I,I,S,S,S,I],\n//         edge:   [I,I,I,I,I,I,I,I,I,I,I,I],\n//         center: [I,I,I,I,I,I],\n//         solved_states: [\"id\"],\n//         moveset: htm_rwm,\n//         max_depth: 5,\n//         name: \"fbss-corner\"\n//     }),\n//     prunerFactory({\n//         corner: [I,I,I,I,I,I,I,I],\n//         edge:   [I,I,I,I,I,S,I,S,S,S,is_front ? I : S,is_front ? S : I],\n//         center: [I,I,I,I,I,I],\n//         solved_states: [\"id\"],\n//         moveset: htm_rwm,\n//         max_depth: 5,\n//         name: \"fbss-edge\"\n//     }),\n// ]\n\nlet fbssPrunerConfigs = fbssPrunerConfigsManual\n\nlet lsePrunerConfig : PrunerConfig = function() {\n    const size = Math.pow(12, 6) * 4 * 4 / 2 // TODO: optimize this plz\n    const edge_encode = [0, 1, 2, 3, 4, -1, 5, -1, -1, -1, -1, -1];\n    function encode(cube:CubieCube) {\n      let enc = [0, 0, 0, 0, 0, 0]\n      for (let i = 0; i < 12; i++) {\n        let idx = edge_encode[cube.ep[i]];\n        if (idx > 0) {\n            enc[idx] = edge_encode[i] * 2 + cube.eo[i];\n        }\n      }\n      let edge_enc = 0;\n      for (let i = 0; i < 6; i++) {\n        edge_enc = edge_enc * 12 + enc[i];\n      }\n      return edge_enc * 4 * 4 + cube.tp[0] * 4 + cube.cp[0]// center[0] and cp[0] must be (0-3)\n    }\n\n    const moves = [Move.all[\"id\"]]\n    const solved_states = moves.map( m => new CubieCube().apply(m))\n\n    const max_depth = 7\n    const moveset = [\"U\", \"U'\", \"U2\", \"M'\", \"M\", \"M2\"]\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset,\n        name: \"lse\"\n    }\n}()\n\nfunction eolrPrunerConfig(center_flag: number, barbie_mode?: string): PrunerConfig {\n    const size = 6 * 6 * Math.pow(2, 6) * 4 * 2 // TODO: optimize this plz\n\n    const edge_encode = [0, 1, 0, 2, 0, -1, 0, -1, -1, -1, -1, -1];\n    const edge_idx = [0, 1, 2, 3, 4, -1, 5, -1, -1, -1, -1, -1];\n    function encode(cube:CubieCube) {\n      let eo = 0, ep = 0\n      for (let i = 0; i < 12; i++) {\n        let idx = edge_encode[cube.ep[i]];\n        if (idx >= 0) {\n            eo = eo * 2 + cube.eo[i]\n        }\n        if (idx > 0) {\n            ep += Math.pow(6, idx - 1) * edge_idx[i]\n        }\n      }\n      // make no distinction between centers M2 apart\n      return (eo * 36 + ep) * 4 * 2 + ~~(cube.tp[0] / 2) * 4 + cube.cp[0]// center[0] and cp[0] must be (0-3)\n    }\n\n    const moves_ac = cartesianProduct( [\"U'\", \"U\"], [\"M2\"], [\"\", \"U\", \"U'\", \"U2\"] ).map(x => x.join(\" \"))\n    const moves_mc = cartesianProduct( [\"M'\"], [\"U\", \"U'\"], [\"M2\"], [\"\", \"U\", \"U'\", \"U2\"]).map(x => x.join(\" \"))\n    let moves: string[] = []\n    if (center_flag & 0x01) moves = moves.concat(moves_ac)\n    if (center_flag & 0x10) moves = moves.concat(moves_mc)\n\n    const barb_moves_ac = [\"U\", \"U'\"]\n    const barb_moves_mc = [\"M U\", \"M U'\"]\n    let barb_moves: string[] = []\n    if (center_flag & 0x01) barb_moves = barb_moves.concat(barb_moves_ac)\n    if (center_flag & 0x10) barb_moves = barb_moves.concat(barb_moves_mc)\n\n    const pre_moves = barbie_mode === \"barbie\" ? barb_moves :\n        (barbie_mode === \"ab4c\" ? [\"id\"] : moves)\n\n    const solved_states = pre_moves.map( m => new CubieCube().apply(m))\n\n    const max_depth = 20\n    const moveset = [\"U\", \"U'\", \"U2\", \"M'\", \"M\", \"M2\"]\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset,\n        name: \"eolr-\" + center_flag + \"-\" + barbie_mode\n    }\n}\n\nlet eodmPrunerConfig : PrunerConfig = (function(){\n    const size = 6 * 6 * Math.pow(2, 6) * 4 \n\n    const edge_encode = [0, 0, 0, 0, 1, -1, 2, -1, -1, -1, -1, -1];\n    const edge_idx = [0, 1, 2, 3, 4, -1, 5, -1, -1, -1, -1, -1];\n    function encode(cube:CubieCube) {\n      let eo = 0, ep = 0\n      for (let i = 0; i < 12; i++) {\n        let idx = edge_encode[cube.ep[i]];\n        if (idx >= 0) {\n            eo = eo * 2 + cube.eo[i]\n        }\n        if (idx > 0) {\n            ep += Math.pow(6, idx - 1) * edge_idx[i]\n        }\n      }\n      // make no distinction between centers M2 apart\n      return (eo * 36 + ep) * 4 + cube.tp[0]\n    }\n\n    const solved_states = [new CubieCube()]\n    const max_depth = 20\n    const moveset = [\"U\", \"U'\", \"U2\", \"M'\", \"M\", \"M2\"]\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset,\n        name: \"eodm\"\n    }\n})()\n\nexport { fbdrPrunerConfig, fsPrunerConfig, fsDrPrunerConfig, sbPrunerConfig, ssPrunerConfig, ssDpPrunerConfig, \n    fbPrunerConfig, fbAtDLPrunerConfig, fbAtBLPrunerConfig, lsePrunerConfig, eolrPrunerConfig,\n    prunerFactory, fbssPrunerConfigs, lpSbPrunerConfigs, eodmPrunerConfig }","import {initialize, solve as min2phaseSolve, Min2PhaseCube} from \"./min2phase.js\"\nimport { CubieCube } from \"../CubeLib\";\n\nexport {initialize}\n\nfunction toMin2Phase(state: CubieCube): Min2PhaseCube {\n  // Note: this is its own inverse.\n  // const conjugate = {\n  //   EDGE: { permutation: [ 1, 0, 3, 2, 5, 4, 7, 6, 8, 9, 11, 10 ],\n  //           orientation: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ] },\n  //   CORNER: { permutation: [ 0, 3, 2, 1, 4, 5, 6, 7 ],\n  //             orientation: [ 0, 0, 0, 0, 0, 0, 0, 0 ] },\n  //   CENTER: { permutation: [ 0, 1, 2, 3, 4, 5 ],\n  //             orientation: [ 0, 0, 0, 0, 0, 0 ] }\n  // };\n  // const pseudo = Combine(def, Combine(def, conjugate, Invert(def, state)), conjugate);\n\n  return {\n    cp: state.cp,\n    co: state.co,\n    ep: state.ep,\n    eo: state.eo\n  }\n}\n\nexport function solve(state: CubieCube): string {\n  return min2phaseSolve(toMin2Phase(state));\n}\n","import { CubieCube, Move, MoveSeq } from './CubeLib';\nimport { arrayEqual } from './Math';\n\nimport { PrunerT, fbdrPrunerConfig, fbssPrunerConfigs, fsPrunerConfig, fsDrPrunerConfig, sbPrunerConfig, ssPrunerConfig, ssDpPrunerConfig, fbPrunerConfig, lsePrunerConfig, PrunerConfig, eolrPrunerConfig, PrunerDef, lpSbPrunerConfigs, fbAtDLPrunerConfig, fbAtBLPrunerConfig, eodmPrunerConfig } from './Pruner';\n\nimport {initialize as min2phase_init, solve as min2phase_solve} from \"../lib/min2phase/min2phase-wrapper\"\nimport { __DEV__ } from '../settings';\n\nimport { CachedPruner } from './CachedSolver';\n\ntype SolverConfig = {\n    is_solved: (cube : CubieCube) => boolean,\n    moveset: Move[],\n    pruners: PrunerT[],\n    pruneSeenEncodings?: boolean\n}\n\ntype Accumulator = {\n    solutions: MoveSeq[],\n    capacity: number\n}\n\nexport type SolverT = {\n    solve: (cube : CubieCube, l : number, r : number, c : number) => MoveSeq[],\n    is_solved: (cube : CubieCube) => boolean,\n    getPruners: () => PrunerT[]\n}\n\n\nfunction Solver(config: SolverConfig) : SolverT{\n    const MAX_STATE_COUNT = 3000000\n    let { moveset, is_solved, pruners } = config\n    let state_count = 0, prune_count = 0;\n    let accum : Accumulator\n    let max_depth : number\n    let min_depth : number\n\n    enum SState {\n        CONTINUE,\n        STOP\n    };\n\n    function solve_depth(cube: CubieCube, min_depth_: number, max_depth_: number, accum_: Accumulator) {\n        accum = accum_\n        max_depth = max_depth_\n        min_depth = min_depth_\n        state_count = 0\n        prune_count = 0\n        search(cube, 0, [])\n        return accum\n    }\n\n    let nextMoves : {[move: string] : Move[] }= Object.create({})\n    function generateNextMoveTable() {\n        function getAvailableMove(name : string) {\n            switch (name[0]) {\n                case \"U\": return moveset.filter(k => k.name[0] !== \"U\" && k.name[0] !== \"u\");\n                case \"u\": return moveset.filter(k => k.name[0] !== \"u\");\n                case \"D\": return moveset.filter(k => k.name[0] !== \"U\" && k.name[0] !== \"D\");\n                case \"R\": {\n                    let base = moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"r\");\n                    // we want to represent all Rr's as RM's. This demands M&r to always be enabled together.\n                    if (name === \"R\") return base.filter(k => k.name !== \"M'\")\n                    if (name === \"R'\") return base.filter(k => k.name !== \"M\")\n                    if (name === \"R2\") return base.filter(k => k.name !== \"M2\")\n                    return base\n                }\n                case \"L\": return moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"M\" && k.name[0] !== \"L\" && k.name[0] !== \"r\");\n                case \"r\": return moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"M\" && k.name[0] !== \"L\" && k.name[0] !== \"r\");\n                case \"M\": return moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"M\" && k.name[0] !== \"L\" && k.name[0] !== \"r\");\n                // f precede F. f'F represented as S'. S' must be standalone (no F/f/S allowed in its neighbor)\n                case \"F\": return moveset.filter(k => k.name[0] !== \"F\" && k.name[0] !== \"f\" && k.name[0] !== \"S\");\n                case \"f\": {\n                    const base = moveset.filter(k => k.name[0] !== \"S\" && k.name[0] !== \"f\")\n                    if (name === \"f'\") return base.filter(k => k.name !== \"F\")\n                    else if (name === \"f\") return base.filter(k => k.name !== \"F'\")\n                    else if (name === \"f2\") return base.filter(k => k.name !== \"F2\")\n                    else return base\n                }\n                case \"S\": return moveset.filter(k => k.name[0] !== \"F\" && k.name[0] !== \"B\" && k.name[0] !== \"S\" && k.name[0] !== \"f\");\n                case \"B\": return moveset.filter(k => k.name[0] !== \"F\" && k.name[0] !== \"B\");\n\n                case \"E\": return moveset.filter(k => k.name[0] !== \"U\" && k.name[0] !== \"D\" && k.name[0] !== \"E\");\n                default: return moveset\n            }\n        }\n        for (let move of moveset) {\n            nextMoves[move.name] = getAvailableMove(move.name)\n        }\n    }\n    generateNextMoveTable()\n\n    function expand(cube: CubieCube, depth: number, solution: Move[]) : SState{\n        const availableMoves : Move[] = solution.length > 0 ? nextMoves[solution[solution.length - 1].name] : moveset\n        let seen_encodings : Set<BigInt|number> | null = null\n        let prune = config.pruneSeenEncodings\n        if (prune) {\n            seen_encodings = new Set()\n            if (pruners.length === 1)\n                seen_encodings.add(pruners[0].encode(cube))\n            else  {\n                let n = BigInt(pruners[0].encode(cube)) * BigInt(pruners[1].size) + BigInt(pruners[1].encode(cube))\n                seen_encodings.add(n)\n            }\n        }\n        for (let move of availableMoves) {\n            let new_cube = cube.apply_one(move)\n            let enc = (pruners.length === 1) ? pruners[0].encode(new_cube) :\n                BigInt(pruners[0].encode(new_cube)) * BigInt(pruners[1].size) + BigInt(pruners[1].encode(new_cube))\n\n            if (seen_encodings == null || !seen_encodings.has(enc)) {\n                seen_encodings?.add(enc)\n                solution.push(move)\n                let st : SState = search(new_cube, depth + 1, solution)\n                solution.pop()\n                if (st === SState.STOP) {\n                    return SState.STOP\n                }\n            }\n        }\n        return SState.CONTINUE\n    }\n\n    function try_push(solution: Move[], depth: number) {\n        if (depth < min_depth) return SState.CONTINUE\n        if (accum.solutions.length < accum.capacity) {\n            let flag = true\n            for (let sol of accum.solutions) {\n                if (arrayEqual(sol.moves, solution)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                accum.solutions.push(new MoveSeq([...solution]))\n            }\n        }\n\n        if (accum.solutions.length === accum.capacity) {\n            return SState.STOP\n        } else {\n            return SState.CONTINUE\n        }\n    }\n\n    function search(cube: CubieCube, depth: number, solution: Move[]) : SState {\n        state_count++;\n        if (state_count > MAX_STATE_COUNT) {\n            return SState.STOP\n        }\n        if (is_solved(cube)) {\n            return try_push(solution, depth)\n        } else {\n            if (depth >= max_depth) return SState.CONTINUE;\n            let d = Math.max(...pruners.map(p => p.query(cube)))\n            if (d + depth > max_depth) {\n                prune_count++;\n                return SState.CONTINUE\n            } else {\n                return expand(cube, depth, solution)\n            }\n        }\n    }\n\n    function solve(cube: CubieCube, depth_l: number, depth_r: number, capacity: number) {\n        let accum : Accumulator = {\n            solutions: [],\n            capacity\n        }\n        for (let i = depth_l; i <= depth_r; i++) {\n            accum = solve_depth(cube, depth_l, i, accum)\n            if (accum.solutions.length === accum.capacity || state_count >= MAX_STATE_COUNT) {\n                break;\n            }\n        }\n        if (__DEV__) console.log(`Number of states = ${state_count}, pruned = ${prune_count}`);\n        return accum.solutions\n    }\n\n    function getPruners() {\n        return pruners\n    }\n    return { solve, is_solved, getPruners }\n};\n\nfunction solverFactory(prunerConfig: PrunerConfig) {\n    let pruner = CachedPruner.get(prunerConfig) //Pruner(prunerConfig)\n    pruner.init()\n\n    let is_solved = (cube: CubieCube) => pruner.query(cube) === 0;\n    \n    let config = {\n        is_solved,\n        moveset: prunerConfig.moveset.map(s => Move.all[s]),\n        pruners: [pruner],\n        pruneSeenEncodings: true\n    }\n\n    let solver = Solver(config)\n    return solver\n}\n\nexport function solverFactory2(prunerConfigs: PrunerConfig[]) {\n    let pruners = prunerConfigs.map(pc => {\n        return CachedPruner.get(pc)\n    })\n    pruners.forEach(p => p.init())\n    //let solvedEncodings = prunerConfig.solved_states.map(s => prunerConfig.encode(s))\n    let is_solved = (cube: CubieCube) => pruners.every(p => p.query(cube) === 0)\n\n    let config : SolverConfig = {\n        is_solved,\n        moveset: prunerConfigs[0].moveset.map(s => Move.all[s]),\n        pruners,\n        pruneSeenEncodings: true\n    }\n    let solver = Solver(config)\n    return solver\n}\n\n\nlet FbSolver = () => solverFactory(fbPrunerConfig)\n\nlet FbSolverAtDL = () => solverFactory(fbAtDLPrunerConfig)\n\nlet FbSolverAtBL = () => solverFactory(fbAtBLPrunerConfig)\n\nlet FbdrSolver = () => solverFactory(fbdrPrunerConfig)\n\nlet SsSolver = (is_front: boolean) => solverFactory(ssPrunerConfig(is_front))\n\nlet SsDpSolver = (is_front: boolean) => solverFactory(ssDpPrunerConfig(is_front))\n\n// hand-crafted encoders are much faster though...\nlet FbssSolver =  (is_front: boolean) => solverFactory2(fbssPrunerConfigs(is_front))\n\nlet LpsbSolver = (is_front: boolean) => solverFactory2(lpSbPrunerConfigs(is_front))\nlet SbSolver = () => solverFactory(sbPrunerConfig)\n\nlet FsSolver = (is_front: boolean) => solverFactory(fsPrunerConfig(is_front))\nlet FsDrSolver = (is_front: boolean) => solverFactory(fsDrPrunerConfig(is_front))\n\nlet LSESolver = () => solverFactory(lsePrunerConfig)\n\nlet EOLRSolver = (center_flag: number, barbie_mode?: string) =>\n    solverFactory(eolrPrunerConfig(center_flag, barbie_mode))\n\nlet EOdMSolver = () => solverFactory(eodmPrunerConfig)\n\nlet Min2PhaseSolver : () => SolverT = function() {\n    // polyfill for min2phase\n\n    min2phase_init();\n    function solve(cube : CubieCube, l : number, r : number, c : number) {\n        console.assert(arrayEqual(cube.tp, new CubieCube().tp), \"Cube center is not solved: \" + cube.tp)\n        const transformed_cube = cube.to_cstimer_cube()\n        console.assert( transformed_cube.is_solveable(), \"Cube must be solveable\")\n        let solution = min2phase_solve(transformed_cube);\n        return [ new MoveSeq(solution).inv() ]\n    }\n    function is_solved(cube: CubieCube) {\n        return true\n    }\n    function getPruners() {\n        return []\n    }\n    return {\n        solve,\n        is_solved,\n        getPruners\n    }\n}\n\n\n\nexport { FbdrSolver, FbSolver, FbSolverAtDL, FbSolverAtBL, SbSolver, FbssSolver, FsSolver, FsDrSolver, SsSolver, SsDpSolver, Min2PhaseSolver, LSESolver, EOLRSolver, LpsbSolver, EOdMSolver }","import { Pruner, PrunerConfig, PrunerT } from './Pruner';\nimport { FbdrSolver, SolverT, FsSolver, FsDrSolver, SsSolver, SsDpSolver, SbSolver, FbSolver, FbSolverAtBL, FbSolverAtDL, FbssSolver, LpsbSolver, Min2PhaseSolver, LSESolver, EOLRSolver, EOdMSolver} from './Solver';\n\nlet all_solvers = [\n\"fbdr\",\"fb\", \"fs-front\", \"fs-back\", \"ss-front\", \"ss-back\", \"min2phase\",\n\"fsdr-front\", \"fsdr-back\",\n\"lse\", \"eolrac\", \"eolrmc\", \"eolr\", \"eolrac-b\", \"eolrmc-b\", \"eolr-b\", \"sb\", \"eodm\" ]\n\nlet CachedPruner = function() {\n    let cache : Map<string, PrunerT> = new Map()\n    function get(pc: PrunerConfig) {\n        let pcs = JSON.stringify(pc)\n        if (!cache.has(pcs)) {\n            let pruner = Pruner(pc)\n            cache.set(pcs, pruner)\n            return pruner\n        } else {\n            return cache.get(pcs) as PrunerT\n        }\n    }\n    return { get }\n}()\n\nlet CachedSolver = function() {\n    let cache : Map<string, SolverT> = new Map()\n    function get(s: string) {\n        if (!cache.has(s)) {\n            switch (s) {\n                case \"fbdr\": cache.set(s, FbdrSolver()); break\n                case \"fb\": cache.set(s, FbSolver()); break\n                case \"fb@dl\": cache.set(s, FbSolverAtDL()); break\n                case \"fb@bl\": cache.set(s, FbSolverAtBL()); break\n                case \"fs-front\": cache.set(s, FsSolver(true)); break\n                case \"fs-back\": cache.set(s, FsSolver(false)); break\n                case \"fsdr-front\": cache.set(s, FsDrSolver(true)); break\n                case \"fsdr-back\": cache.set(s, FsDrSolver(false)); break\n                case \"ss-front\": cache.set(s, SsSolver(true)); break\n                case \"ss-back\": cache.set(s, SsSolver(false)); break\n                case \"ssdp-front\": cache.set(s, SsDpSolver(true)); break\n                case \"ssdp-back\": cache.set(s, SsDpSolver(false)); break\n                case \"fbss-front\": cache.set(s, FbssSolver(true)); break\n                case \"fbss-back\": cache.set(s,FbssSolver(false)); break\n                case \"lpsb-front\": cache.set(s,LpsbSolver(true)); break\n                case \"lpsb-back\": cache.set(s,LpsbSolver(false)); break\n                case \"sb\": cache.set(s, SbSolver()); break\n\n                case \"min2phase\": cache.set(s, Min2PhaseSolver()); break\n                case \"lse\": cache.set(s, LSESolver()); break\n                case \"lse-ab4c\": cache.set(s, EOLRSolver(0x01, \"ab4c\")); break\n                case \"eolrac\": cache.set(s, EOLRSolver(0x01)); break\n                case \"eolrmc\": cache.set(s, EOLRSolver(0x10)); break\n                case \"eolr\": cache.set(s, EOLRSolver(0x11)); break\n                case \"eolrac-b\": cache.set(s, EOLRSolver(0x01, \"barbie\")); break\n                case \"eolrmc-b\": cache.set(s, EOLRSolver(0x10, \"barbie\")); break\n                case \"eolr-b\": cache.set(s, EOLRSolver(0x11, \"barbie\")); break\n                case \"eodm\" : cache.set(s, EOdMSolver()); break\n            }\n        }\n        return cache.get(s) as SolverT\n    }\n    return {get}\n}()\n\nexport {CachedSolver, CachedPruner, all_solvers}","import React from 'react';\nimport makeStyles from '@mui/styles/makeStyles';\n\nimport {\n  Button, IconButton, DialogContent, TextField, DialogContentText\n} from '@mui/material';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport { Table, Paper, TableBody, TableCell, TableHead, TableRow } from '@mui/material';\n\nimport PlaylistPlayIcon from '@mui/icons-material/PlaylistPlay';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport AddIcon from '@mui/icons-material/Add';\nimport { AppState, Action, FavCase } from '../Types';\nimport { all_solvers } from '../lib/CachedSolver';\n\n\nconst useStyles = makeStyles(theme => ({\n  table: {\n    width: '100%',\n    minWidth: 200,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport function warnDialog(props: { confirm: () => void} ) {\n\n}\n\nfunction parseAddString(state: AppState, s : string) : [ FavCase[], boolean] {\n  const res : FavCase[] = []\n\n  const allSolvers = new Set(all_solvers);\n  for (const line of s.split('\\n')) {\n    let cols = line.split(',')\n    if (cols.length !== 2) continue\n    let solver = cols[0].trim().split(\"|\")\n    let setup = cols[1].trim()\n\n    if (solver.every(x => allSolvers.has(x))) {\n      let case_ : FavCase = {\n        mode: state.mode,\n        solver,\n        setup\n      }\n      res.push(case_)\n    }\n  }\n  if (res.length > 0) return [res, true]\n  else return [ [], false]\n}\n\nexport default function FavListView(props: { state: AppState, dispatch: React.Dispatch<Action> }) {\n  const {state, dispatch} = props\n  const classes = useStyles();\n  const favList = state.favList.filter(c => c.mode === state.mode)\n\n  const play = (i: number) => {\n    dispatch({ type: \"favList\", content: [ favList[i] ], action: \"replay\" })\n  }\n  const remove = () => {\n    if (dialogID >= 0 && dialogID < favList.length)\n    dispatch({ type: \"favList\", content: [ favList[dialogID] ], action: \"remove\" })\n  }\n  const [ dialogID, setDialogID ] = React.useState(-1)\n\n  const handleClose = () => setDialogID(-1)\n  const handleRemove = () => { remove(); setDialogID(-1); }\n  const dialogDelete = (<Dialog open={dialogID >= 0} onClose={handleClose} >\n    <DialogTitle id=\"alert-dialog-title\">{\"Delete this alg from favorites?\"}</DialogTitle>\n    <DialogActions>\n      <Button onClick={handleClose} color=\"primary\">\n        No\n    </Button>\n      <Button onClick={handleRemove} color=\"primary\" autoFocus>\n        Yes\n    </Button>\n    </DialogActions>\n  </Dialog>)\n\n  const [ addDialogOpen, setAddDialogOpen ] = React.useState(false)\n  const [ addString, setAddString ] = React.useState(\"\")\n  const handleAdd = () => setAddDialogOpen(true)\n  const handleAddClose = () => setAddDialogOpen(false)\n  const handleAddSuccess = () => {\n    let [res, status] = parseAddString(state, addString)\n    if (status) {\n      dispatch({ type: \"favList\", content: res, action: \"add\" })\n    }\n    handleAddClose()\n  }\n  const handleTextChange = (event: { target: { value: React.SetStateAction<string>; }; }) => {\n    setAddString(event.target.value)\n  }\n  const dialogAdd = <Dialog open={addDialogOpen} onClose={handleAddClose} aria-labelledby=\"form-dialog-title\">\n    <DialogTitle id=\"form-dialog-title\">Add New Cases</DialogTitle>\n    <DialogContent>\n      <DialogContentText>\n        Input your cases here. (one per line) <br></br>\n        Format: [category], [setup algorithm].\n        category := fb | fbdr | ss-front | ss-back\n      </DialogContentText>\n      <TextField\n        autoFocus\n        multiline\n        margin=\"dense\"\n        id=\"name\"\n        fullWidth\n        onChange={handleTextChange}\n        onKeyDown={ (event) => { event.stopPropagation() } }\n      />\n    </DialogContent>\n    <DialogActions>\n      <Button onClick={handleAddClose} color=\"primary\">\n        Cancel\n    </Button>\n      <Button onClick={handleAddSuccess} color=\"primary\">\n        Add All\n    </Button>\n    </DialogActions>\n  </Dialog>\n\n\n  return (\n    <div>\n    {dialogDelete}\n    {dialogAdd}\n    <Paper>\n      <Table className={classes.table} size=\"small\" >\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\"> Scramble </TableCell>\n            <TableCell align=\"center\" rowSpan={1}>\n              <IconButton   onClick={handleAdd} component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                <AddIcon />\n              </IconButton>\n              \n            {/* <IconButton component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                <FileCopyIcon />\n              </IconButton> */}\n             </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {favList.map((value, i) => {\n            //const labelId = `favlist-label-${i}`;\n            return (\n              <TableRow key={i}>\n                {/* <TableCell align=\"center\" >\n                  {/* padding=checkbox <Checkbox></Checkbox> */}\n\n                <TableCell align=\"center\">\n                { value.solver.join(\"|\") + \",\" + value.setup }\n                </TableCell>\n                <TableCell align=\"center\">\n                  <IconButton onFocus={(e: { target: { blur: () => void; }; }) => e.target.blur() } onClick={() => play(i)}\n                  component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                    <PlaylistPlayIcon />\n                  </IconButton>\n\n                  <IconButton onFocus={(e: { target: { blur: () => void; }; }) => e.target.blur() } onClick={() => setDialogID(i)}\n                  component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                    <DeleteOutlineIcon />\n                  </IconButton>\n\n                </TableCell>\n              </TableRow>\n            )\n          })}</TableBody>\n      </Table>\n    </Paper>\n    </div>\n  )\n}","import React from \"react\";\n\nimport makeStyles from '@mui/styles/makeStyles';\nimport Toolbar from '@mui/material/Toolbar';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\n\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport InfoIcon from '@mui/icons-material/Info';\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport Brightness6Icon from '@mui/icons-material/Brightness6';\nimport IconButton from \"@mui/material/IconButton\";\nimport { SelectChangeEvent } from '@mui/material/Select';\nimport { tab_modes } from \"./AppView\";\n\nimport { theme } from '../theme';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nconst useStyles = makeStyles(theme => {\n    let is_bright = theme.palette.primary.main === '#556cd6';\n    return ({\n    page: {\n      backgroundColor: theme.palette.background.default\n    },\n    container: {\n      display: \"flex\"\n    },\n    icon: {\n      minWidth: 0\n    },\n    root: {\n      display: \"flex\"\n    },\n    bar: {\n      backgroundColor: is_bright ? theme.palette.primary.main : '#6e728a', // ,\n      color: theme.palette.background.paper,\n      //borderRadius: \"5px\"\n      display: \"flex\",\n      flexWrap: \"nowrap\",\n      justifyContent: \"space-between\",\n    },\n    select: {\n      backgroundColor: is_bright ? \"#657ce9\" : \"#9095b2\", //9297b3\", //9FA4C2\",\n      color: theme.palette.background.paper,\n      paddingLeft: theme.breakpoints.down('sm') ? 15 : 35,\n      marginRight: theme.breakpoints.down('sm') ? -5 : 5,\n      marginLeft: theme.breakpoints.down('sm') ? 10 : 15,\n      height: 60,\n      fontWeight: 400,\n      fontSize: \"1.0rem\",\n      paddingTop: 4,\n      paddingBottom: 7,\n      //borderBottom: \"1px solid \" + theme.palette.background.default,\n    }\n})})\n\n\nfunction TopBarView(props: { value: number, onChange: (x: number) => void,\n    toggleFav: () => void, toggleBright: () => void, handleInfoOpen: () => void } )\n{\n    let classes = useStyles()\n    let { value, onChange, toggleFav, toggleBright, handleInfoOpen } = props\n    let value_str = tab_modes[value][1] || \"\"\n    let handleChange = (event: SelectChangeEvent<String>) =>  {\n        let tab_idx = tab_modes.findIndex(x => x[1] === (event.target.value as string))\n        onChange(tab_idx)\n        //\n    }\n    const is_sm = useMediaQuery(theme.breakpoints.down('sm'));\n    return (\n        <div>\n            <Box boxShadow={4} >\n            <Toolbar className={classes.bar} >\n            <Typography style={{wordWrap: \"break-word\", fontSize: \"0.9rem\", fontFamily: \"Public Sans\"}} >\n              {is_sm ? \"Roux 🐱\" : \"Roux Trainer\"}\n            </Typography>\n            <Box paddingX={is_sm ? 0: 0.5}/>\n            <Box>\n                <Select\n                     fullWidth\n                     value={value_str}\n                     className={classes.select}\n                     onChange={handleChange}\n                     onFocus={(e) => e.target.blur()}\n                     variant=\"standard\"\n                >\n                    { tab_modes.map( (s, i) => \n                      <MenuItem key={i} value={s[1]} sx={{mx: 1.5}} style={{fontSize: \"1.1rem\", marginBottom: 5}}>\n                        {is_sm ? s[2] : s[1]}\n                      </MenuItem> \n                    )}\n                </Select>\n            </Box>\n            <Box style={{flexGrow: 10}}> </Box>\n            <Box>\n              <IconButton onClick={toggleFav} size={is_sm ? \"small\" : \"large\"}>\n                  <BookmarkIcon />\n              </IconButton>\n              <IconButton onClick={toggleBright} size={is_sm ? \"small\" : \"large\"}>\n                  <Brightness6Icon/>\n              </IconButton>\n              <IconButton onClick={handleInfoOpen} size={is_sm ? \"small\" : \"large\"}>\n                  <InfoIcon />\n              </IconButton>\n            </Box>\n            </Toolbar>\n            </Box>\n        </div>\n    );\n}\n\nexport default TopBarView;","import { CubieCube, MoveSeq } from \"./CubeLib\";\nimport two_gram_meter from './two_gram_v1.json'\nexport abstract class Evaluator {\n    abstract evaluate(moves: MoveSeq) : number;\n    abstract name : string;\n}\nexport class SeqEvaluator extends Evaluator {\n    name = \"sequential\";\n    static moveCost_gen() {\n        let pairs: [string, number][] = [\n            [\"U\", 0.8], [\"U'\", 0.8], [\"U2\", 1.0],\n            [\"R\", 0.8], [\"R'\", 0.8], [\"R2\", 1.2],\n            [\"r\", 1], [\"r'\", 1], [\"r2\", 1.3],\n            [\"L\", 1], [\"L'\", 1], [\"L2\", 1.4],\n            [\"F\", 1.4], [\"F'\", 1.4], [\"F2\", 1.8],\n            [\"f\", 1.4], [\"f'\", 1.4], [\"f2\", 1.8],\n            [\"B\", 1.6], [\"B'\", 1.6], [\"B2\", 2.0],\n            [\"D\", 1.3], [\"D'\", 1.3], [\"D2\", 1.6],\n            [\"M\", 1.5], [\"M'\", 1.2], [\"M2\", 1.6],\n            [\"S\", 3.0], [\"S'\", 1.3], [\"S2\", 2.0],\n            [\"E\", 1.5], [\"E'\", 1.5], [\"E2\", 2.4],\n        ];\n        let costMap = new Map(pairs);\n        return costMap;\n    }\n    static moveCost = SeqEvaluator.moveCost_gen();\n\n    evaluate(moves: MoveSeq) {\n        let sum = 0;\n        for (let m of moves.moves) {\n            const value = (SeqEvaluator.moveCost.get(m.name)) || 1.4;\n            sum += value;\n        }\n        // 090822: solutions should be primarily sorted by HTM to guarantee that an optimal solution can always be returned by the solver\n        return moves.moves.length * 100 + sum;\n    }\n\n}\n\nexport class QTMEvaluator extends Evaluator {\n    name = \"qtm\";\n    evaluate(moves: MoveSeq) {\n        let sum = 0;\n        for (let m of moves.moves) {\n            sum += m.name[1] === \"2\" ? 2 : 1;\n        }\n        return sum * 100 + moves.moves.length;\n    }\n}\n\nexport class RawEvaluator extends Evaluator {\n    name = \"raw\";\n    evaluate(moves: MoveSeq) {\n        return moves.moves.length;\n    }\n}\n\n\nexport class TwoGramEvaluator extends Evaluator {\n    name = \"two-gram\";\n    static meter = two_gram_meter as {[s: string]: string};\n    evaluate(moves_input: MoveSeq) {\n        let score = 0\n        let moves = [\"\", ...moves_input.moves.map(x => x.name), \"\"]\n        for (let i =0; i < moves.length - 1; i++) {\n            let two_gram = moves[i] + moves[i + 1]\n            let curr_score = Number.parseFloat(TwoGramEvaluator.meter[two_gram])\n            if (Number.isNaN(curr_score)) {\n                curr_score = 0.3;\n            }\n            score += curr_score;\n        }\n        return score\n    }\n}\n\n// support right-hand heavy for now only\nenum DPGrip {\n    HOME = 0,\n    R_AWAY,\n    Rp_AWAY,\n    R2_AWAY,\n    DEAD_END\n};\nexport class DPEvaluator extends Evaluator {\n    name = \"dp\";\n    \n    static moveCost_gen() {\n        const HI = 10\n        // TODO: Add combo move + regripk some might be fast\n        let pairs: {[move: string]: number[]} = {\n            // array representing cost of performing move at grip \n            // easiest quarter moves are evaluated at 1 (RUFBDrM'), harder at 1.5 (M), \n               // forced ones at 3\n            // easiest double moves as 1.5, harder ones at 2(M2), forced at 2.5\n            // RH quarter grip in the direction of R at 3\n            // RH quarter grip in the direction of R' at 3\n            // RH quarter grip in the direction of R2 at 4\n            // HI means cost is too high (i.e. regrip is needed)\n\n            // TODO: add \"end state\"\n            \"U\":  [1, 2, HI, HI],\n            \"U'\": [1, 1, 1, 1],\n            \"U2\": [1.5, 1.5, 1.5, 1.5],\n            \"R\":  [1, 1, 1, HI],\n            \"R'\": [1, 1, 1, HI],\n            \"R2\": [1.5, 1.5, 1.5, 1.5],\n            \"F\":  [2.5, HI, 1, HI],\n            \"F'\": [1, 1.5, 1, HI],\n            \"F2\": [HI, 2, 2, HI],\n            \"D\":  [1, 1, 1, HI],\n            \"D'\": [1, 2, 1, HI],\n            \"D2\": [1.5, 1.5, 1.5, HI],\n            \"B\":  [HI, 1, 3, HI],\n            \"B'\": [3, 1.5, 1, HI],\n            \"B2\": [4, 2, 2, HI],\n            \"r\":  [1, 1, 1, HI],\n            \"r'\": [1, 1, 1, HI],\n            \"r2\": [1.5, HI, 1.5, HI],\n            \"M\":  [1, 2, 2, HI],\n            \"M'\": [1, 1.5, 1.5, 2],\n            \"M2\": [1.5, 2, 2, 3],\n        };\n        return pairs\n    }\n    static moveCost = DPEvaluator.moveCost_gen();\n    static moveTransition_gen(): {[key: string]: number[]}{\n        let {R_AWAY, R2_AWAY, HOME, Rp_AWAY, DEAD_END} = DPGrip\n        return {\n            //     HOME  ,  R_AWAY , Rp_AWAY ,  R2_AWAY\n            \"R\":  [R_AWAY,  R2_AWAY, HOME    , DEAD_END],\n            \"R'\": [Rp_AWAY, HOME   , DEAD_END,  R_AWAY ],\n            \"R2\": [R2_AWAY, Rp_AWAY,R_AWAY,  HOME ],\n\n            \"r\":  [R_AWAY,  R2_AWAY, HOME    , DEAD_END],\n            \"r'\": [Rp_AWAY, HOME   , DEAD_END,  R_AWAY ],\n            \"r2\": [R2_AWAY, Rp_AWAY,R_AWAY,  HOME ],\n        }\n    }\n    static moveTransition = DPEvaluator.moveTransition_gen();\n\n    static regripCost_gen() {\n        const HI = 10\n        let pairs: number[][] = [\n            // HOME\n            [0, 2, 2, 3],\n            // R AWAY\n            [1.5, 0, 2, 2],\n            // R' AWAY\n            [1.5, 3, 0, HI],\n            // R2 AWAY\n            [3, 2, HI, 0]\n        ]\n        return pairs\n    }\n    static regripCost = DPEvaluator.regripCost_gen();\n\n    evaluate(moves_input: MoveSeq) {\n        return this.evaluate_with_plan(moves_input).cost\n    }\n    evaluate_with_plan(moves_input: MoveSeq) {\n        // allow \n        const HI = 1e5\n        const allow_any_start = true\n        const len = moves_input.moves.length\n        const DP = Array(len + 1).fill(null).map(() => [HI, HI, HI, HI])\n        const DP_path = Array(len + 1).fill(null).map(() => Array(4).fill(null).map(() => [-1, -1]))\n\n        const regripCost = DPEvaluator.regripCost\n        const moveCost = DPEvaluator.moveCost\n        const moveTransition = DPEvaluator.moveTransition\n        if (allow_any_start) {\n            DP[0] = [0, 0, 0, HI]\n        } else {\n            DP[0] = [0, HI, HI, HI] \n        }\n        for (let i = 0; i < len; i++) {\n            const move = moves_input.moves[i].name\n            for (let prev_grip = 0; prev_grip < 4; prev_grip++) {\n                for (let shifted_grip = 0; shifted_grip < 4; shifted_grip++) {\n                    const cur_scheme = DP[i][prev_grip] + regripCost[prev_grip][shifted_grip] + moveCost[move][shifted_grip]\n                    const cur_grip = moveTransition[move] ? moveTransition[move][shifted_grip] : shifted_grip\n                    if (cur_grip === DPGrip.DEAD_END) continue\n                    if (cur_scheme < DP[i+1][cur_grip]) {\n                        DP[i+1][cur_grip] = cur_scheme\n                        DP_path[i+1][cur_grip] = [prev_grip, shifted_grip]\n                    }\n                }\n            }\n        }\n        // assume not take account cost of readjuting to home grip at the end\n        // Now, find optimal plan\n        let optimal_cost = HI\n        let optimal_ending_grip = -1\n        for (let grip = 0; grip < 4; grip++) {\n            if (DP[len][grip] < optimal_cost) {\n                optimal_cost = DP[len][grip]\n                optimal_ending_grip = grip\n            }\n        }\n        let current_grip = optimal_ending_grip\n        let optimal_plan: [number, number][] = [[current_grip, current_grip]]\n        for (let i = len; i >= 1; i--) {\n            const [previous_grip, previous_shifted_grip] = DP_path[i][current_grip]\n            optimal_plan.push([previous_grip, previous_shifted_grip])\n            current_grip = previous_grip\n        }\n        optimal_plan.reverse()\n\n        let grip_str = [\n            \"HOME\", \"R GRIP\", \"R' GRIP\", \"R2 GRIP\"\n        ]\n        let desc = `start from ${grip_str[optimal_plan[0][0]]}` \n        let current_segment : string[] = []\n        for (let i = 0; i < len; i++) {\n            let [g1, g2] = optimal_plan[i]\n            let move = moves_input.moves[i].name\n            if (g1 === g2) current_segment.push(move)\n            else {\n                desc += `, do ${current_segment.join(\" \")}, regrip to ${grip_str[g2]}`\n                current_segment = [move]\n            }\n        }\n        if (current_segment.length) desc += `, do ${current_segment.join(\" \")}`\n        desc += `, end in ${grip_str[optimal_plan[len][0]]}`\n        return {\n            alg: moves_input.toString(),\n            cost: optimal_cost,\n            //plan: optimal_plan,\n            desc: desc\n        }\n    }\n}\n\n\n\nexport class MovementEvaluator extends Evaluator {\n    name = \"movement\";\n    evaluate(moves_input: MoveSeq) {\n        let cube = new CubieCube()\n        let moves = moves_input.inv().moves\n        //let fb_corners = [4, 5]\n        //let fb_edges = [5, 8, 9]\n        let movement = 0\n        for (let i = 0; i < moves.length - 1; i++) {\n            let cube1 = cube.apply_one(moves[i])\n            let stationary = 0\n            for (let j = 0; j < 8; j++) {\n                if ((cube.cp[j] === 4 || cube.cp[j] === 5) && (cube.cp[j] === cube1.cp[j])) {\n                    stationary++\n                }\n            }\n            for (let j = 0; j < 12; j++) {\n                if ((cube.ep[j] === 5 || cube.ep[j] === 8 || cube.ep[j] === 9) && (cube.ep[j] === cube1.ep[j])) {\n                    stationary++\n                }\n            }\n            if (moves[i].name[1] === \"2\") {\n                movement += 2 * (5 - stationary);\n            } else {\n                movement += 5 - stationary;\n            }\n            cube = cube1\n        }\n        return movement\n    }\n}\n//ames: [\"sequential\", \"two-gram\", \"QTM\", \"default\"],\nexport function getEvaluator(s: string) {\n    switch (s) {\n        case \"Default\": return new SeqEvaluator();\n        case \"two-gram\": return new TwoGramEvaluator();\n        case \"QTM\": return new QTMEvaluator();\n        case \"dp\": return new DPEvaluator();\n        case \"movement\": return new MovementEvaluator();\n        case \"raw\": return new RawEvaluator(); \n        default :\n            return new SeqEvaluator();\n    }\n} \n","\nimport { CubeUtil, CubieCube, Mask, Move, MoveSeq } from './CubeLib';\nimport { CachedSolver } from '../lib/CachedSolver';\nimport { getEvaluator } from '../lib/Evaluator';\n\nexport type AnalyzerState = {\n    scramble: string,\n    post_scramble: string, // the part of solution leading up to the stage under analysis\n    full_solution: SolutionDesc[],\n    stage: string,\n    orientation: string,\n    pre_orientation: string,\n    num_solution: number,\n    show_mode: string //\"foreach\" | \"combined\"\n}\nexport let initialState : AnalyzerState = {\n    scramble: \"\",\n    post_scramble: \"\",\n    full_solution: [],\n    stage: \"fb\",\n    orientation: \"x2y\",\n    pre_orientation: \"\",\n    num_solution: 1,\n    show_mode: \"foreach\"\n}\n\nexport type SolverConfig = {\n    premoves?: string[],\n    num_solution: number,\n    upper_limit: number,\n    lower_limit?: number,\n    evaluator?: string\n  }\n  \nexport type SolutionDesc = {\n    solution: MoveSeq,\n    premove: string,\n    score: number,\n    orientation?: string,\n    stage: string\n}\n  \nfunction is_fb_solved(cube: CubieCube, oris: MoveSeq[]) {\n    for (let ori of oris) {\n        let cube1 = cube.changeBasis(ori).apply(ori.inv())\n        if (CubeUtil.is_solved(cube1, Mask.fb_mask)) return ori  \n    }\n    return null\n}\n\n\n\nexport function analyze_roux_solve(cube: CubieCube, solve: MoveSeq) {\n    //todo: break up half turns to detect cancellation in between stages\n    let oris = get_oris(\"cn\").map(m => new MoveSeq(m))\n    let pres = [\"\", \"x\", \"x'\", \"x2\"].map(m => new MoveSeq(m))\n    const defaultSolution = {\n        solution: [], premove: \"\", orientation: \"\", stage: \"\", score: 0\n    }\n    // figure out which fb gets solved first\n    let stages = [\"fb\", \"ss\", \"sp\", \"cmll\", \"lse\"]\n    let solution : SolutionDesc[] = [];\n    let current_moves : Move[] = []\n    let stage_idx = 0\n    let getMasksForStage = (s: string) => {\n        switch (s) {\n            case \"ss\": return [Mask.ss_front_mask, Mask.ss_back_mask]\n            case \"sp\": return [Mask.sb_mask]\n            case \"cmll\": return [Mask.cmll_mask]\n            case \"lse\": return [Mask.solved_mask]\n            default: return [Mask.solved_mask]\n        }\n    }\n\n    let moves = [ Move.all[\"id\"], ...solve.moves]\n    for (let move of moves) {\n        cube = cube.apply(move)\n        if (move.name !== \"id\") current_moves.push(move)\n\n        if (stage_idx === 0) {\n            let res = is_fb_solved(cube, oris)\n            if (res !== null) {\n                let orientation = res\n                solution.push({ ...defaultSolution,\n                    solution: new MoveSeq(current_moves),\n                    orientation: orientation.moves.join(\"\"),\n                    stage: \"fb\"\n                })\n                stage_idx++\n                current_moves = []\n                cube = cube.changeBasis(orientation).apply(orientation.inv())\n            }\n        }\n        else if (stage_idx !== 3) {\n            let stage = stages[stage_idx]\n            let masks = getMasksForStage(stage)\n            if (masks.some(mask => CubeUtil.is_solved(cube, mask))) {\n                solution.push({ ...defaultSolution, \n                    solution: new MoveSeq(current_moves),\n                    stage\n                })\n                stage_idx++\n                current_moves = []\n            }\n        } else {\n            if (CubeUtil.is_cmll_solved(cube)) {\n                solution.push({ ...defaultSolution, \n                    solution: new MoveSeq(current_moves),\n                    stage: \"cmll\"\n                })\n                stage_idx++\n                current_moves = []\n            }\n        }\n        if (stage_idx >= stages.length) break\n    }\n    if (current_moves.length > 0) {\n        solution.push({ ...defaultSolution, \n            solution: new MoveSeq(current_moves),\n            stage: \"unknown\"\n        })\n    }\n    return solution\n}\n\nfunction solve(solver_str: string, cube: CubieCube, config: SolverConfig) {\n    const solver = CachedSolver.get(solver_str)\n    let { premoves, num_solution, upper_limit } = config\n    let ev = getEvaluator(config.evaluator || \"sequential\")\n    let solver_num_solution = (num_solution < 10) ? 10 : num_solution\n    let solutions = (premoves || [\"\"]).map(pm => \n        solver.solve(cube.apply(pm), 0, upper_limit, solver_num_solution)\n            .map(x => ({premove: pm, solution: x, score: ev.evaluate(x)}))\n    ).flat()\n    return solutions.sort( (x, y) => x.score - y.score).slice(0, num_solution) \n}\n\nconst get_oris = (ori: string, preori?: string) => {\n    let oris : string[] = []\n    if (ori === \"x2y\") {\n        oris = (preori === \"\") ? [\"\", \"y\", \"y'\", \"y2\", \"x2\", \"x2y\", \"x2y'\", \"x2y2\"] :\n        (preori === \"x\") ? [\"x\", \"xy\", \"xy'\", \"xy2\", \"x'\", \"x'y\", \"x'y'\", \"x'y2\"] :\n        [\"z\", \"zy\", \"zy'\", \"zy2\", \"z'\", \"z'y\", \"z'y'\", \"z'y2\"]\n    \n    } else if (ori === \"cn\") {\n        oris = [\"\", \"y\", \"y'\", \"y2\", \"x2\", \"x2y\", \"x2y'\", \"x2y2\",\n                \"x\", \"xy\", \"xy'\", \"xy2\", \"x'\", \"x'y\", \"x'y'\", \"x'y2\",\n                \"z\", \"zy\", \"zy'\", \"zy2\", \"z'\", \"z'y\", \"z'y'\", \"z'y2\"]\n    }\n    return oris\n}\nfunction analyze_fb(state: AnalyzerState, cube: CubieCube): SolutionDesc[] {\n    let config : SolverConfig = {\n        premoves: [\"\", \"x\", \"x'\", \"x2\"],\n        num_solution: state.num_solution,\n        upper_limit: 9\n    }\n    let oris = get_oris(state.orientation, state.pre_orientation)\n\n    let solutions = oris.map(ori => solve(\"fb\", cube.changeBasis(new MoveSeq(ori)), config).map(sol => ({\n    ...sol, orientation: ori, stage: \"fb\"\n    })).sort( (x, y) => x.score - y.score)).flat()\n\n    //TODO: support analysis of FS\n    //let solutions = oris.map(ori => [solve(\"fs-front\", cube.changeBasis(new MoveSeq(ori)), config),\n    //                                 solve(\"fs-back\", cube.changeBasis(new MoveSeq(ori)), config)].flat().map(sol => ({\n    //    ...sol, orientation: ori, stage: \"fb\"\n    //    })).sort( (x, y) => x.score - y.score)).flat()\n    return solutions\n}\n\nfunction analyze_ss(state: AnalyzerState, cube: CubieCube): SolutionDesc[] {\n    let config : SolverConfig = {\n        num_solution: state.num_solution,\n        upper_limit: 15\n    }\n    let solutions = [\"ss-front\", \"ss-back\"].map(name => solve(name, cube, config).map(sol => ({\n        ...sol, stage: name\n    })).sort( (x, y) => x.score - y.score)).flat()\n    return solutions\n}\n\nfunction analyze_sp(state: AnalyzerState, cube: CubieCube): SolutionDesc[] {\n    let config : SolverConfig = {\n        num_solution: state.num_solution,\n        upper_limit: 10\n    }\n    let solutions = solve(\"sb\", cube, config).map(sol => ({\n        ...sol, stage: \"sp\"\n    })).sort( (x, y) => x.score - y.score)\n\n    return solutions\n}\n\nfunction analyze_lse(state: AnalyzerState, cube: CubieCube): SolutionDesc[] {\n    let config : SolverConfig = {\n        num_solution: state.num_solution,\n        upper_limit: 20\n    }\n    let solutions = solve(\"lse\", cube, config).map(sol => ({\n        ...sol, stage: \"lse\"\n    })).sort( (x, y) => x.score - y.score)\n\n    return solutions\n}\n\n\nexport function analyze(state: AnalyzerState) {\n    let cube = new CubieCube().apply(state.scramble).apply(state.post_scramble)\n    if (state.stage === \"fb\") return analyze_fb(state, cube)\n    else {\n        let ori = new MoveSeq((state.full_solution[0]?.orientation) || \"\")\n        cube = cube.changeBasis(ori).apply(ori.inv())\n        if (state.stage === \"ss\") return analyze_ss(state, cube)\n        else if (state.stage === \"sp\") return analyze_sp(state, cube)\n        else if (state.stage === \"lse\") return analyze_lse(state, cube)\n    }\n    return []\n}","import React, { Fragment } from 'react'\n\nimport CubeSim from './CubeSim'\nimport { Button, Typography, useTheme, FormControl } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Divider from '@mui/material/Divider';\n\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\n\nimport { CubeUtil, CubieCube, FaceletCube, Mask, MoveSeq } from '../lib/CubeLib';\n\nimport { AppState, Action} from \"../Types\";\nimport 'typeface-roboto-mono';\nimport { Face } from '../lib/Defs';\n\nimport { SelectChangeEvent } from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\n\nimport { AnalyzerState, SolutionDesc, initialState, analyze_roux_solve } from '../lib/Analyzer';\n\nimport { useAnalyzer } from \"../lib/Hooks\";\n\nimport InputLabel from '@mui/material/InputLabel';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormHelperText from '@mui/material/FormHelperText';\n\nimport Chip from '@mui/material/Chip';\nimport { CachedSolver } from '../lib/CachedSolver';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport EditIcon from '@mui/icons-material/Edit';\n\nimport SearchIcon from '@mui/icons-material/Search';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(2),\n      backgroundColor: theme.palette.background.default, \n      transition: \"all .5s ease-in-out\"\n    },\n    button: {\n      width: \"100%\",\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n      marginBottom: 3,\n      borderRadius: 0\n    },\n    paper2: {\n      paddingLeft: theme.spacing(3),\n      paddingTop: theme.spacing(2),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n      marginBottom: 3,\n      borderRadius: 0\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    infoColumn: {\n      color: theme.palette.background.paper\n    },\n    scrambleColumn: {\n      paddingLeft: theme.spacing(3)\n    },\n    textColumn: {\n      // color: \"black\",\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 138\n      },\n    },\n    setup: {\n      whiteSpace: 'pre-line',\n      fontSize: \"1.4rem\",\n      fontWeight:500,\n      [theme.breakpoints.down('sm')]: {\n      fontSize: \"1.0rem\",\n      fontWeight: 500\n      },\n  },\n    condGap: {\n    },\n    fgap: {\n      flexShrink: 100, flexBasis: \"2.5rem\", minWidth: \"1.5em\",\n      [theme.breakpoints.down('sm')]: {\n        flexBasis: \"1.0rem\", \n        minWidth: \"0.4rem\"\n      }\n    },\n    fixedHeight: {\n      height: 250,\n    },\n    title : {\n        color: theme.palette.text.disabled,\n        fontWeight: 500,\n        borderBottom: \"3px solid\",\n    },\n    title1 : {\n      fontWeight: 500,\n      marginTop: 7,         \n      border: \"1px solid\",\n      borderRadius: 4,\n      fontSize: \"0.8rem\"\n   },\n    stage: {\n      paddingTop: 5,\n      paddingLeft: 5,\n    },\n    configItem: {\n      paddingRight: 15\n    },\n    stageText: {\n      color: theme.palette.text.primary,\n      textTransform: \"none\"\n    },\n    sourceIcon : {\n        color: theme.palette.secondary.main,\n        fontSize: 15,\n        padding: 0\n    },\n    sourceIconWrap : {\n        //border: \"1px solid \" + theme.palette.text.disabled,\n        //borderRadius: 3\n    },\n    fab: {\n      position: 'absolute',\n      top: theme.spacing(7),\n      left: theme.spacing(2),\n    },\n    prompt: {\n      color: theme.palette.text.secondary,\n    },\n    formControl: {\n      margin: theme.spacing(0),\n      minWidth: 120,\n    },\n  }))\n\nconst resetState = (state: AnalyzerState) => {\n  return {\n    ...state,\n    postScramble: \"\",\n    full_solution: [],\n    scramble: \"\",\n    stage: \"fb\"\n  }\n}\nfunction ScrambleView(props: { state: AnalyzerState, setState: (newState: AnalyzerState) => void }) {\n    let { state, setState } = props\n    let classes = useStyles()\n    // Add event listeners\n    let [ value, setValue ] = React.useState(state.scramble)\n\n    let onScrambleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setValue(event?.target.value)\n    }\n\n    let handleBegin = () => {\n\n      setState({...resetState(state), scramble: value})\n    }\n    let handleGen = () => {\n      let cube = CubeUtil.get_random_with_mask(Mask.empty_mask)\n      let scramble = CachedSolver.get(\"min2phase\").solve(cube,0,0,0)[0].inv().toString()\n      setState({...resetState(state), scramble})\n      setValue(scramble)\n    }\n\n    return (\n    <Box style={{display: \"flex\"}}>\n    \n      <Box style={{display: \"flex\", alignItems: \"center\", flexGrow: 1}}>\n        <TextField\n          size=\"medium\"\n          fullWidth\n          multiline\n          maxRows={3}\n          label={\"Scramble\"}\n          value={value}\n          onChange={onScrambleChange}\n          variant=\"filled\"\n          inputProps={{\n            sx: {fontSize: \"1.2rem\", fontWeight: 500}\n          }}\n        />\n      </Box>\n      <Box style={{}} className={classes.fgap} />\n      <Button onFocus={(evt) => evt.target.blur() } onClick={handleGen}\n            size=\"medium\" variant=\"contained\" color=\"primary\" >\n              Gen\n      </Button>\n      <Button onFocus={(evt) => evt.target.blur() } onClick={handleBegin}\n            size=\"medium\" variant=\"contained\" color=\"primary\" >\n              GO\n      </Button>\n    </Box> )\n}\n\nfunction ConfigView(props: { state: AnalyzerState, setState: (newState: AnalyzerState) => void}) {\n  let { state, setState } = props\n  let classes = useStyles()\n  let fb_ori_str = state.orientation + \",\" + state.pre_orientation\n  let handleFBOri = (event: SelectChangeEvent<String>) => {\n    let value: string[]= (event.target.value).split(\",\")\n    setState({...state, orientation: value[0], pre_orientation: value[1]})\n  }\n  let display_mode_str = state.show_mode\n  let handle_display_mode = (event: SelectChangeEvent<String>) =>  {\n    let value = (event.target.value as string)\n    setState({...state, show_mode: value})\n  }\n  let handle_num_solution = (event: SelectChangeEvent<number>) =>  {\n    let value = Number.parseInt(event.target.value as string)\n    setState({...state, num_solution: value || state.num_solution})\n  }\n  return (\n  <Box display=\"flex\">\n    <Box className={classes.configItem}>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-helper-label\">FB Orientation</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-helper-label\"\n          id=\"demo-simple-select-helper\"\n          value={fb_ori_str}\n          onChange={handleFBOri}\n        >\n          <MenuItem value={\"x2y,\"}>x2y on White/Yellow</MenuItem>\n          <MenuItem value={\"x2y,x\"}>x2y on Blue/Green</MenuItem>\n          <MenuItem value={\"x2y,z\"}>x2y on Red/Orange</MenuItem>\n          <MenuItem value={\"cn,\"}>Color Neutral</MenuItem>\n        </Select>\n        <FormHelperText></FormHelperText>\n      </FormControl>\n    </Box>\n    <Box className={classes.configItem}>\n      <FormControl className={classes.formControl}>\n      <InputLabel id=\"demo-simple-select-helper-label\">Display Mode</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-helper-label\"\n        id=\"demo-simple-select-helper\"\n        value={display_mode_str}\n        onChange={handle_display_mode}\n      >\n        <MenuItem value={\"foreach\"}>Per orientation</MenuItem>\n        <MenuItem value={\"combined\"}>Combined </MenuItem>\n      </Select>\n      <FormHelperText></FormHelperText>\n     </FormControl>\n    </Box>\n    <Box  className={classes.configItem}>\n    <FormControl className={classes.formControl}>\n      <InputLabel id=\"demo-simple-select-helper-label\"># Solutions</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-helper-label\"\n        id=\"demo-simple-select-helper\"\n        value={state.num_solution}\n        onChange={handle_num_solution}\n      >\n        <MenuItem value={1}>1</MenuItem>\n        <MenuItem value={3}>3 </MenuItem>\n        <MenuItem value={5}>5</MenuItem>\n        <MenuItem value={10}>10 </MenuItem>\n        <MenuItem value={25}>25 </MenuItem>\n      </Select>\n      <FormHelperText></FormHelperText>\n    </FormControl>\n    </Box>\n\n  </Box>)\n}\n\n\nfunction SolutionInputView(props: { state: AnalyzerState, setState: (newState: AnalyzerState) => void}) {\n  let [editing, setEditing] = React.useState(false)\n  let [value, setValue] = React.useState(\"\")\n  let textField = React.useRef<HTMLInputElement | null>(null)\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setValue(event.target.value)\n      event.stopPropagation()\n  }\n  const toggleEdit = () => {\n      setEditing(true)\n  }\n  const handleClose = () => {\n    setEditing(false)\n    let full_solution = analyze_roux_solve(new CubieCube().apply(props.state.scramble), new MoveSeq(value))\n    if ( (full_solution.length > 1) || (full_solution.length === 1 && full_solution[0].solution.moves.length > 0)) {\n      props.setState({...props.state, full_solution})\n    }\n  }\n  //const onEntered = () => {\n  //    textField.current && textField.current.focus()\n  //}\n  return <Box>\n    <Box >\n          <Button variant={editing ? \"contained\" : \"outlined\"}\n              color=\"primary\"\n              size=\"small\"\n              onClick={toggleEdit}\n              \n              startIcon={<EditIcon />}\n          >\n              {\"Input Your Solution\"}\n          </Button>\n    </Box>\n\n    <Dialog open={editing} \n            onClose={handleClose}  \n            /*onEntered={onEntered}*/\n            maxWidth=\"sm\"\n            fullWidth\n            >\n          <DialogTitle> Input your reconstructed solution </DialogTitle>\n          <DialogContent>\n                <TextField\n                    inputRef={textField}\n                    multiline\n                    size=\"medium\"\n                    fullWidth\n                    maxRows={10}\n                    rows={5}\n                    value={value}\n                    onChange={onChange}\n                    variant=\"outlined\">\n                </TextField>\n          </DialogContent>\n          <DialogActions>\n              <Box padding={1}>\n              <Button onClick={handleClose} color=\"primary\" variant=\"outlined\" fullWidth >\n                  Confirm\n              </Button>\n              </Box>\n          </DialogActions>\n    </Dialog>\n  </Box>\n}\n\n\nfunction StageSolutionView(props: { solution: SolutionDesc }) {\n  let { solution, stage, premove, orientation } = props.solution\n  let getTags = () => {\n    if (stage === \"fb\") {\n      return [ orientation ]\n    } else if (stage === \"ss-front\" || stage === \"ss-back\"){\n      return [ stage ]\n    } else return []\n  }\n  let tags = getTags()\n  return (\n    <Box style={{display: \"flex\", marginBottom: \"2px\"}}>\n      {tags.filter(x=>x).map( (t, i) => <Chip variant=\"outlined\" size=\"small\" color=\"primary\" label={t} key={i} />) }\n      <Box style={{marginLeft: 5}}>\n        <Typography sx={{fontSize: \"1.1rem\"}}>\n          {premove + \" \" + solution.moves.map(m => m.name).join(\" \")}\n        </Typography>\n      </Box>\n    </Box>\n  )\n}\n\n\nfunction StageSolutionListView(props: { solutions: SolutionDesc[], state: AnalyzerState, setState: (newState: AnalyzerState) => void} ) {\n  let { solutions } = props\n\n  return (\n    <Box lineHeight={1}>\n      { solutions.map( (s, i) => <StageSolutionView solution={s} key={i}/>) }\n    </Box>\n  ) \n}\n\nfunction FullSolutionView(props: { state: AnalyzerState, setState: (newState: AnalyzerState) => void} ) {\n  let { state, setState } = props\n  let classes = useStyles()\n\n  let setStage = (i: number) => () => {\n    setState({...state, \n      stage: state.full_solution[i].stage,\n      post_scramble: state.full_solution.slice(0, i).map(x => x.premove + x.solution.toString()).join(\" \")\n    })\n  }\n  let [show, setShow] = React.useState(-1)\n  let stageView = (sol: SolutionDesc, i: number) => {\n    return (\n      <Box display=\"flex\" key={i} className={classes.stage} \n        onMouseLeave={ () => setShow(-1)} onMouseEnter={() => setShow(i)} onClick={() => setShow(show === i ? -1 : i)}>\n        <Button variant={\"text\"}\n              color=\"primary\"\n              size=\"small\"\n              onClick={setStage(i)}\n              style={{fontSize: \"0.7rem\", marginLeft: 5, border: (show === i) ? \"1px solid\" : \"1px solid rgba(0, 0,0,0)\"\n            }} >\n        <Typography variant=\"subtitle1\" className={classes.stageText}>{sol.solution.toString()} // {sol.stage}\n        </Typography>        \n        <SearchIcon fontSize=\"small\"/>\n        </Button>\n\n      </Box>\n    )\n  }\n  return (\n    <Box paddingBottom={2} lineHeight={1} >\n      <Box>\n        <SolutionInputView state={state} setState={setState}/>\n      </Box>\n      <Box style={{fontFamily: \"Public Sans\"}}>\n        { props.state.full_solution.map( (desc, i) => stageView(desc, i))}\n      </Box>\n    </Box>\n  )\n  \n}\n\nfunction AnalyzerView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n    let { state: appState } = props\n    \n    const theme = useTheme()\n    let [ state, setState ] = React.useState(initialState)\n\n    let classes = useStyles()\n\n    let mask = Mask.solved_mask\n    let cubieCube = new CubieCube().apply(state.scramble).apply(state.post_scramble)\n    let faceletCube = FaceletCube.from_cubie(cubieCube, mask)\n\n    const analyzerData = useAnalyzer(state)\n\n    let solutions_to_display = analyzerData.isRunning ? [] : (analyzerData.solutions || [])\n\n    if (state.show_mode === \"combined\") {\n      solutions_to_display = solutions_to_display.sort( (x, y) => x.score - y.score).slice(0, state.num_solution)\n    } else {\n     /// solutions_to_display = solutions.slice(0, Math.ceil(config.num_solution / oris.length))\n    }\n\n    const gt_md = useMediaQuery(theme.breakpoints.up('md'));\n    const gt_sm = useMediaQuery(theme.breakpoints.up('sm'));\n    const canvas_wh = (gt_md) ? [400, 350] : (gt_sm) ? [400, 350] : [320, 280]\n\n    return (\n    <Box className={classes.container}>\n      <Paper className={classes.paper} elevation={1}>\n        <ScrambleView state={state} setState={setState}/>\n      </Paper>\n\n\n      <Paper className={classes.paper} elevation={2}>\n        <ConfigView state={state} setState={setState}/>\n      </Paper>\n\n      <Paper className={classes.paper2} elevation={1}>\n        <Box display=\"flex\" >\n          {\n            state.full_solution.length >= 1 ? <>\n              <Box style={{display: \"flex\", flexDirection: \"column\", alignSelf: \"flex-start\"}}> \n                <Box className={classes.title} style={{}}>\n                  My Solution\n                </Box> \n              </Box>\n              <Box style={{}} className={classes.fgap} /> \n            </>\n          : null\n          }\n\n          <FullSolutionView state={state} setState={setState}/>\n        </Box>\n\n      </Paper>\n\n      <Paper className={ classes.paper}>\n      <Grid container>\n        <Grid item md={6} sm={12} className={classes.condGap}>\n          <Box style={{display: \"flex\" }}>\n            <Box display=\"flex\" >\n                <Box style={{display: \"flex\", flexDirection: \"column\", alignSelf: \"flex-start\"}}> \n                  <Box className={classes.title} style={{}}>\n                    Solutions\n                  </Box> \n                  <Box>\n                  <Button className={classes.title1} size=\"small\" variant=\"outlined\" color=\"primary\">\n                    { state.stage }\n                  </Button>\n                  </Box>\n                </Box>\n            </Box>\n            <Box style={{}} className={classes.fgap} />\n              <StageSolutionListView solutions={solutions_to_display} state={state} setState={setState}/>\n          </Box>\n        </Grid>\n        {/* colorScheme=appState.colorScheme.getColorsForOri(appState.cube.ori)} */}\n        <Grid item md={6} xs={12} style={{display: \"flex\", justifyContent: \"center\"}}>\n          <Box style={{backgroundColor: \"rgba(0, 0, 0, 0)\"}}>\n            <CubeSim\n              width={canvas_wh[0]}\n              height={canvas_wh[1]}\n              cube={faceletCube}\n              colorScheme={appState.colorScheme.getColorsForOri(\"WG\")}\n              hintDistance={ 6 }\n              theme={appState.config.theme.getActiveName()}\n\n              facesToReveal={ [Face.L, Face.B, Face.D]  }\n            />\n          </Box>\n        </Grid>\n      </Grid>\n      </Paper>\n\n      <Box height={20}/>\n      <Divider/>\n      <Box height={20}/>\n\n      {/* <ColorPanel {...{state: appState, dispatch: appDispatch}} /> */}\n\n    </Box>\n    );\n}\n\n\nexport default AnalyzerView\n\n\n","import React from 'react'\nimport { AppState, Mode, Action } from \"../Types\";\n\nimport { Box, Typography, Button } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\nimport { Dialog, DialogContent, DialogActions } from '@mui/material';\nimport { Grid, Container } from '@mui/material';\n\nimport CmllTrainerView from './CmllTrainerView';\nimport BlockTrainerView from './BlockTrainerView';\nimport PanoramaView from './PanoramaView';\n\n\nimport FavListView from './FavListView';\nimport TopBarView from './TopBarView';\nimport AnalyzerView from './AnalyzerView';\n\nimport Markdown from 'markdown-to-jsx';\nimport useMediaQuery from '@material-ui/core/useMediaQuery/useMediaQuery';\n\nimport { theme } from '../theme';\n\ninterface TabPanelProps {\n  value: number,\n  index: number,\n  children: any,\n  [key: string]: any\n}\nfunction TabPanel(props: TabPanelProps ) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={0}>{children}</Box>}\n    </Typography>\n  );\n}\nconst useStyles = makeStyles(theme => ({\n  page: {\n    backgroundColor: theme.palette.background.default\n  },\n  container: {\n    display: \"flex\"\n  },\n  icon: {\n    minWidth: 0\n  },\n  root: {\n    display: \"flex\"\n  },\n  bar: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.background.paper,\n    //borderRadius: \"5px\"\n  },\n  select: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.background.paper,\n    borderRadius: 4,\n    border: \"1px solid \" + theme.palette.background.default,\n  }\n}))\n\nexport const tab_modes : [Mode, string, string][] = [\n  [\"fb\", \"First Block (Fixed)\", \"FB (fixed)\"],\n  [\"analyzer\", \"First Block Analyzer (x2y | CN)\", \"FB analyzer (x2y | CN)\"],\n  [\"fs\", \"First Block Square\", \"FB square\"],\n  [\"fsdr\", \"First Block Square + DR edge\", \"FB square + DR\"],\n  [\"fbdr\", \"First Block Last Pair (+ DR edge)\", \"FB last pair (+DR)\"],\n  [\"fbss\", \"First Block Last Pair + Second Square\", \"FB last pair + SS\"],\n  [\"ss\", \"Second Block Square\", \"SB square\"],\n  [\"cmll\", \"CMLL\", \"CMLL\"],\n  [\"4c\", \"LSE 4c\", \"LSE 4c\"],\n  [\"eopair\", \"EOLR / EOLRb\", \"EOLR(b)\"]\n  //[\"tracking\", \"Tracking Trainer (Beta)\", \"Tracking\"]\n]\n\nfunction _getInitialHashLocation() {\n  const default_idx = tab_modes.findIndex(x => x[0] === \"fbdr\")\n  if (window.location.hash) {\n    let idx = tab_modes.findIndex(x => x[0] === window.location.hash.slice(1))\n    if (idx === -1) {\n      window.location.hash = \"\";\n      return default_idx;\n    } else {\n      return idx;\n    }\n  } else {\n    return default_idx\n  }\n}\n\nconst introText = `# Onionhoney's Roux Trainers\n- A trainer collection that caters to all your Roux training needs  ❤️\n- Inspired by http://cubegrass.appspot.com/, but with everything that it is missing.\n\n## Modes supported\n- FB analyzer\n    - Solves for all x2y FBs, and suggests the best FB to start with!\n    - Other orientations supported too (CN, b/g x2y, etc.)\n- FB last slot (+ DR) trainer \n    - \\`HIGHLY USEFUL\\` if you're learning FB or FB + DR. Get a random scramble, think on your own, and check with our solutions!\n    - **Note**: while I try my best, the solver can still miss out on the best overall solution. So please, consult your human fellows when you're unsure, and always be careful with what you choose to learn.\n- FS/FB/SS trainer \n    - You can specify by piece positions. It seems these modes are pretty useful in providing new insights into blockbuilding  (for us dumb humans).\n- CMLL trainer \n    - Truly random scrambles so you can't tell the cases. You can specify different OCLLs. You can even start with a random SB last pair (to simulate how real recognition works)\n- LSE trainers (EOLR, 4c)\n    - Good for reviewing EOLR and practicing your 4c recognition method. You can filter by MC/Non-MC cases too.\n\n## Shortcuts\n- Space for the next scramble.\n- Enter to reset the virtual cube to current scramble. \n- Control your cube with cstimer key mapping.\n\n## Functionalities\n- Scrambles are all random state. Solver is Roux-optimized with M and r moves as first-class citizens, with up to 25 different solutions provided.\n\n- You can control the virtual cube with keyboard (CStimer mapping). You can also drag on the cube to change its perspective.\n\n- You can bookmark your favorite cases and these will be saved in your browser.\n\n- You can input your own scrambles as a list and our trainer will drain them one by one!\n\n- Appearance: dark mode enabled.\n\n---\n\n## Version Log \n- (v1.0.0) All work prior to 12/02/2020, which I forgot to version log for.\n- (v1.0.1) 12/02/2020: Add edge position control for FB Last Pair trainer.\n- (v1.1) 12/15/2020: Reworked UI. App bar now features a dropdown menu for selecting the mode. Scramble occupies its own row. Solutions are shown side by side with the sim cube in large screen.\n- (v1.2) 12/17/2020: Add support for scramble input for all modes. Now you can paste in a list of scrambles, and the trainer will consume them one by one in order.\n- (v1.3) 12/20/2020: Solve Analysis Beta is online! It can do the following:\n    - For any random scramble, it'll recommend the best FB solutions over all orientations (e.g. x2y yellow/white). \n    - Given a solve reconstruction, it'll analyze each stage, and compare your solution there with the solver-suggested solutions.\n- (v1.4) 12/23/2020: Refine the appearance of the virtual cube and enable camera control with mouse dragging. \n- (v1.5) 2/18/2021: Introduced Tracking Trainer Beta.\n\n---\n\nIf you have ideas on how to improve the app just shoot a message and let me know. <3\n`\n\nfunction Intro() {\n  return <Markdown>{introText}</Markdown>\n}\n\n// TODO: Write getter and setter for config items, and also write handlers that map to setters\nfunction AppView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n  //const [locations, setLocations] = React.useState([])\n  let { state, dispatch } = props\n  let classes = useStyles()\n\n  const handleChange = React.useCallback( (newValue:number) => {\n    if (newValue < tab_modes.length) {\n      setValue(newValue)\n      let mode = tab_modes[newValue][0]\n      dispatch({type: \"mode\", content: mode})\n    }\n  }, [dispatch])\n\n  const [ open, setOpen ] = React.useState(false)\n\n  const [value, setValue] = React.useState(_getInitialHashLocation());\n  React.useEffect( () => {\n    dispatch({type: \"mode\", content: tab_modes[_getInitialHashLocation()][0]})\n  }, [dispatch])\n\n  const handleInfoOpen = () => { setOpen(true) }\n  const handleInfoClose = () => { setOpen(false) }\n\n  const toggleBright = () => {\n    const theme_flag = [...state.config.theme.flags]\n    theme_flag[0] = 1 - theme_flag[0]\n    theme_flag[1] = 1 - theme_flag[1]\n    dispatch({ type: \"config\", content: {\n      theme: state.config.theme.setFlags(theme_flag)\n    }})\n  }\n  const toggleFav = () => {\n    setFav(!showFav)\n  }\n\n  const [ showFav, setFav ] = React.useState(false)\n  const createTabPanels = (elements: any[]) => {\n    return <React.Fragment>\n    {\n      elements.map( (el, i) => <TabPanel key={i} value={value} index={i} className={classes.page}>{el}</TabPanel>)\n    }\n    </React.Fragment>\n  }\n  return (\n    <main>\n      <Dialog open={open} onClose={handleInfoClose} >\n      <DialogContent dividers>\n        <Intro></Intro> \n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" onClick={handleInfoClose}>\n          Got it!\n        </Button>\n      </DialogActions>\n      </Dialog>\n\n      <TopBarView onChange={handleChange} value={value}\n        handleInfoOpen={handleInfoOpen} toggleBright={toggleBright} toggleFav={toggleFav}\n      />\n\n      <Box paddingY={2} paddingX={0}>\n      <Container maxWidth={showFav ? \"lg\" : \"md\" }>\n\n      {\n      value === -1?\n      (\n      <Grid container className={classes.container} spacing={3}>\n        <Grid item md={12} sm={12} xs={12}>\n        <TabPanel value={value} index={4} className={classes.page}>\n          <PanoramaView {...{state, dispatch}} />\n        </TabPanel>\n        </Grid>\n      </Grid>\n      )\n      :\n      (\n      <Grid container className={classes.container} spacing={ 3}>\n        <Grid item hidden={!showFav} md={4} sm={4} xs={12} >\n        <FavListView {...{state, dispatch}} />\n        </Grid>\n\n        <Grid item md={showFav ? 8 : 12} sm={showFav ? 8 : 12} xs={12}>\n        {\n          createTabPanels([\n            <BlockTrainerView {...{state, dispatch}} />, // fb\n            <AnalyzerView {...{state, dispatch}} />,\n            <BlockTrainerView {...{state, dispatch}} />, // fs\n            <BlockTrainerView {...{state, dispatch}} />, // fsdr\n            <BlockTrainerView {...{state, dispatch}} />, // fbdr\n            <BlockTrainerView {...{state, dispatch}} />, // fbss\n            <BlockTrainerView {...{state, dispatch}} />, // ss\n            <CmllTrainerView {...{state, dispatch}} />,\n            <BlockTrainerView {...{state, dispatch}} />,\n            <BlockTrainerView {...{state, dispatch}} />,\n            /*<TrackerView {...{state, dispatch}} /> */\n          ])\n        }\n        \n        </Grid>\n      </Grid>\n      )\n      }\n      </Container></Box>\n    </main>\n  )\n}\nexport default AppView","const version = \"2.0\"\n\nexport {version}","export default class Selector {\n    names: string[];\n    flags: number[];\n    kind: string;\n    label?: string;\n    annotation?: string;\n\n    constructor(config: {names: string[], flags: number[], kind: string, label?: string, annotation? : string}) {\n        const { names, flags, kind, label, annotation } = config\n        this.names = names\n        this.flags = flags\n        this.kind = kind\n        this.label = label\n        this.annotation = annotation\n    }\n\n    getActiveNames() {\n        let ans = []\n        for (let i = 0; i < this.flags.length; i++) {\n            if (this.flags[i] === 1) {\n                ans.push(this.names[i])\n            }\n        }\n        return ans\n    }\n\n    getActiveName() {\n        for (let i = 0; i < this.flags.length; i++) {\n            if (this.flags[i] === 1) {\n                return (this.names[i])\n            }\n        }\n        return \"\"\n    }\n\n    setFlags(newFlags: number[]) {\n        const { names, kind, label } = this\n        return new Selector({names, flags: newFlags, kind, label})\n    }\n}","\nimport { FavCase } from \"./Types\"\nimport Selector from './lib/Selector';\nimport { cmll_algs_raw } from './lib/Algs';\nimport { SliderOpt } from \"./Types\";\n\nexport const initialFavList : FavCase[] = []\n\nexport type Config = {\n    showCube: Selector;\n    theme: Selector;\n    evaluator: Selector;\n    moveCountHint: Selector;\n    fbdrLevelSelector: SliderOpt;\n    fbssLevelSelector: SliderOpt;\n    fbLevelSelector: SliderOpt;\n    fsLevelSelector: SliderOpt;\n    ssLevelSelector: SliderOpt;\n    // lse4cLevelSelector: SliderOpt,\n    // eolrLevelSelector: SliderOpt,\n    cmllSelector: Selector;\n    cmllCaseSelector: Selector;\n    cmllAufSelector: Selector;\n    cmllCubeMaskSelector: Selector;\n    nmcllSelector: Selector;\n    triggerSelector: Selector;\n    hyperOriSelector: Selector;\n    orientationSelector: Selector;\n    fbdrSelector: Selector;\n    fsSelector: Selector;\n    fbdrPosSelector1: Selector;\n    fbdrPosSelector2: Selector;\n    fbdrPosSelector3: Selector;\n    fbssLpSelector: Selector;\n    fbssSsSelector: Selector;\n    ssSelector: Selector;\n    ssEOSelector: Selector;\n    ssPosSelector: Selector;\n    fbOnlySelector: Selector;\n    // fbStratSelector: Selector;\n    fbBasisSelector: Selector;\n    fbdrScrambleSelector: Selector;\n    ssPairOnlySelector: Selector;\n    fbPairSolvedSelector: Selector;\n    solutionNumSelector: Selector;\n    fbPieceSolvedSelector: Selector;\n    lseMCSelector: Selector;\n    lseBarSelector: Selector;\n    lseStageSelector: Selector;\n    lseEOSelector: Selector;\n    lseEOLRMCSelector: Selector;\n    lseBarbieSelector: Selector;\n    lseEOLRScrambleSelector: Selector;\n};\n\nconst cmll_alg_names = cmll_algs_raw.map(x => x[0])\n\nexport const EOLRMode = {\n    NONMC_SHORTER_ONLY: \"Only show cases where non-MC is optimal\",\n    MC_SHORTER_ONLY: \"Only show cases where MC is optimal\",\n    COMBINED: \"Combined\",\n    MC_ONLY: \"Only show MC solutions\",\n    NONMC_ONLY: \"Only show non-MC solutions\"\n}\n\nconst fbPieceSolvedAnnotation = `\nExplanation:\nThese modes apply different constraints on your FB state.\n[Hard] means there's no free pair AND no edges attached to the L center.\n[Hard over x2y] means it's hard for all FBs over the x2y orientations. To see solutions, paste them into the FB analyzer.`\n\nconst initialLevels = {\n    fbdrLevelSelector: ({\n        l: 1, r: 7, label: \"fbdr-level\", value: 0, extend_r: true\n    }),\n    fbssLevelSelector: ({\n        l: 3, r: 9, label: \"fbss-level\", value: 2\n    }),\n    fsLevelSelector: ({\n        l: 1, r: 6, label: \"fs-level\", value: 0\n    }),\n    fbLevelSelector: ({\n        l: 3, r: 8, label: \"fb-level\", value: 2, extend_r: true\n    }),\n    ssLevelSelector: ({\n        l: 1, r: 10, label: \"ss-level\", value: 0\n    }),\n    // lse4cLevelSelector: ({\n    //     l: 1, r: 11, label: \"4c-level\", value: 0\n    // }),\n    // eolrLevelSelector: ({\n    //     l: 1, r: 11, label: \"eolr-level\", value: 0\n    // }),\n}\nexport const initialConfig : Config = (() => {\n    let arr_ori_flag = Array(24).fill(0)\n    arr_ori_flag[7] = 1 // YR\n    return {\n        showCube: new Selector({\n            label: \"Virtual Cube\",\n            names:[\"Show\", \"Hide\"],\n            flags: [1,0],\n            kind: \"virtual-cube\"\n        }),\n        theme: new Selector({\n            names: [\"bright\", \"dark\"],\n            flags: [1,0],\n            kind: \"theme\"\n        }),\n        evaluator: new Selector({\n            label: \"Solution Sorting Metrics\",\n            names: [\"Default\", \"QTM\"],\n            flags: [1, 0],\n            kind: \"evaluator\"\n        }),\n        moveCountHint: new Selector({\n            label: \"Show Movecount Hint\",\n            names: [\"Show\", \"Hide\"],\n            flags: [1, 0],\n            kind: \"movecount_hint\"\n        }),\n        cmllSelector: new Selector({\n            names: [\"o\", \"s\", \"as\", \"t\", \"l\", \"u\", \"pi\", \"h\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"cmll\",\n        }),\n        nmcllSelector: new Selector({\n            names: [\"o_1\", \"o_2\", \"s_1\", \"s_2\", \"s_3\", \"as_1\", \"as_2\", \"as_3\", \"t_1\", \"t_2\", \"t_3\", \n                    \"u_1\", \"u_2\", \"u_3\", \"l_1\", \"l_2\", \"l_3\", \"pi_1\", \"pi_2\", \"pi_3\", \"h_1\", \"h_2\", \"h_3\"],\n            flags: Array(23).fill(1),\n            kind: \"nmcll\",\n        }),\n        cmllCaseSelector: new Selector({\n            names: cmll_alg_names,\n            flags: Array(cmll_alg_names.length).fill(1),\n            kind: \"cmll_case\"\n        }),\n        cmllAufSelector: new Selector({\n            names: [\"None\", \"U\", \"U'\", \"U2\"],\n            flags: [1, 1, 1, 1],\n            kind: \"u_auf\"\n        }),\n        //TODO: show L face\n        cmllCubeMaskSelector: new Selector({\n            names: [\"Show\", \"Hide\", \"Hide LSE\"],\n            flags: [1, 0, 0],\n            kind: \"cube_mask\"\n        }),\n        triggerSelector: new Selector({\n            names: [\"RUR'\", \"RU'R'\", \"R'U'R\", \"R'UR\", \"RU2R'\", \"R'U2R\"],\n            flags: [0, 0, 0, 0, 0, 0],\n            kind: \"trigger\"\n        }),\n        hyperOriSelector: new Selector({\n            names: [\"off\", \"L/R\", \"F/B\"],\n            flags: [1 ,0, 0],\n            kind: \"hyperori\"\n        }),\n        orientationSelector: new Selector({\n            label: \"Color Scheme (U-F)\",\n            names: [\n                \"WG\", \"WB\", \"WO\", \"WR\",\n                \"YG\", \"YB\", \"YO\", \"YR\",\n                \"BW\", \"BY\", \"BO\", \"BR\",\n                \"GW\", \"GY\", \"GO\", \"GR\",\n                \"OW\", \"OY\", \"OB\", \"OG\",\n                \"RW\", \"RY\", \"RB\", \"RG\",\n            ],\n            flags: arr_ori_flag,\n            kind: \"orientation\"\n        }),\n        // fbStratSelector: new Selector({\n        //     label: \"Strategy for solving FB\",\n        //     names: [\"Any\", \"Half-Line\", \"Line\", \"DL\"],\n        //     flags: [1, 0, 0, 0],\n        //     kind: \"fb-strat\"\n        // }),\n        fbBasisSelector: new Selector({\n            label: \"Basis (piece considered solved) for FB. Default is L-center solved.\",\n            names: [\"Default\", \"DL\", \"BL\"],\n            flags: [1, 0, 0],\n            kind: \"fb-basis\"\n        }),\n        fbdrSelector: new Selector({\n            label: \"Position of square\",\n            names: [\"FS at back\", \"FS at front\", \"Either\"],\n            flags: [1, 0, 0],\n            kind: \"fbdr\"\n        }),\n        fbdrScrambleSelector: new Selector({\n            label: \"Type of scramble\",\n            names: [\"Short (Concerning FBDR Pieces only)\", \"Random State (Entire cube, useful for practicing F2B)\"],\n            flags: [1, 0],\n            kind: \"fbdr-scramble\"\n        }),\n        fbOnlySelector: new Selector({\n            label: \"Pieces to solve\",\n            names: [\"FB Last Pair + DR\", \"FB Last Pair Only\"],\n            flags: [0, 1],\n            kind: \"fb-only\"\n        }),\n        fbPairSolvedSelector: new Selector({\n            label: \"Last Pair pattern\",\n            names: [\"Random\", \"Solved\"],\n            flags: [1, 0],\n            kind: \"fb-pair-solved\"\n        }),\n        fbdrPosSelector1: new Selector({\n            label: \"Position of FB edge\",\n            names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n                    \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"fbdr-position-1\"\n        }),\n        fbdrPosSelector2: new Selector({\n            label: \"Position of FB edge\",\n            names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n                    \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"fbdr-position-2\"\n        }),\n        fbdrPosSelector3: new Selector({\n            label: \"Position of DR\",\n            names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n                    \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"fbdr-position-3\"\n        }),\n\n        fsSelector: new Selector({\n            label: \"Position of square\",\n            names: [\"Front FS\", \"Back FS\", \"Both\"],\n            flags: [0, 0, 1],\n            kind: \"fs\"\n        }),\n        ssSelector: new Selector({\n            label: \"Square position\",\n            names: [\"Front SS\", \"Back SS\", \"Both\"],\n            flags: [1, 0, 0],\n            kind: \"ss\"\n        }),\n        ssEOSelector: new Selector({\n            label: \"Orientation of DR\",\n            names: [\"Oriented\", \"Misoriented\", \"Either\"],\n            flags: [1, 0, 0],\n            kind: \"ss-orientation\"\n        }),\n        ssPosSelector: new Selector({\n            label: \"Position of DR\",\n            names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n                    \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"ss-position\"\n        }),\n        ssPairOnlySelector: new Selector({\n            label: \"Pieces to solve\",\n            names: [\"SS\", \"DR fixed\"],\n            flags: [1, 0],\n            kind: \"sb-pair-only\"\n        }),\n        solutionNumSelector: new Selector({\n            label: \"Number of solutions\",\n            names: [\"1\", \"3\", \"5\", \"10\", \"25\", \"100\"],\n            flags: [0, 0, 1, 0, 0, 0],\n            kind: \"solution-num\"\n        }),\n        fbPieceSolvedSelector: new Selector({\n            label: \"Difficulty\",\n            names: [\"Random\", \"DL Solved\", \"BL Solved\", \"Hard\", \"Hard over x2y (Scramble only)\"],\n            annotation: fbPieceSolvedAnnotation,\n            flags: [1, 0, 0, 0, 0],\n            kind: \"fb-piece-solved\"\n        }),\n        fbssLpSelector: new Selector({\n            label: \"FBLP Position\",\n            names: [\"Front FBLP\", \"Back FBLP\"],\n            flags: [1, 0],\n            kind: \"fbss-lp\"\n        }),\n        fbssSsSelector: new Selector({\n            label: \"SS Position\",\n            names: [\"Front SS\", \"Back SS\" , \"Both\"],\n            flags: [1, 0, 0],\n            kind: \"fbss-ss\"\n        }),\n        lseMCSelector: new Selector({\n            label: \"Center\",\n            names: [\"Aligned\", \"Misaligned\"],\n            flags: [0, 1],\n            kind: \"lse-mc\"\n        }),\n        lseBarSelector: new Selector({\n            label: \"EO Pair\",\n            names: [\"ULUR\", \"UFUB\"],\n            flags: [1, 0],\n            kind: \"lse-bar\"\n        }),\n        lseStageSelector: new Selector({\n            label: \"Stage\",\n            names: [\"4b for MC(1 move EOPair insert)\", \"M2 to 4c\", \"4c\"],\n            flags: [0, 1, 0],\n            kind: \"lse-stage\"\n        }),\n        lseEOSelector: new Selector({\n            label: \"EO\",\n            names: [\"solved\", \"arrow\", \"4/0\", \"2o/0\", \"2a/0\", \"1/1\", \"6flip\", \"2o/2\", \"0/2\", \"2a/2\"],\n            flags: [0, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"lse-eo\"\n        }),\n        lseEOLRMCSelector: new Selector({\n            label: \"Center strategy\",\n            names: [EOLRMode.NONMC_ONLY, EOLRMode.MC_ONLY, EOLRMode.COMBINED, EOLRMode.NONMC_SHORTER_ONLY, EOLRMode.MC_SHORTER_ONLY ],\n            flags: [0, 0, 1, 0, 0],\n            kind: \"lse-eolrmc\"\n        }),\n        lseBarbieSelector: new Selector({\n            label: \"EOLR / EOLRb\",\n            names: [\"EOLR\", \"EOLRb\", \"EOdM\"],\n            flags: [1, 0, 0],\n            kind: \"lse-barbie\"\n        }),\n        lseEOLRScrambleSelector: new Selector({\n            label: \"Type of scramble\",\n            names: [\"Short\", \"Random State\"],\n            flags: [0, 1],\n            kind: \"lse-eolr-scramble\"\n        }),\n        ...initialLevels\n    }\n})()\n\n","import { FavCase, Mode, SliderOpt } from \"../Types\"\nimport { version } from \"../Version\"\nimport { initialConfig, initialFavList, Config } from \"../Config\"\nimport Selector from '../lib/Selector';\n\nexport type FavCaseStore = {mode: Mode, setup: string, solver: string }\nlet favListManager = function() {\n    const key = \"fav\"\n    let cache : FavCase[] | null = null\n    let getFavList = () => {\n        if (cache) return cache\n        const item = window.localStorage.getItem(key)\n        const item1 : FavCaseStore[] = item ? JSON.parse(item) : initialFavList\n        const item2 : FavCase[] = item1.map( ({mode, setup, solver}) => ({mode, setup, solver: solver.trim().split(\"|\")}) );\n        return item2\n    }\n    let setFavList = (item : FavCase[]) => {\n        const item1 : FavCaseStore[] = item.map(({mode, setup, solver}) => ({mode, setup, solver: solver.join(\"|\")}) );\n        window.localStorage.setItem(key, JSON.stringify(item1));\n        cache = item\n    }\n    return {\n        getFavList,\n        setFavList\n    }\n}()\n\nlet serializeConfig = (config : Config) => {\n    return JSON.stringify(config)\n}\n\nlet deserializeConfig = (s: string) => {\n    const obj = JSON.parse(s)\n    return Object.fromEntries(Object.entries(obj).map( \n        ([k, v]) => {\n            if (\"names\" in (v as any)) { \n                return [k, new Selector(v as Selector)] \n            } else {\n                return [k, v as SliderOpt]\n            }\n        }) )\n}\n\nlet configManager = function() {\n    const key = \"config\"\n    const versionKey = \"version\"\n    let cache : Config | null = null\n\n    let resetConfig = () => {\n        const item = window.localStorage.getItem(key);\n        const item1 : Partial<Config> = item ? deserializeConfig(item) : initialConfig\n        // let's preserve orientation\n        let config = initialConfig\n        if (item1.orientationSelector) {\n            config = {...initialConfig, orientationSelector: new Selector(item1.orientationSelector) }\n        }\n        window.localStorage.setItem(key, serializeConfig(config));\n        window.localStorage.setItem(versionKey, version)\n\n        return config\n    }\n    let getConfig = () => {\n        if (cache) {\n            return cache\n        }\n        const item = window.localStorage.getItem(key);\n        const vers = window.localStorage.getItem(versionKey)\n\n        const item1 : Partial<Config> = item ? deserializeConfig(item) : initialConfig\n\n        if ( vers !== version) {\n            // version out of date\n            // let's preserve orientation and theme\n            let config = initialConfig\n            if (item1.orientationSelector) {\n                config = {...initialConfig, orientationSelector: new Selector(item1.orientationSelector) }\n            }\n            if (item1.theme) {\n                config = {...config, theme: new Selector(item1.theme)}\n            }\n            window.localStorage.setItem(key, serializeConfig(config));\n            window.localStorage.setItem(versionKey, version)\n\n            return config\n        }\n\n        // If current value is uninitialized we'll initialize it\n        if ( (item1 === null) || (item1 === undefined) || Object.keys(item1).length === 0) {\n            window.localStorage.setItem(key, serializeConfig(initialConfig));\n            return initialConfig\n        }\n        // sometimes we want to append new fields without changing the version. this code handles that.\n        if (Object.keys(item1).length < Object.keys(initialConfig).length) {\n            const item2 = {...initialConfig, ...item1}\n            window.localStorage.setItem(key, serializeConfig(item2));\n            return item2\n        }\n        //console.log(\"config = \", item1)\n\n        cache = item1 as Config\n        return cache\n    }\n\n    let setConfig = (partial: Partial<Config>) => {\n        let newConfig : Config = Object.assign(getConfig(), partial)\n        window.localStorage.setItem(key, serializeConfig(newConfig));\n        cache = newConfig\n    }\n\n    return {\n        getConfig,\n        setConfig,\n        resetConfig\n    }\n}()\n\nlet {getConfig, setConfig, resetConfig} = configManager\nlet getFavList = favListManager.getFavList\nlet setFavList = favListManager.setFavList\n\nexport {\n    getConfig, setConfig, resetConfig, getFavList, setFavList\n}\n","import { AppState, FavCase } from \"../Types\";\nimport { Config } from \"../Config\";\n/* State Manager\n * \"Passively\" updates localstorage in reduce.\n * Action types\n *  - move: respond to cube move\n *  - replay: replay case\n *  - reactToConfig: respond to changes in config\n */\nexport abstract class AbstractStateM {\n    state: AppState;\n    constructor(state: AppState) {\n        this.state = state;\n    }\n    /* when new moves arrive (from virtual cube control) */\n    abstract onMove(s: string): AppState;\n    /* when global config changes */\n    abstract onConfig(conf: Config): AppState;\n    /* when user clicks a button or presses a key */\n    abstract onControl(s: string): AppState;\n    /* when user replays an item from the favlist */\n    onReplay(case_: FavCase): AppState {\n        return this.state;\n    }\n}\n\nexport class StateFactory {\n    static create = (state: AppState) => {\n        let filler = ( (()=>1) as unknown ) as (state: AppState) => AbstractStateM;\n        return filler(state);\n    }\n}","import { AppState, FavCase, SliderOpt } from \"../Types\";\nimport { alg_generator_from_group, CaseDesc } from \"../lib/Algs\";\nimport { Face, Typ, FBpairPosBackFS, FBpairPosFrontFS } from \"../lib/Defs\";\nimport { CubieCube, CubeUtil, Mask, FaceletCube, MoveSeq } from '../lib/CubeLib';\nimport { Evaluator, SeqEvaluator, getEvaluator } from \"../lib/Evaluator\";\nimport { CachedSolver } from \"../lib/CachedSolver\";\nimport { rand_choice, arrayEqual } from '../lib/Math';\nimport { AbstractStateM, StateFactory } from \"./AbstractStateM\";\nimport { Config } from \"../Config\";\n\ntype RandomCubeT = {\n    cube: CubieCube,\n    solvers: string[],\n    ssolver: string,\n    failed?: boolean\n}\n\nexport abstract class BlockTrainerStateM extends AbstractStateM {\n    abstract solverL: number;\n    abstract solverR: number;\n    scrambleMargin: number = 2;\n    scrambleCount: number = 3;\n    algDescWithMoveCount: string = \"\";\n    expansionFactor = 5;\n    premoves: string[] = [\"\"];\n    orientations: string[] = [\"\"];\n    evaluator : Evaluator;\n    levelMaxAttempt = 1000;\n    // [case, solver]\n    abstract getRandomAnyLevel(): RandomCubeT\n    getLevelSelector() : SliderOpt | null {\n        return null\n    }\n    checkLevelConstraint(n: number) : boolean {\n        // default to true\n        let slider = this.getLevelSelector()\n        if (!slider) return true;\n        // default to true\n        // either slider at \"ANY\" or depth must match\n        return ( (slider.value === slider.l - 1) || \n                 (slider.value === n) ||\n                 (slider.value === slider.r && slider.value < n && (!!slider.extend_r)) ||\n                 (slider.value === slider.l && slider.value > n && (!!slider.extend_l))\n               );\n    }\n    levelConstraintOkayWithUpperBound(b: number) : boolean {\n        // default to true\n        let slider = this.getLevelSelector()\n        if (!slider) return true;\n        // default to true\n        // either slider at \"ANY\" or depth must match\n        return ( (slider.value === slider.l - 1) || \n                 (slider.value >= b) ||\n                 (slider.value === slider.r && (!!slider.extend_r))\n               );\n    }\n    getRandom() : RandomCubeT {\n        for (let i = 0; i < this.levelMaxAttempt; i++) {\n            let {cube, solvers, ssolver} = this.getRandomAnyLevel()\n            const premoves = this.premoves || [\"\"]\n            let bound = Math.min(...solvers.map(solver => premoves.map(pm => \n                    CachedSolver.get(solver).getPruners()[0].query(cube.apply(pm)) )).flat())\n            //console.log(\"bound estimate = \", bound, this.getLevelSelector()?.value, this.levelConstraintOkayWithUpperBound(bound))\n            if (!this.levelConstraintOkayWithUpperBound(bound)) {\n                continue;\n            }   \n            let level = Math.min(...solvers.map(solver => premoves.map(pm => \n                    CachedSolver.get(solver).solve(cube.apply(pm), 0, this.solverR, 1)[0].moves.length)).flat())\n            if (this.checkLevelConstraint(level)) {\n                //TODO: add debug mode\n                console.debug(`generated random state after ${i+1} tries.`)\n                return {cube, solvers, ssolver}\n            }\n        }\n        console.log(`failed to generate random state after ${this.levelMaxAttempt} tries`)\n        return {...this.getRandomAnyLevel(), failed: true}\n    }\n\n    constructor(state: AppState) {\n        super(state)\n        // Enable below only when we decide to support evaluator selection\n        //let evalName = this.state.config.evaluator.getActiveName()\n        //this.evaluator = getEvaluator(evalName)\n        this.evaluator = new SeqEvaluator()\n    }\n    _solve_with_solvers(cube: CubieCube, solverNames: string[]): CaseDesc[]{\n        const state = this.state;\n        const totalSolutionCap = 0 | (+(state.config.solutionNumSelector.getActiveName() || 5) * this.expansionFactor);\n        const selectedSolutionCap = +(state.config.solutionNumSelector.getActiveName() || 5);\n        let getDesc = (solverName: string) => {\n            const solver = CachedSolver.get(solverName);\n            const premoves = this.premoves || [\"\"]\n            let solutions = premoves.map(pm =>\n                solver\n                .solve(cube.apply(pm), 0, this.solverR, totalSolutionCap)\n                .map(sol => ({pre: pm, sol: sol, score: this.evaluator.evaluate(sol)}) )).flat()\n            solutions.sort((a, b) => a.score - b.score);\n            const toString = (sol: any) =>\n                (sol.pre === \"\" ? \"\" : \"(\" + sol.pre + \") \") +\n                sol.sol.toString(this.algDescWithMoveCount); // + sol.score.toFixed(2);\n            const algs = solutions.slice(0, selectedSolutionCap).map(toString);\n            let algdesc: CaseDesc = {\n                id: `${solverName}`,\n                algs,\n                kind: `${solverName}`\n            }\n            return algdesc\n        }\n        return solverNames.map(getDesc)\n    }\n\n    _solve(cube: CubieCube, solverNames: string[], options?: {\n        updateSolutionOnly?: boolean, scrambleSolver?: string,\n        scramble?: string,\n    }) {\n        const state = this.state;\n        options = options || {}\n        let algDescs = this._solve_with_solvers(cube, solverNames);\n        let setup : string\n        if (options.scramble) {\n            setup = options.scramble\n        } else if (options.updateSolutionOnly) {\n            setup = this.state.case.desc[0]!.setup!\n        } else {\n            const scramble = options.scrambleSolver === \"min2phase\"?\n            CachedSolver.get(\"min2phase\").solve(cube,0,0,0)[0].inv() :\n            (()=>{\n                const solutionLength = new MoveSeq(algDescs[0].algs[0]).remove_setup().moves.length;\n                //console.log(options)\n                //console.log(\"SOLVING CUBE \", cube)\n                let result = rand_choice(\n                    CachedSolver.get(options.scrambleSolver || solverNames[0])\n                    .solve(cube, Math.min(this.solverR, Math.max(this.solverL, solutionLength + this.scrambleMargin)),\n                        this.solverR, this.scrambleCount || 1))?.inv()\n                //if (result === undefined) {\n                //    result = rand_choice(CachedSolver.get(options.scrambleSolver || solverNames[0])\n                //    .solve(cube, 0, this.solverR, this.scrambleCount || 1)).inv()\n                //}\n                return result\n            })()\n            setup = scramble.toString()\n        }\n        if (algDescs.length === 0) {\n            algDescs = [{\n                id: `min2phase`,\n                algs: [],\n                setup,\n                kind: `min2phase`\n            }];\n        } else {\n            // populate setup into setup\n            algDescs.forEach(algDesc => algDesc.setup = setup);\n        }\n\n        const ori = (options.updateSolutionOnly) ? this.state.cube.ori : alg_generator_from_group(state.config.orientationSelector)().id;\n        const name = options.updateSolutionOnly ? this.state.name : \"hiding\";\n        // console.log(\"algdesc\", algdesc)\n        return {\n            ...state,\n            name: name,\n            cube: {\n                ...state.cube,\n                state: cube,\n                ori\n            },\n            case: {\n                state: new CubieCube().apply(setup),\n                desc: algDescs\n            }\n        };\n    }\n    _updateCase(): AppState {\n        let {cube, solvers: solverNames, ssolver: scrambleSolver, failed} = this.getRandom();\n        let inputScramble : string | undefined = undefined\n        if (this.state.scrambleInput.length > 0) {\n            inputScramble = this.state.scrambleInput[0]\n            cube = new CubieCube().apply(inputScramble)\n        }\n        let state = this._solve(cube, solverNames, {\n            updateSolutionOnly: false,\n            scrambleSolver,\n            scramble: inputScramble\n        });\n        if (inputScramble) {\n            state = {...state, \n                scrambleInput: state.scrambleInput.slice(1)\n            }\n        }\n        state = {...state, cube: {...state.cube, levelSuccess: !failed}}\n        return state\n    }\n    _updateCap(): AppState {\n        const state = this.state;\n        if (state.case.desc.length === 0) {\n            return state;\n        }\n        const [cube, solverNames] = [state.cube.state, state.case.desc!.map(x => x.kind)];\n        return this._solve(cube, solverNames, {\n            updateSolutionOnly:true\n        });\n    }\n    onReplay(case_: FavCase): AppState {\n        const cube = new CubieCube().apply(case_.setup)\n        const state1 = this._solve(cube, case_.solver, {scramble: case_.setup});\n        return {\n            ...state1,\n            mode: case_.mode\n        };\n    }\n    onControl(s: string): AppState {\n        let state = this.state;\n        if (s === \"#space\") {\n            if (state.name === \"revealed\") {\n                return this._updateCase();\n            }\n            else {\n                return {\n                    ...state,\n                    name: \"revealed\"\n                };\n            }\n        }\n        else if (s === \"#enter\") {\n            return {\n                ...state,\n                cube: {\n                    ...state.cube,\n                    state: state.case.state,\n                }\n            };\n        }\n        else {\n            return state;\n        }\n    }\n    onMove(movestr: string): AppState {\n        let state = this.state;\n        let move = new MoveSeq(movestr);\n        let cube = state.cube.state.apply(move);\n        return {\n            ...state,\n            cube: {\n                ...state.cube,\n                state: cube\n            }\n        };\n    }\n    onConfig(conf: Config): AppState {\n        // see if solution cap changed\n        let changed = !arrayEqual(this.state.config.solutionNumSelector.flags, conf.solutionNumSelector.flags);\n        if (changed) {\n            return (StateFactory.create({ ...this.state, config: conf }) as BlockTrainerStateM)._updateCap();\n        }\n        else {\n            return this.state;\n        }\n    }\n}\n// const m_premove = [[], Move.all[\"M\"], Move.all[\"M'\"], Move.all[\"M2\"]];\nexport class FbdrStateM extends BlockTrainerStateM {\n    solverL = 8;\n    solverR = 10;\n    _get_pair_solved_front() {\n        let [cp, co, ep, eo] = rand_choice(FBpairPosBackFS);\n        // for solved back-FS, ignore CP=5 and C=(1,0)\n        // for solved front-FS, ignore CP=4 and C=(0,0)\n        //let mask = Mask.copy(Mask.fs_front_mask)\n        let cube = CubeUtil.get_random_with_mask(Mask.fs_back_mask);\n        for (let i = 0; i < 8; i++) {\n            if (cube.cp[i] === 4) {\n                cube.cp[i] = cube.cp[cp];\n                cube.co[i] = cube.co[cp];\n                cube.cp[cp] = 4;\n                cube.co[cp] = co;\n            }\n        }\n        for (let i = 0; i < 12; i++) {\n            if (cube.ep[i] === 8) {\n                cube.ep[i] = cube.ep[ep];\n                cube.eo[i] = cube.eo[ep];\n                cube.ep[ep] = 8;\n                cube.eo[ep] = eo;\n            }\n        }\n        return cube;\n    }\n    _get_pair_solved_back() {\n        let [cp, co, ep, eo] = rand_choice(FBpairPosFrontFS)\n        //let mask = Mask.copy(Mask.fs_front_mask)\n        let cube = CubeUtil.get_random_with_mask(Mask.fs_front_mask);\n        for (let i = 0; i < 8; i++) {\n            if (cube.cp[i] === 5) {\n                cube.cp[i] = cube.cp[cp];\n                cube.co[i] = cube.co[cp];\n                cube.cp[cp] = 5;\n                cube.co[cp] = co;\n            }\n        }\n        for (let i = 0; i < 12; i++) {\n            if (cube.ep[i] === 9) {\n                cube.ep[i] = cube.ep[ep];\n                cube.eo[i] = cube.eo[ep];\n                cube.ep[ep] = 9;\n                cube.eo[ep] = eo;\n            }\n        }\n        //console.log(\"pair for frontFS\", [cp, co, ep, eo])\n        return cube;\n    }\n    _edge_piece_in_pattern(cube: CubieCube, idx: number, pattern: [number, number][]) {\n        let dr_ep = cube.ep.indexOf(idx);\n        let dr_eo = cube.eo[dr_ep];\n        let good = (pattern.find( ([eo, ep]) => (eo === dr_eo) && (ep === dr_ep)))\n        return good\n    }\n    _get_random_fs_back() {\n        let cube = CubeUtil.get_random_with_mask(Mask.fs_back_mask);\n        for (let i = 0; i < 1000; i++) {\n            if (this._edge_piece_in_pattern(cube, 7, this.allowed_dr) &&\n                this._edge_piece_in_pattern(cube, 8, this.allowed_pedge)) break;\n            cube = CubeUtil.get_random_with_mask(Mask.fs_back_mask);\n        }\n        return cube;\n        //return CubieCube.apply(cube, rand_choice(m_premove));\n    }\n    _get_random_fs_front() {\n        let cube = CubeUtil.get_random_with_mask(Mask.fs_front_mask);\n        for (let i = 0; i < 1000; i++) {\n            if (this._edge_piece_in_pattern(cube, 7, this.allowed_dr) &&\n                this._edge_piece_in_pattern(cube, 9, this.allowed_pedge)) break;\n            cube = CubeUtil.get_random_with_mask(Mask.fs_front_mask);\n        }\n        return cube;;\n        //return CubieCube.apply(cube, rand_choice(m_premove));\n    }\n    edgePositionMap : [number, number][] = [\n        [0, 0], [1, 0],\n        [0, 1], [1, 1],\n        [0, 2], [1, 2],\n        [0, 3], [1, 3],\n        [0, 4], [1, 4],\n        [0, 6], [1, 6],\n        [0, 7], [1, 7],\n        [0, 10], [1, 10],\n        [0, 11], [1, 11]\n    ]\n    allowed_pedge : [number, number][] = []\n    allowed_dr : [number, number][] = []\n    getLevelSelector() {return this.state.config.fbdrLevelSelector}\n    getRandomAnyLevel(): RandomCubeT {\n        const fbOnly = this.state.config.fbOnlySelector.getActiveName() === \"FB Last Pair Only\";\n        const pairSolved = this.state.config.fbPairSolvedSelector.getActiveName() !== \"Random\";\n        const scrambleType = this.state.config.fbdrScrambleSelector.getActiveName() || \"Short\";\n        const useMin2PhaseScramble = !scrambleType.startsWith(\"Short\");\n        const solvers = [fbOnly ? \"fb\" : \"fbdr\"];\n        const ssolver = useMin2PhaseScramble ? \"min2phase\" : solvers[0]\n        let active = this.state.config.fbdrSelector.getActiveNames()[0];\n        //console.log(\"active\", active)\n        this.allowed_pedge = this.state.config.fbdrPosSelector1.flags.map( (value, i) => [value, i])\n            .filter( ([value, i]) => value ).map( ([value, i]) => this.edgePositionMap[i] )\n        this.allowed_dr = this.state.config.fbdrPosSelector3.flags.map( (value, i) => [value, i])\n            .filter( ([value, i]) => value ).map( ([value, i]) => this.edgePositionMap[i] )\n\n        this.solverL = (pairSolved) ? (fbOnly ? 5 : 7) : (fbOnly ? 7 : 8)\n        if (pairSolved) {\n\n        }\n        // decide which random scramble generator to use. but prioritize use input if there's any\n        let cube\n        if (active === \"FS at back\") {\n            cube = (pairSolved) ? this._get_pair_solved_front() : this._get_random_fs_back();\n        }\n        else if (active === \"FS at front\") {\n            cube = (pairSolved) ? this._get_pair_solved_back() : this._get_random_fs_front();\n        }\n        else {\n            cube = (pairSolved) ? \n                   rand_choice([ () => this._get_pair_solved_front(), () => this._get_pair_solved_back()])()\n                   : rand_choice([ () => this._get_random_fs_back(), () => this._get_random_fs_front()])();\n        }\n        return {cube, solvers, ssolver};\n    }\n}\nexport class FbStateM extends BlockTrainerStateM {\n    solverL: number = 8;\n    solverR: number = 11;\n    //premoves = [\"\", \"x\", \"x'\", \"x2\"];\n    premoves = [\"\", \"x\", \"x'\", \"x2\"];\n    levelMaxAttempt = 2000;\n\n    // constructor(state: AppState) {\n    //     super(state)\n    //     //this.evaluator = getEvaluator(\"movement\")\n    // }\n    _find_center_connected_edges(cube: CubieCube, is_l_only: boolean) {\n        let centers = is_l_only ? [ Face.L ] : [ Face.F, Face.B, Face.L, Face.R]\n        let edges = CubeUtil.stickers.filter(c => c[2] === Typ.E && centers.includes(c[3])\n            && FaceletCube.color_of_sticker(cube, [c[0], c[1], c[2]]) === c[3]);\n        return edges;\n    }\n    _get_random(): [CubieCube, string] {\n        let active = this.state.config.fbPieceSolvedSelector.getActiveName();\n        let mask;\n        if (active === \"Random\")\n            mask = Mask.empty_mask;\n        else if (active === \"DL Solved\")\n            mask = Mask.dl_solved_mask;\n        else if (active === \"BL Solved\")\n            mask = Mask.bl_solved_mask;\n        //else if (active === \"BL Pair Solved\")\n        //    mask = Mask.bl_pair_solved_mask;\n        else if (active === \"Zhouheng Variant\")\n            mask = Mask.zhouheng_mask;\n        else\n            mask = Mask.empty_mask;\n        let cube = CubeUtil.get_random_with_mask(mask);\n        let basis = this.state.config.fbBasisSelector.getActiveName();\n        cube = (basis === \"Default\") ? cube\n              : (basis === \"DL\") ? CubeUtil.rebase_to_edge(cube, 5)[0]\n              : CubeUtil.rebase_to_edge(cube, 9)[0] // BL\n\n        let solver = (basis === \"Default\") ? \"fb\"\n                     : (basis === \"DL\") ? \"fb@dl\" \n                     : \"fb@bl\";\n\n        if (basis === \"Default\") {\n            this.premoves = [\"\", \"x\", \"x'\", \"x2\"]\n        } else {\n            this.premoves = [\"\"]\n        }\n        // if (active === \"Zhouheng Variant\") {\n        //     // B F'\n        //     cube = cube.apply(\"B F'\");\n        //     solver = \"fbdr\";\n        // }\n        const hard_str = \"Hard\";\n        const g_hard_str = \"Hard over x2y (Scramble only)\"\n        if (active === g_hard_str) {\n            solver = \"min2phase\";\n        }\n        if (active !== hard_str && active !== g_hard_str) {\n            return [cube, solver];\n        }\n        let n = 0;\n        let is_l_only = active === hard_str\n        while (true) {\n            let pairs = CubeUtil.find_pairs(cube);\n            let cc_edges = this._find_center_connected_edges(cube, is_l_only);\n            // n++;\n            if (pairs.length === 0 && cc_edges.length === 0) {\n                //console.log(\"Successful after \" + n + \" tries \");\n                return [cube, solver];\n            }\n            cube = CubeUtil.get_random_with_mask(Mask.empty_mask);\n        }\n    }\n    getLevelSelector() {return this.state.config.fbLevelSelector}\n    getRandomAnyLevel() {\n        let [cube, solver] = this._get_random();\n        return {cube, solvers: solver === \"min2phase\" ? [] : [solver], ssolver: solver};\n    }\n}\n\n\nexport class FsStateM extends BlockTrainerStateM {\n    solverL = 7;\n    solverR = 11;\n    premoves = [\"\", \"x\", \"x'\", \"x2\"];\n    levelMaxAttempt = 2000;\n\n    getLevelSelector() {return this.state.config.fsLevelSelector}\n    getRandomAnyLevel() {\n        let cube = CubeUtil.get_random_with_mask(Mask.empty_mask);\n        let name = this.state.config.fsSelector.getActiveName()\n        if (name === \"Front FS\") {\n            return {cube, solvers: [\"fs-front\"], ssolver: \"fb\"}\n        } else if (name === \"Back FS\") {\n            return {cube, solvers: [\"fs-back\"], ssolver: \"fb\"}\n        } else {\n            return {cube, solvers: [\"fs-front\", \"fs-back\"], ssolver: \"fb\"}\n        }\n    }\n}\n\nexport class FsDrStateM extends BlockTrainerStateM {\n    solverL = 7;\n    solverR = 11;\n    premoves = [\"\", \"x\", \"x'\", \"x2\"];\n    levelMaxAttempt = 1000;\n\n    getLevelSelector() {return this.state.config.fsLevelSelector}\n    getRandomAnyLevel() {\n        let cube = CubeUtil.get_random_with_mask(Mask.empty_mask);\n        let name = this.state.config.fsSelector.getActiveName()\n        if (name === \"Front FS\") {\n            return {cube, solvers: [\"fsdr-front\"], ssolver: \"fbdr\"}\n        } else if (name === \"Back FS\") {\n            return {cube, solvers: [\"fsdr-back\"], ssolver: \"fbdr\"}\n        } else {\n            return {cube, solvers: [\"fsdr-front\", \"fsdr-back\"], ssolver: \"fbdr\"}\n        }\n    }\n}\n\n\nexport class FbssStateM extends BlockTrainerStateM {\n    solverL = 8;\n    solverR = 12;\n    expansionFactor = 5;\n    levelMaxAttempt = 500;\n\n    getLevelSelector() {return this.state.config.fbssLevelSelector}\n    getRandom() {\n        let ls = this.getLevelSelector()\n        this.levelMaxAttempt = (ls.value <= 4) ? 1500 : 500;\n        return super.getRandom()\n    }\n    getRandomAnyLevel() {\n        let lp_option = this.state.config.fbssLpSelector.getActiveName()\n        let ss_option = this.state.config.fbssSsSelector.getActiveName()\n        let cube, solvers, ssolver\n        // [\"Front SS\", \"Back SS\" , \"Both\"]\n        let lp_is_front = (lp_option === \"Front FBLP\")\n        let randomMask = lp_is_front ? Mask.fs_back_mask : Mask.fs_front_mask\n        cube = CubeUtil.get_random_with_mask(randomMask)\n\n        if (ss_option === \"Front SS\") {\n            solvers = [\"fbss-front\"];\n            ssolver = \"fbss-front\"\n        } else if (ss_option === \"Back SS\") {\n            solvers = [\"fbss-back\"];\n            ssolver = \"fbss-back\"\n        } else {\n            solvers = [\"fbss-front\", \"fbss-back\"];\n            ssolver = lp_is_front ? \"lpsb-front\" : \"lpsb-back\" //(\"min2phase\"\n        }\n        return {cube, solvers, ssolver};\n    }\n}","import { CubieCube, CubeUtil, Mask } from '../lib/CubeLib';\nimport { BlockTrainerStateM } from \"./BlockTrainerStateM\";\n\nexport class SsStateM extends BlockTrainerStateM {\n    scrambleMargin = 1;\n    solverL = 8;\n    solverR = 14;\n    levelMaxAttempt = 3000;\n\n    _get_random_fb(allowed_dr_eo_ep: [number, number][]) {\n        let active = this.state.config.ssPairOnlySelector.getActiveName();\n        let mask = (active === \"DR fixed\") ? Mask.fbdr_mask : Mask.fb_mask;\n        let cube: CubieCube;\n        while (true) {\n            cube = CubeUtil.get_random_with_mask(mask);\n            if (active === \"DR fixed\")\n                break;\n            let ep = cube.ep.indexOf(7);\n            let eo = cube.eo[ep];\n            if (allowed_dr_eo_ep.find(([eo_, ep_]) => (eo === eo_) && (ep === ep_))) {\n                break;\n            }\n        }\n        return cube;\n    }\n    getLevelSelector() { return this.state.config.ssLevelSelector; }\n    getRandomAnyLevel() {\n        let active = this.state.config.ssSelector.getActiveNames()[0];\n        const drOPPositionMap: [number, number][] = [\n            [0, 0], [1, 0],\n            [0, 1], [1, 1],\n            [0, 2], [1, 2],\n            [0, 3], [1, 3],\n            [0, 4], [1, 4],\n            [0, 6], [1, 6],\n            [0, 7], [1, 7],\n            [0, 10], [1, 10],\n            [0, 11], [1, 11]\n        ];\n        //[\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n        //\"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n        let allowed_dr_eo_ep_patterns = this.state.config.ssPosSelector.flags.map((value, i) => [value, i])\n            .filter(([value, i]) => value).map(([value, i]) => drOPPositionMap[i]);\n        let cube = this._get_random_fb(allowed_dr_eo_ep_patterns);\n        let solvers, ssolver;\n        let solverMode = this.state.config.ssPairOnlySelector.getActiveName();\n        let pre = solverMode === \"D-Pair only\" ? \"ssdp\" : \"ss\"\n        if (active === \"Front SS\") {\n            ssolver = pre + \"-front\";\n            solvers = [ssolver];\n        }\n        else if (active === \"Back SS\") {\n            ssolver = pre + \"-back\";\n            solvers = [ssolver];\n        }\n        else {\n            solvers = [pre + \"-front\", pre + \"-back\"];\n            ssolver = \"sb\";\n        }\n        return { cube, solvers, ssolver };\n    }\n}\n\nexport class SsDPairStateM extends BlockTrainerStateM {\n    scrambleMargin = 1;\n    solverL = 8;\n    solverR = 14;\n    levelMaxAttempt = 3000;\n\n    _get_random_fb(allowed_dr_eo_ep: [number, number][]) {\n        let active = this.state.config.ssPairOnlySelector.getActiveName();\n        let mask = (active === \"SS\") ? Mask.fb_mask : Mask.fbdr_mask;\n        let cube: CubieCube;\n        while (true) {\n            cube = CubeUtil.get_random_with_mask(mask);\n            if (active !== \"SS\")\n                break;\n            let ep = cube.ep.indexOf(7);\n            let eo = cube.eo[ep];\n            if (allowed_dr_eo_ep.find(([eo_, ep_]) => (eo === eo_) && (ep === ep_))) {\n                break;\n            }\n        }\n        return cube;\n    }\n    getLevelSelector() { return this.state.config.ssLevelSelector; }\n    getRandomAnyLevel() {\n        let active = this.state.config.ssSelector.getActiveNames()[0];\n        const drPositionMap: [number, number][] = [\n            [0, 0], [1, 0],\n            [0, 1], [1, 1],\n            [0, 2], [1, 2],\n            [0, 3], [1, 3],\n            [0, 4], [1, 4],\n            [0, 6], [1, 6],\n            [0, 7], [1, 7],\n            [0, 10], [1, 10],\n            [0, 11], [1, 11]\n        ];\n        let allowed_dr_eo_ep_patterns = this.state.config.ssPosSelector.flags.map((value, i) => [value, i])\n            .filter(([value, i]) => value).map(([value, i]) => drPositionMap[i]);\n        let cube = this._get_random_fb(allowed_dr_eo_ep_patterns);\n        let solvers, ssolver;\n        if (active === \"Front SS\") {\n            solvers = [\"ss-front\"];\n            ssolver = \"ss-front\";\n        }\n        else if (active === \"Back SS\") {\n            solvers = [\"ss-back\"];\n            ssolver = \"ss-back\";\n        }\n        else {\n            solvers = [\"ss-front\", \"ss-back\"];\n            ssolver = \"sb\";\n        }\n        return { cube, solvers, ssolver };\n    }\n}\n\n","\nimport { BlockTrainerStateM } from \"./BlockTrainerStateM\";\nimport { Mask, CubeUtil, CubieCube, Move } from \"../lib/CubeLib\";\nimport { rand_choice } from \"../lib/Math\";\nimport { CachedSolver } from \"../lib/CachedSolver\";\nimport { EOLRMode } from \"../Config\";\n\nexport class LSEStateM extends BlockTrainerStateM {\n    solverL = 5;\n    solverR = 20;\n    scrambleCount = 3;\n    algDescWithMoveCount = \"STM\";\n    getRandomAnyLevel() {\n        /*\n        LSE Modes:\n        pure 4c (UFUB/ULUR, MC/NC)\n        M2 to 4c (same as above)\n        */\n\n        let bars = this.state.config.lseBarSelector.getActiveName()\n\n        let cube = CubeUtil.get_random_with_mask(Mask.lse_4c_mask);\n\n        let move = new Move().from_cube(cube, \"\")\n\n        if (bars === \"UFUB\") {\n            cube = new CubieCube().apply(rand_choice([\"U\", \"U\"])).apply(move)\n        } else {\n            cube = new CubieCube().apply(move)\n        }\n\n        let is_mc = this.state.config.lseMCSelector.getActiveName() === \"Misaligned\";\n        let lse_premove = is_mc ? [Move.all[\"M\"], Move.all[\"M'\"]] : [ [], Move.all[\"M2\"] ]\n        cube = cube.apply(rand_choice(lse_premove))\n\n        let stage = this.state.config.lseStageSelector.getActiveName()\n        let solvers = [\"lse\"]\n        let ssolver = \"lse\"\n        if (stage === \"M2 to 4c\")  {\n            cube = cube.apply(rand_choice([\"U M2\", \"U' M2\"])).apply(rand_choice([\"U\", \"U'\", \"U2\", \"id\"]))\n            return {cube, solvers, ssolver}\n        } else if (stage.startsWith(\"4b for MC\")) {\n            cube = cube.apply(rand_choice([\"U M2\", \"U' M2\"])).apply(rand_choice([\"U\", \"U'\", \"U2\", \"id\"]))\n            cube = cube.apply(rand_choice([\"M\", \"M'\"]))\n            cube = cube.apply(rand_choice([\"U\", \"U'\", \"U2\", \"id\"]))\n            return {cube, solvers, ssolver}\n        } else {\n            return {cube, solvers, ssolver}\n        }\n    }\n}\n\nconst lseEODef = [\n    {kind: \"solved\", eo: [0,0,0,0,0,0]},\n    {kind: \"arrow\", eo: [1,1,0,1,1,0]},\n    {kind: \"arrow\", eo: [0,1,1,1,0,1]},\n    {kind: \"4/0\", eo: [1,1,1,1,0,0]},\n    {kind: \"2o/0\", eo: [1,0,1,0,0,0]},\n    {kind: \"2a/0\", eo: [1,1,0,0,0,0]},\n    {kind: \"1/1\", eo: [1,0,0,0,0,1]},\n    {kind: \"1/1\", eo: [0,0,1,0,1,0]},\n    {kind: \"6flip\", eo: [1,1,1,1,1,1]},\n    {kind: \"2o/2\", eo: [0,1,0,1,1,1]},\n    {kind: \"0/2\", eo: [0,0,0,0,1,1]},\n    {kind: \"2a/2\", eo: [0,1,1,0,1,1]},\n]\nconst lseEODefLookup = function() {\n    let map = Object.assign({});\n    lseEODef.forEach( (def) => {\n        map[def.eo.toString()] = def.kind\n    })\n    return map\n}();\n\nexport class EOLRStateM extends BlockTrainerStateM {\n    solverL = 5;\n    solverR = 20;\n    scrambleCount = 3;\n    algDescWithMoveCount = \"STM\";\n\n    _getEOType(cube: CubieCube) {\n        for (let i = 0; i < 4; i++) {\n            let eo_arr = cube.eo.slice(0, 5)\n            eo_arr.push(cube.eo[6])\n            let eo = (lseEODefLookup[eo_arr.toString()])\n            if (eo) {\n\n                console.log(eo, eo_arr)\n                return eo;\n            }\n            cube = cube.apply(\"U\")\n        }\n        return \"Error\"\n    }\n\n    getRandomAnyLevel() {\n        /*\n        LSE Modes:\n        pure 4c (UFUB/ULUR, MC/NC)\n        M2 to 4c (same as above)\n        */\n\n        let targetEO = rand_choice(this.state.config.lseEOSelector.getActiveNames())\n\n        let cube: CubieCube\n        let count = 0;\n        let eolrMCMode = this.state.config.lseEOLRMCSelector.getActiveName()\n        let compare = eolrMCMode === EOLRMode.NONMC_SHORTER_ONLY || eolrMCMode === EOLRMode.MC_SHORTER_ONLY\n        let useBarbie = this.state.config.lseBarbieSelector.getActiveName() === \"EOLRb\"\n        let eodmMode = this.state.config.lseBarbieSelector.getActiveName() === \"EOdM\"\n        let useFullScramble = this.state.config.lseEOLRScrambleSelector.getActiveName() === \"Random State\"\n\n        while (true) {\n            cube = CubeUtil.get_random_with_mask(Mask.lse_mask);\n            cube = cube.apply(rand_choice([\"id\", \"M2\"]))\n            console.log(\"targetEO\", targetEO)\n\n            if (count++ > 1000) {\n                console.log(\"something wrong\")\n                break\n            }\n\n\n            if (this._getEOType(cube) !== targetEO)\n                continue\n            if (compare) {\n                let acSolver = useBarbie ? \"eolrac-b\" : \"eolrac\"\n                let mcSolver = useBarbie ? \"eolrmc-b\" : \"eolrmc\"\n                let acLength = CachedSolver.get(acSolver).solve(cube, 0, 20, 1)[0].moves.length\n                let mcLength = CachedSolver.get(mcSolver).solve(cube, 0, 20, 1)[0].moves.length\n                if ( eolrMCMode === EOLRMode.NONMC_SHORTER_ONLY && acLength > mcLength ) continue\n                if ( eolrMCMode === EOLRMode.MC_SHORTER_ONLY && mcLength > acLength ) continue\n            }\n            break\n        }\n\n        const ssolver = (useFullScramble || eodmMode) ? \"lse\" : \"lse-ab4c\";\n        let solver : string\n        switch (eolrMCMode) {\n            case EOLRMode.NONMC_ONLY: solver = useBarbie ? \"eolrac-b\" : \"eolrac\"; break;\n            case EOLRMode.MC_ONLY: solver = useBarbie ? \"eolrmc-b\" : \"eolrmc\"; break;\n            case EOLRMode.COMBINED: solver = useBarbie ? \"eolr-b\" : \"eolr\"; break;\n            case EOLRMode.NONMC_SHORTER_ONLY:\n            case EOLRMode.MC_SHORTER_ONLY: solver = useBarbie ? \"eolr-b\" : \"eolr\"; break;\n            default: solver = \"eolr\";\n        }\n\n        // in case of EOdM, override all of above\n        if (eodmMode) {\n            solver = \"eodm\"\n        }\n\n        return {cube, solvers: [solver], ssolver}\n    }\n}\n","import { AppState, StateT  } from \"../Types\";\nimport { Config } from '../Config';\nimport { alg_generator_from_group, alg_generator_from_cases, CaseDesc, createAlg, alg_generator_from_cases_contain} from \"../lib/Algs\";\nimport { CubieCube, Move, CubeUtil, MoveSeq } from '../lib/CubeLib';\nimport { AbstractStateM } from \"./AbstractStateM\";\nimport {initialize as min2phase_init, solve as min2phase_solve} from \"../lib/min2phase/min2phase-wrapper\"\nimport { arrayEqual, rand_choice } from \"../lib/Math\";\n\nexport abstract class CmllStateM extends AbstractStateM {\n    _get2PhaseSolution(cube: CubieCube): CaseDesc {\n        // Aha! f = g(b) but you modified b later, and f won't update!\n\n        let m2_away = false\n        if (cube.tp[0] !== 0) {\n            m2_away = true\n            cube = cube.apply(\"M2\")\n        }\n        console.assert(arrayEqual(cube.tp, new CubieCube().tp))\n\n        const transformed_cube = cube.to_cstimer_cube()\n        console.assert( transformed_cube.is_solveable(), \"Cube must be solveable\")\n        min2phase_init();\n        let solution = min2phase_solve(transformed_cube);\n        if (m2_away) {\n            solution += \" M2\"\n        }\n        const algDesc: CaseDesc = createAlg(\"scramble\", solution, \"scramble\")\n        console.log(solution);\n        return algDesc;\n    }\n    _generateCase(): AppState {\n        let state = this.state;\n        let { config } = state;\n        let { cmllCaseSelector, triggerSelector, cmllAufSelector, orientationSelector, nmcllSelector, hyperOriSelector } = config;\n\n        const isHyperOri = hyperOriSelector.getActiveName() !== \"off\" ;\n        const isHyperOriFB = hyperOriSelector.getActiveName() !== \"F/B\" ;\n        let generator = (() => {\n            if (!isHyperOri) {\n                return alg_generator_from_cases(cmllCaseSelector.kind, cmllCaseSelector.getActiveNames());\n            } else {\n                return alg_generator_from_cases_contain(nmcllSelector.kind, nmcllSelector.getActiveNames().map(x => `nmcll-${x}`))\n            }\n        })();\n        let trig_generator = alg_generator_from_group(triggerSelector);\n        let u_auf_generator =alg_generator_from_group(cmllAufSelector);\n        let ori_generator = alg_generator_from_group(orientationSelector);\n        let post_auf_generator = () => {\n            const choices = (isHyperOriFB) ? [\"U\", \"U'\"] : [\"\", \"U2\"]\n            return rand_choice(choices)\n        }\n        let trigger_alg: CaseDesc = trig_generator();\n        let cmll_alg: CaseDesc = generator();\n        let u_auf_alg: CaseDesc = u_auf_generator();\n        let post_auf_alg = post_auf_generator();\n        let alg_str = trigger_alg.algs + \" \" + u_auf_alg.algs + \" \" + cmll_alg.algs + post_auf_alg;\n        let moves: Move[] = new MoveSeq(alg_str).inv().moves;\n\n        let lse_cube: CubieCube\n        while (true) {\n            lse_cube = CubeUtil.get_random_lse().apply(moves)\n            if (lse_cube.is_solveable()) {\n                break;\n            }\n        }\n        let solution = this._get2PhaseSolution(lse_cube);\n        // ori based on ...?\n        let ori: string = ori_generator().id;\n        //console.log(\"current ori selector's ori \", ori)\n        return ({\n            ...state,\n            name: \"solving\",\n            cube: {\n                state: lse_cube,\n                ori,\n                history: [],\n                levelSuccess: true\n            },\n            case: {\n                state: lse_cube,\n                desc: [trigger_alg, u_auf_alg, cmll_alg, solution]\n            },\n        });\n    }\n    onControl(s: string): AppState {\n        let state = this.state;\n        if (s === \"#space\") {\n            // SCRAMBLE\n            // enter cleared solving state based on selection\n            return this._generateCase();\n        }\n        else if (s === \"#enter\") {\n            // REDO\n            return ({\n                ...state,\n                name: \"solving\",\n                cube: {\n                    ...state.cube,\n                    state: state.case.state,\n                    history: []\n                },\n                case: {\n                    ...state.case,\n                }\n            });\n        }\n        else {\n            throw new Error(\"Unrecognized control code\");\n        }\n    }\n    onConfig(conf: Config): AppState {\n        return this.state;\n    }\n}\nexport class SolvingStateM extends CmllStateM {\n    onMove(move: string): AppState {\n        let state = this.state;\n        let moves = new MoveSeq(move).moves;\n        if (moves.length > 0) {\n            let move = moves[0];\n            let cube = state.cube.state.apply(move);\n            let cmll_solved = CubeUtil.is_cmll_solved(cube);\n            let newState: StateT = cmll_solved ? \"solved\" : \"solving\";\n            return ({\n                ...state,\n                cube: {\n                    ...state.cube,\n                    state: state.cube.state.apply(move),\n                    history: [...state.cube.history, move],\n                },\n                name: newState\n            });\n        }\n        else {\n            // Nothing to apply\n            return state;\n        }\n    }\n}\nexport class SolvedStateM extends CmllStateM {\n    onMove(move: string): AppState {\n        return this.state;\n    }\n}\n","import { StateFactory} from './AbstractStateM';\nimport { AppState, Mode } from '../Types';\nimport { FbdrStateM, FbStateM, FsStateM, FsDrStateM, FbssStateM} from './BlockTrainerStateM';\nimport { SsStateM } from './SsStateM';\nimport { LSEStateM, EOLRStateM } from './LSETrainerStateM';\nimport { SolvingStateM, SolvedStateM } from './CmllStateM';\n\nStateFactory.create = function(state: AppState) {\n        let mode: Mode = state.mode;\n        switch (mode) {\n            case \"fbdr\":\n                return new FbdrStateM(state);\n            case \"ss\":\n                return new SsStateM(state);\n            case \"fbss\":\n                return new FbssStateM(state);\n            case \"fs\":\n                return new FsStateM(state);\n            case \"fsdr\":\n                return new FsDrStateM(state);\n            case \"fb\":\n                return new FbStateM(state);\n            case \"cmll\": {\n                switch (state.name) {\n                    case \"solving\": return new SolvingStateM(state);\n                    case \"solved\": return new SolvedStateM(state);\n                    default: throw new Error(\"impossible\");\n                }\n            }\n            case \"4c\":\n                return new LSEStateM(state);\n            case \"eopair\":\n                return new EOLRStateM(state);\n            case \"experimental\":\n                return new FbStateM(state);\n            case \"analyzer\":\n                return new FbStateM(state)\n            case \"tracking\":\n                return new FbStateM(state)\n        }\n        ;\n    }\n\nexport { StateFactory };","import { Action } from \"./Types\";\n\nconst defaultKeyMapping : { [key: string]: string } = {\n    \"I\": \"R\",\n    \"K\": \"R'\",\n    \"W\": \"B\",\n    \"O\": \"B'\",\n    \"S\": \"D\",\n    \"L\": \"D'\",\n    \"D\": \"L\",\n    \"E\": \"L'\",\n    \"J\": \"U\",\n    \"F\": \"U'\",\n    \"H\": \"F\",\n    \"G\": \"F'\",\n    \";\": \"y\",\n    \"A\": \"y'\",\n    \"U\": \"r\",\n    \"R\": \"l'\",\n    \"M\": \"r'\",\n    \"V\": \"l\",\n    \"T\": \"x\",\n    \"Y\": \"x\",\n    \"N\": \"x'\",\n    \"B\": \"x'\",\n    \".\": \"M'\",\n    \"X\": \"M'\",\n    \"5\": \"M\",\n    \"6\": \"M\",\n    \"P\": \"z\",\n    \"Q\": \"z'\",\n    \"Z\": \"d\",\n    \"C\": \"u'\",\n    \",\": \"u\",\n    \"/\": \"d'\",\n    \"ENTER\": \"#enter\",\n    \" \": \"#space\",\n  }\n\n\nconst lseKeyMapping : { [key: string]: string } = {\n    \"I\": \"M'\",\n    \"E\": \"M'\",\n    \"K\": \"M\",\n    \"D\": \"M\",\n    \"J\": \"U\",\n    \"F\": \"U'\",\n    \"S\": \"E'\",\n    \"L\": \"E\",\n    \"ENTER\": \"#enter\",\n    \" \": \"#space\",\n};\n\n\nexport abstract class KeyMapping {\n    abstract handle(evt: KeyboardEvent, dispatch: React.Dispatch<Action>) : void;\n}\n\nexport class DefaultKeyMapping extends KeyMapping {\n    handle(evt: KeyboardEvent, dispatch: React.Dispatch<Action>) {\n        // do nothing if modifier key is pressed\n        if (evt.altKey || evt.ctrlKey || evt.metaKey) return;\n        let key = evt.key.toUpperCase();\n        if (defaultKeyMapping.hasOwnProperty(key)) {\n            dispatch({\n              type: \"key\", content: defaultKeyMapping[key]\n            });\n        }\n    }\n}\n\nexport class LSEKeyMapping {\n    handle(evt: KeyboardEvent, dispatch: React.Dispatch<Action>) {\n        // do nothing if modifier key is pressed\n        if (evt.altKey || evt.ctrlKey || evt.metaKey) return;\n        let key = evt.key.toUpperCase();\n        if (lseKeyMapping.hasOwnProperty(key)) {\n            dispatch({\n              type: \"key\", content: lseKeyMapping[key]\n            });\n        }\n    }\n}","import { AppState, StateT, Mode } from \"../Types\";\nimport { CubieCube, ColorScheme } from '../lib/CubeLib';\nimport { getConfig, getFavList } from '../lib/LocalStorage';\nimport { DefaultKeyMapping, LSEKeyMapping } from \"../KeyMapping\";\n\n\nexport const getInitialState = (mode?: Mode): AppState => {\n    mode = mode || \"fbdr\";\n    let initialStateName: StateT = function () {\n        switch (mode) {\n            case \"cmll\": return \"solved\";\n            case \"fbdr\":\n            case \"ss\":\n            case \"fb\":\n            case \"4c\":\n            case \"eopair\":\n            case \"fbss\":\n            case \"fs\":\n            case \"fsdr\":\n                return \"revealed\";\n            case \"experimental\":\n                return \"revealed\";\n            case \"analyzer\":\n            case \"tracking\":\n                return \"revealed\"\n        }\n    }();\n    let ori = getConfig().orientationSelector.getActiveName() || \"YR\";\n    return {\n        name: initialStateName,\n        mode,\n        scrambleInput: [],\n        cube: {\n            state: new CubieCube(),\n            ori,\n            history: [],\n            levelSuccess: true,\n        },\n        case: {\n            state: new CubieCube(),\n            desc: []\n        },\n        prev: null,\n        config: getConfig(),\n        favList: getFavList(),\n        keyMapping: (mode === \"4c\" || mode === \"eopair\") ? new LSEKeyMapping() : new DefaultKeyMapping(),\n        colorScheme: new ColorScheme()\n    };\n};\n","\nimport { AppState, Action, FavListAction } from \"../Types\"\nimport { Config } from '../Config';\n\nimport { setConfig, setFavList} from '../lib/LocalStorage';\nimport { StateFactory } from \"./StateFactory\";\nimport { arrayEqual } from \"../lib/Math\";\nimport { getInitialState } from \"./InitialState\";\nimport ReactGA from 'react-ga';\n\nexport { getInitialState }\nfunction reduceByFavlist(state: AppState, action: FavListAction) {\n    let favList = state.favList;\n\n    switch (action.action) {\n        case \"add\":\n            favList = [...action.content, ...favList]\n            setFavList(favList)\n            break;\n        case \"remove\": {\n        // only remove one at a time for now\n            const rem = action.content[0]\n            favList = favList.filter((value) => {\n                return !(value.mode === rem.mode && value.setup === rem.setup && arrayEqual(value.solver, rem.solver))\n            })\n            setFavList(favList)\n            break;\n        };\n        case \"replay\": {\n            return StateFactory.create(state).onReplay(action.content[0])\n        }\n    }\n    return {\n        ...state,\n        favList\n    }\n}\n\nexport function reducer(state: AppState, action: Action): AppState {\n    // todo: cache values based on this\n    // console.log(\"prev state\", state)\n    switch (action.type) {\n        case \"key\": {\n            let newState = reduceByKey(state, action.content)\n            return newState\n        };\n        case \"config\": {\n            // LESSON: Object.assign is dangerous\n            let newConfig = {...state.config, ...action.content}\n\n            // enforce constraints across selectors\n            //if (newConfig.fbPairSolvedSelector.flags[1] === 1) {\n            //    newConfig.fbdrSelector.flags = [1, 0, 0]\n            //}\n            setConfig(newConfig)\n            let newState = reduceByConfig(state, newConfig)\n            return {\n                ...newState,\n                config: newConfig\n            }\n        };\n        case \"mode\": {\n            let mode = action.content\n            if (window.location.hash !== mode) {\n                ReactGA.pageview(mode);\n            }\n            window.location.hash = mode\n            \n            state = getInitialState(mode)\n            return state\n        };\n        case \"scrambleInput\":\n            return {\n                ...state,\n                scrambleInput: action.content\n            }\n        case \"favList\":\n            return reduceByFavlist(state, action)\n        case \"colorScheme\":\n            return {\n                ...state,\n                colorScheme: state.colorScheme.set(action.content)\n            }\n        case \"custom\":\n            return action.content(state)\n        default:\n            return state\n        }\n}\n\n\nfunction reduceByKey(state: AppState, code: string): AppState {\n    if (code === \"\") return state;\n\n    const stateM = StateFactory.create(state)\n    // case match on kind of operation\n    if (code[0] === \"#\") {\n        return stateM.onControl(code)\n    } else {\n        return stateM.onMove(code)\n    }\n}\nfunction reduceByConfig(state: AppState, conf: Config): AppState {\n    const stateM = StateFactory.create(state)\n    // case match on kind of operation\n    return stateM.onConfig(conf)\n}","import React from 'react'\nimport AppView from \"../components/AppView\"\nimport { reducer } from '../reducers/Reducer'\nimport { getInitialState } from \"../reducers/InitialState\";\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { ThemeProvider, Theme, StyledEngineProvider } from '@mui/material/styles';\nimport { theme, themeDark } from '../theme';\nimport \"typeface-roboto\";\nimport \"fontsource-public-sans\";\nimport { resetConfig } from '../lib/LocalStorage';\n\n\ndeclare module '@mui/styles/defaultTheme' {\n  // eslint-disable-next-line @typescript-eslint/no-empty-interface\n  interface DefaultTheme extends Theme {}\n}\n\nwindow.addEventListener('keypress', function(e) {\n  if(e.keyCode === 32 && e.target === document.body) {\n    e.preventDefault();\n  }\n  if (e.altKey && e.ctrlKey && e.key === \"r\") {\n    resetConfig()\n    console.log(\"config reset\")\n  }\n});\n\nfunction App(props: {}) {\n  const [state, dispatch] = React.useReducer( reducer, getInitialState() )\n\n  const appTheme = state.config.theme.getActiveName() === \"bright\" ? theme : themeDark\n  return (\n    <StyledEngineProvider injectFirst>\n      <ThemeProvider theme={appTheme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <AppView state={state} dispatch={dispatch} />\n      </ThemeProvider>\n    </StyledEngineProvider>\n  );\n}\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport ReactGA from 'react-ga';\n\nif (process.env.NODE_ENV === 'production') {\n  ReactGA.initialize('UA-209793005-2', );\n} else {\n  console.log(\"In dev/test mode now, won't send GA\")\n}\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root'),\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}