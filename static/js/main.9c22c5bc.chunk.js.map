{"version":3,"sources":["lib/Defs.tsx","lib/Math.ts","components/CubeSim.tsx","lib/CubeLib.tsx","lib/Selector.tsx","components/Select.tsx","components/Input.tsx","components/CmllTrainerView.tsx","components/ScrambleInputView.tsx","components/BlockTrainerView.tsx","components/PanoramaView.tsx","lib/Pruner.tsx","lib/min2phase/min2phase-wrapper.ts","lib/Solver.tsx","lib/CachedSolver.tsx","components/FavListView.tsx","components/TopBarView.tsx","lib/Evaluator.tsx","lib/Analyzer.ts","components/AnalyzerView.tsx","lib/Worker.ts","components/TrackerView.tsx","components/AppView.tsx","Version.tsx","Initialization.tsx","lib/LocalStorage.tsx","reducers/AbstractStateM.tsx","lib/Algs.tsx","reducers/BlockTrainerStateM.tsx","reducers/LSETrainerStateM.tsx","reducers/CmllStateM.tsx","reducers/StateFactory.tsx","KeyMapping.tsx","reducers/InitialState.tsx","reducers/Reducer.tsx","theme.js","app/App.tsx","serviceWorker.js","index.js","lib/min2phase/min2phase.js"],"names":["Face","Typ","U","D","F","B","L","R","C","E","T","corners_coord","edges_coord","centers_coord","cstimer_corners_coord","cstimer_edges_coord","u","cpc","coc","epc","eoc","tpc","name","f","r","l","d","b","m","e","s","u_face","f_face","FBpairPos","color_map","rand_int","Math","floor","random","rand_incl","rand_choice","arr","length","rand_shuffle","i","j","tmp","cartesianProduct","allEntries","reduce","results","entries","map","result","entry","concat","subResults","getParity","perm","visited","Array","fill","follow","cnt","res","arrayEqual","arr1","arr2","Vector3","THREE","TAU","PI","axesInfo","roundedFace","rounded","cornerRadius","geo","cornerVertices","cornerCenter","squareCorner","degree","push","clone","add","cos","sin","multiplyScalar","vertices","x","applyAxisAngle","vertices_float32","Float32Array","vertices_attr","copyVector3sArray","console","log","faces","i1","setFromPoints","redraw_cube","cube","config","width","height","colorScheme","mode","theme","hintDistance","enableControl","bgColor","facesToReveal","scene","camera","renderer","antialias","setSize","setClearColor","setPixelRatio","window","devicePixelRatio","controls","OrbitControls","domElement","enabled","stickers_tmpl","stickerwrap_tmpl","angleScale","scale","cameraPosition","position","copy","aspect","lookAt","geos","geo_border","materials_border","color","side","mesh","setRotationFromEuler","sticker_scale","hint_scale","rounded_patterns","drawCube","materials","_","mat","alphaTest","pattern","set","flat","hint_mesh","chroma","hex","cubie","rot","makeRotationFromEuler","rot1","setRotationFromMatrix","multiply","z","idx","sticker","stickerwrap","indexOf","stickerhint","cubeG","render","update","frameID","animate","requestAnimationFrame","updateCubeAndColor","remove","getRenderer","cleanupFunc","forEach","g","dispose","cancelAnimationFrame","renderControls","config_cache","painter","CubeSim","props","mount","React","useRef","cubePainter","useMemo","useMediaQuery","useTheme","breakpoints","up","useEffect","dom","current","appendChild","removeChild","ref","style","zIndex","CubieCube","value","cp","co","ep","eo","tp","this","Id","obj","JSON","parse","stringify","o","p","oc","pc","mod","o_new","p_new","assert","src","dst","move","_apply_partial","toc","isArray","MoveSeq","moves","apply_one","apply","facelet_mapping","pos","piece","_rotate_coord","fm","custom_corners_coord","custom_edges_coord","custom_centers_coord","match_pos_piece","coord","parity","expected","Map","toString","ori","has","_backward_rotate_coord","warn","get","coord_pair","newOri","newpos","newPerm","_to_facelet_mapping","_from_facelet_mapping","perm_correct","ori_correct","y","transformed_mapping","mapping","face_mapping","Object","fromEntries","face_pos","face_target","fs","last_face","first_face","Move","arg","from_moves","from_cube","get_change","acc_p","acc_o","slice","all","generate_base_moves","make_rot_set","us","rs","ls","ds","bs","ms","es","ss","rws","lws","uws","xs","ys","zs","moves_dict","create","nm","k","quarterMap","rotset","Set","shift","str","tokens","token","comment_idx","search","ch","ord","charCodeAt","split","parse_line","newMoves","nextMove","pop","combined","_combine","reverse","inv","n","useMetric","join","move1","move2","getCnt","getStr","auf_moves","auf_move","FaceletCube","mult_move","face","face_new","work","typ","mod_for_typ","p1","p2","p_curr","o_curr","color_of_c","o1","o2","color_of_e","color_of_t","color_of_sticker","Error","d_face","l_face","r_face","b_face","from_cubie","mask","facelet","X","from_cubie_partial_masked","from_cubie_partial","to_unfolded_cube_str","faceletCube","face_count","str_face_map","color_cube","face_char","hasOwnProperty","count","lse_mask","CubeUtil","ext","stickers","find_pairs","edge_stickers","filter","corner_stickers","ep_stickers","cp_stickers","epcp_pairs","c","efs","cfs","match","get_color","connected_pairs","u_premove","m2_premove","get_random_with_mask","cp_rand","ep_rand","par","random_ori","ori_mask","sum","random_perm","perm_mask","undecided","is_cmll_solved","premove","cube1","solved","is_mask_solved2","is_solved","co_","eo_","tp_","every","get_random_lse","is_cube_solved","id","ColorScheme","suppressLoad","colors","load","newScheme","save","_setDefault","default_colors","valid_schemes_map","localStorage","setItem","serialize","item","getItem","deserialize","valid_schemes","Mask","fs_back_mask","fs_front_mask","fbdr_mask","fb_mask","sb_mask","cmll_mask","ss_front_mask","ss_back_mask","empty_mask","dl_solved_mask","bl_solved_mask","solved_mask","zhouheng_mask","lse_4c_mask","getActiveNames","ans","flags","names","getActiveName","useStyles","makeStyles","container","paddingTop","spacing","paddingBottom","backgroundColor","palette","background","default","button","paper","padding","display","overflow","flexDirection","canvasPaper","infoColumn","scrambleColumn","paddingLeft","textColumn","minHeight","fixedHeight","title","flexGrow","select","text","primary","selectLabel","secondary","SingleSelect","state","dispatch","sel","classes","radioValue","label","FormControl","component","className","FormLabel","RadioGroup","aria-label","onChange","evt","new_flags","target","new_config","fbPairSolvedSelector","fbdrSelector","type","content","row","FormControlLabel","control","Radio","labelPlacement","MultiSelectContent","options","handleChange","checked","useState","manipChecked","setManipChecked","manipulator_row","manipulators","FormGroup","manip","enableIdx","Checkbox","fillValue","makeManipulator","Fragment","makeBox","MultiSelect","open","setOpen","handleClose","noDialog","Box","Button","variant","borderWidth","onClick","fontSize","marginLeft","marginRight","Dialog","disableBackdropClick","disableEscapeKeyDown","onClose","DialogTitle","DialogContent","DialogActions","ColorSetter","toUserInput","setText","TextField","defaultValue","helperText","event","fullWidth","size","ColorPanel","orientationSelector","Divider","hint","fontWeight","borderBottom","prompt","CmllTrainerView","clsx","_getMask","cmllCubeMaskSelector","hyperori","hyperOriSelector","panel","cmllSelector","cmllAufSelector","triggerSelector","setReveal","reveal","downHandler","keyMapping","handle","addEventListener","removeEventListener","alg","setup","case","desc","algs","moves_c","collapse","Grid","Paper","margin","getColorsForOri","elevation","lineHeight","Typography","whiteSpace","onFocus","blur","sm","md","setupEdit","down","ScrambleInputView","editing","setEditing","scrambles","setValue","textField","onKeyPress","stopPropagation","trim","startIcon","onKeyDown","onKeyUp","onEntered","focus","inputRef","multiline","rowsMax","rows","InputProps","transition","marginBottom","borderRadius","condGap","fgap","flexShrink","flexBasis","minWidth","sourceIcon","sourceIconWrap","fab","top","left","ConfigPanelGroup","ssSelector","ssPairOnlySelector","solutionNumSelector","showCube","ssPosSelector","LPEdgeManip","fbOnlySelector","fbdrScrambleSelector","fbdrPosSelector1","fbdrPosSelector3","fbPieceSolvedSelector","fsSelector","fbssLpSelector","fbssSsSelector","lseStageSelector","lseMCSelector","lseBarSelector","lseEOSelector","lseEOLRMCSelector","lseBarbieSelector","lseEOLRScrambleSelector","BlockTrainerView","kind","getMask","spaceButtonText","algText","minMove","a","remove_setup","min","describe_hide","get_algs","describe_reveal","key","setFav","favSelected","canvas_wh","alignItems","flexWrap","scrambleInput","case_","solver","action","endIcon","alignSelf","justifyContent","fontFamily","root","textAlign","gridList","VisualCube","stage","sch","template","alt","PanoramaTable","GridList","cellHeight","cols","GridListTile","PanoramaView","PrunerPiece","S","I","Pruner","dist","encode","solved_states","max_depth","moveset","initialized","init","Uint8Array","frontier","total_expanded","new_frontier","newState","query","equal","cube2","prunerFactory","def","corner","edge","center","O","def_to_idx","count_all","curr_idx","idx_arr","eosize","epsize","eisize","esize","pow","ep_idx","e_idx","cosize","cpsize","cisize","csize","cp_idx","c_idx","tosize","tpsize","tisize","tsize","tp_idx","t","to","fbdrPrunerConfig","c1","c2","enc_c","e1","e2","e3","e4","htm_rwm","fbPrunerConfig","sbPrunerConfig","lsePrunerConfig","edge_encode","enc","edge_enc","solve","min2phaseSolve","toMin2Phase","Solver","accum","min_depth","SState","MAX_STATE_COUNT","pruners","state_count","solve_depth","min_depth_","max_depth_","accum_","nextMoves","depth","solution","STOP","CONTINUE","solutions","capacity","flag","sol","try_push","max","availableMoves","seen_encodings","pruneSeenEncodings","new_cube","st","expand","getAvailableMove","base","generateNextMoveTable","depth_l","depth_r","getPruner","solverFactory","prunerConfig","pruner","SsSolver","is_front","v","ssPrunerConfig","FbssSolver","prunerConfigs","solverFactory2","fbssPrunerConfig","FsSolver","fsPrunerConfig","EOLRSolver","center_flag","barbie_mode","edge_idx","moves_ac","moves_mc","barb_moves","eolrPrunerConfig","all_solvers","CachedSolver","cache","min2phase_init","transformed_cube","to_cstimer_cube","is_solveable","min2phase_solve","table","FavListView","favList","dialogID","setDialogID","dialogDelete","autoFocus","addDialogOpen","setAddDialogOpen","addString","setAddString","handleAddClose","dialogAdd","aria-labelledby","DialogContentText","allSolvers","parseAddString","Table","TableHead","TableRow","TableCell","align","rowSpan","IconButton","TableBody","play","is_bright","main","page","icon","bar","description","TopBarView","toggleFav","toggleBright","handleInfoOpen","value_str_","find","value_str","boxShadow","Toolbar","Select","findIndex","tab_idx","MenuItem","Evaluator","SeqEvaluator","moveCost","moveCost_gen","QTMEvaluator","DefaultEvaluator","TwoGramEvaluator","moves_input","score","two_gram","curr_score","Number","parseFloat","meter","isNaN","getEvaluator","two_gram_meter","initialState","scramble","post_scramble","full_solution","orientation","pre_orientation","num_solution","show_mode","is_fb_solved","oris","changeBasis","get_oris","preori","paper2","title1","marginTop","border","configItem","paddingRight","stageText","textTransform","formControl","resetState","postScramble","ScrambleView","setState","ConfigView","fb_ori_str","display_mode_str","InputLabel","labelId","FormHelperText","parseInt","SolutionInputView","Date","now","defaultSolution","stages","current_moves","stage_idx","getMasksForStage","some","analyze_roux_solve","maxWidth","StageSolutionView","tags","Chip","StageSolutionListView","FullSolutionView","setStage","show","setShow","onMouseLeave","onMouseEnter","stageView","worker_raw","Worker","worker","Comlink","AnalyzerView","appState","setSolutions","cubieCube","solutions_to_display","sort","analyze","curr_solutions","effect","gt_md","gt_sm","moveSet","moveCount","axis","generateMoves","candidate","prev","prevprev","prevSolution","next","moveSeq","generateChallenge","cubeAfter","cubeBefore","progress","generateChallengeForFB","generateChallengeForFS","getInitialState","TrackerView","globalState","toQuarter","handleProgress","func","moveSetText","setMoveSetText","onMoveSetCommit","TabPanel","children","index","other","role","hidden","modes","_getInitialHashLocation","location","hash","Intro","AppView","useCallback","newValue","handleInfoClose","showFav","dividers","theme_flag","paddingY","Container","version","initialFavList","initialConfig","arr_ori_flag","evaluator","fbdrPosSelector2","ssEOSelector","favListManager","getFavList","setFavList","item1","configManager","versionKey","getConfig","vers","undefined","keys","item2","setConfig","partial","newConfig","assign","AbstractStateM","StateFactory","createAlg","empty_alg","cmll_algs","trigger_algs","u_auf_algs","ori_algs","alg_generator","selector","algSet","lookup_algset","lookup","get_active_names","prefix","BlockTrainerStateM","solverL","solverR","scrambleMargin","scrambleCount","algDescWithMoveCount","expansionFactor","premoves","orientations","evalName","solverNames","totalSolutionCap","selectedSolutionCap","solverName","pm","pre","evaluate","algDescs","_solve_with_solvers","updateSolutionOnly","scrambleSolver","solutionLength","algDesc","getRandom","inputScramble","_solve","state1","_updateCase","movestr","conf","_updateCap","FbdrStateM","edgePositionMap","allowed_pedge","allowed_dr","dr_ep","dr_eo","_edge_piece_in_pattern","fbOnly","pairSolved","startsWith","active","_get_pair_solved_front","_get_random_fs_back","_get_random_fs_front","SsStateM","allowed_dr_eo_ep","ep_","drPositionMap","allowed_dr_eo_ep_patterns","_get_random_fb","FbStateM","is_l_only","centers","includes","hard_str","g_hard_str","pairs","cc_edges","_find_center_connected_edges","_get_random","FsStateM","FbssStateM","active_lp","active_ss","LSEStateM","bars","lse_premove","lseEODef","lseEODefLookup","EOLRStateM","eo_arr","targetEO","eolrMCMode","compare","useBarbie","useFullScramble","_getEOType","acSolver","mcSolver","acLength","mcLength","CmllStateM","m2_away","lse_cube","generator","trig_generator","u_auf_generator","ori_generator","trigger_alg","cmll_alg","u_auf_alg","alg_str","_get2PhaseSolution","history","_generateCase","SolvingStateM","SolvedStateM","defaultKeyMapping","lseKeyMapping","DefaultKeyMapping","altKey","ctrlKey","metaKey","toUpperCase","LSEKeyMapping","initialStateName","reducer","code","stateM","onControl","onMove","reduceByKey","onConfig","reduceByConfig","rem","onReplay","reduceByFavlist","createMuiTheme","error","red","A400","themeDark","overrides","MuiDivider","keyCode","document","body","preventDefault","App","useReducer","appTheme","ThemeProvider","CssBaseline","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","createArray","bitCount","get8Parity","get12Parity","binarySearch","mid","val","fact","perm3","ud2std","std2ud","Cnk","length1","length2","createArrays","move2str","urfMove","ckmv","ckmv2","getFlip","getFlipSym","FlipR2S","EdgeConjugate","SymInv","temps","FlipS2R","setFlip","bitOdd","getTwist","getTwistSym","TwistR2S","CornConjugate","TwistS2R","setTwist","twst","getUDSlice","setUDSlice","getMPerm","setMPerm","getMid3","idxA","idxB","setMid3","getURtoUL","getDRtoDL","setEdgePerm","getEdgePerm","getCPermSym","EPermR2S","get8Perm","e2c","CPermS2R","getEPermSym","EPermS2R","URFConjugate","CornMult","urf2","urf1","EdgeMult","invCubieCube","corn","cperm","twist","eperm","flip","set8Perm","cctemp","prod","oriA","oriB","ed","CubeSym","moveCube","SymMult","SymMove","Sym8Mult","Sym8Move","Sym8MultInv","SymMoveUD","MtoEPerm","merge","UDSliceMove","TwistMove","FlipMove","UDSliceConj","UDSliceTwistPrun","UDSliceFlipPrun","TwistFlipPrun","Mid3Move","Mid32MPerm","CParity","CPermMove","EPermMove","MPermMove","MPermConj","MCPermPrun","MEPermPrun","urfidx","csym","mid3","tsym","fsym","corn0","csym0","mid30","e10","e20","prun","maxlength2","valid1","valid2","phase1","maxl","lm","cornx","ex","get4Parity","esym","phase2","sb","urf","init2","slicex","twistx","tsymx","flipx","fsymx","midx","edgex","esymx","csymx","initialize","mc","temp","f2","u4","lr2","found","occ","CubieInit","SymState","SymStateF","check","done","sym","symF","fsymxx","idxx","symx","CoordInit","module","exports","cc","Solve","randomCube"],"mappings":"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","file":"static/js/main.9c22c5bc.chunk.js","sourcesContent":["export enum Face {\n    U = 0, D, F, B, L, R, X\n}\n\nconst U = Face.U;\nconst D = Face.D;\nconst F = Face.F;\nconst B = Face.B;\nconst L = Face.L;\nconst R = Face.R;\nexport {U, D, F, B, L, R};\n\nexport enum Typ {\n    C = 0, E, T\n}\nconst C = Typ.C;\nconst E = Typ.E;\nconst T = Typ.T;\nexport {C, E, T}\n\nexport type CubieT = {\n    co: Array<number>,\n    cp: Array<number>,\n    eo: Array<number>,\n    ep: Array<number>,\n    tp: Array<number>\n}\n\nexport type FaceletCube = Array<string>\n\nexport type CornerCoord = [Face, Face, Face]\nlet corners_coord : Array<CornerCoord> = [\n    [U,F,L], [U,L,B], [U,B,R], [U,R,F],\n    [D,L,F], [D,B,L], [D,R,B], [D,F,R]\n]\n\nexport type EdgeCoord = [Face, Face]\nlet edges_coord : Array<EdgeCoord> = [\n    [U,F], [U,L], [U,B], [U,R],\n    [D,F], [D,L], [D,B], [D,R],\n    [F,L], [B,L], [B,R], [F,R],\n]\nexport type CenterCoord = [Face]\nlet centers_coord : Array<CenterCoord> = [\n    [U], [D], [F], [B], [L], [R]\n]\n\nlet cstimer_corners_coord : Array<CornerCoord> = [\n    [U,R,F],[U,F,L], [U,L,B], [U,B,R],\n    [D,F,R],[D,L,F], [D,B,L], [D,R,B]\n]\n\nlet cstimer_edges_coord : Array<EdgeCoord> = [\n    [U, R], [U,F], [U,L], [U,B],\n    [D, R], [D,F], [D,L], [D,B],\n    [F, R], [F,L], [B,L], [B,R]\n]\n\nexport {corners_coord, edges_coord, centers_coord, cstimer_corners_coord, cstimer_edges_coord }\n\nexport type FaceletMapping = [Face[], Face[]][]\n\nexport type PermChg = [number, number]\nexport type OriChg = number\n\nexport type MoveT = {\n    cpc: Array<PermChg>,\n    coc: Array<OriChg>,\n    epc: Array<PermChg>,\n    eoc: Array<OriChg>,\n    tpc: Array<PermChg>,\n    name: string\n}\n\nlet u : MoveT = {\n    cpc: [[0, 1], [1, 2], [2, 3], [3, 0]],\n    coc: [0, 0, 0, 0],\n    epc: [[0, 1], [1, 2], [2, 3], [3, 0]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"U\"\n}\n\nlet f : MoveT = {\n    cpc: [[0, 3], [3, 7], [7, 4], [4, 0]],\n    coc: [1, 2, 1, 2],\n    epc: [[0, 11], [11, 4], [4, 8], [8, 0]],\n    eoc: [1, 1, 1, 1],\n    tpc: [],\n    name: \"F\",\n}\n\nlet r : MoveT = {\n    cpc: [[3, 2], [2, 6], [6, 7], [7, 3]],\n    coc: [1, 2, 1, 2],\n    epc: [[3, 10], [10, 7], [7, 11], [11, 3]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"R\",\n}\n\nlet l : MoveT = {\n    cpc: [[0, 4], [4, 5], [5, 1], [1, 0]],\n    coc: [2, 1, 2, 1],\n    epc: [[1, 8], [8, 5], [5, 9], [9, 1]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"L\",\n}\n\nlet d : MoveT = {\n    cpc: [[4, 7], [7, 6], [6, 5], [5, 4]],\n    coc: [0, 0, 0, 0],\n    epc: [[4, 7], [7, 6], [6, 5], [5, 4]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"D\",\n}\n\nlet b : MoveT = {\n    cpc: [[1, 5], [5, 6], [6, 2], [2, 1]],\n    coc: [2, 1, 2, 1],\n    epc: [[2, 9], [9, 6], [6, 10], [10, 2]],\n    eoc: [1, 1, 1, 1],\n    tpc: [],\n    name: \"B\",\n}\n\nlet m : MoveT = {\n    cpc: [],\n    coc: [],\n    epc: [[0, 4], [4, 6], [6, 2], [2, 0]],\n    eoc: [1, 1, 1, 1],\n    tpc: [[0, 2], [2, 1], [1, 3], [3, 0]],\n    name: \"M\",\n}\n\nlet e : MoveT = {\n    cpc: [],\n    coc: [],\n    epc: [[8, 9], [9, 10], [10, 11], [11, 8]],\n    eoc: [1, 1, 1, 1],\n    tpc: [[2, 4], [4, 3], [3, 5], [5, 2]],\n    name: \"E\",\n}\n\nlet s : MoveT = {\n    cpc: [],\n    coc: [],\n    epc: [[1, 3], [3, 7], [7, 5], [5, 1]],\n    eoc: [1, 1, 1, 1],\n    tpc: [[0, 5], [5, 1], [1, 4], [4, 0] ],\n    name: \"S\",\n}\n\nexport {u, d, f, b, l, r, m, e, s}\n\nexport type StickerT = [number, number, Typ]\nexport type StickerExtT = [number, number, Typ, Face]\nexport type FaceletT = Array<StickerT>\n\nlet u_face : FaceletT = [\n    [1, 0, C], [2, 0, E], [2, 0, C],\n    [1, 0, E], [0, 0, T], [3, 0, E],\n    [0, 0, C], [0, 0, E], [3, 0, C]\n  ]\n\nlet f_face : FaceletT = [\n    [0, 1, C], [0, 1, E], [3, 2, C],\n    [8, 0, E], [2, 0, T], [11,0, E],\n    [4, 2, C], [4, 1, E], [7, 1, C]\n]\n\nexport {u_face, f_face}\n\nconst FBpairPos : [number, number, number, number][] = [\n    [0, 0, 8, 1], [0, 1, 1, 0], [ 0, 2 , 0, 1],\n    [1, 1, 2, 0], [1, 2, 1, 1],\n    [2, 0, 10, 1], [2, 1, 3, 0], [2, 2, 2, 1],\n    [3, 0, 11, 0], [3, 1, 0, 0], [3, 2, 3, 1],\n    [4, 0, 8, 0], [4, 1, 4, 0],\n    [6, 0, 10, 0], [6, 1, 6, 0], [6, 2, 7, 1],\n    [7, 0, 11, 1], [7, 1, 7, 0], [7, 2, 4, 1]\n]\n\nexport {FBpairPos}\n\nexport type FaceletCubeT = Array<Array<Face>>\n\n// A Cube can be in two representations: cubieCube or faceletCube\n\nlet color_map =`\\\n   UUU\n   UUU\n   UUU\nLLLFFFRRRBBB\nLLLFFFRRRBBB\nLLLFFFRRRBBB\n   DDD\n   DDD\n   DDD`\n\nexport {color_map}\n","let rand_int = (r: number) => {\n    return Math.floor(Math.random() * r)\n}\n\nlet rand_incl = (l: number, r: number) => {\n    return rand_int(r - l + 1) + l;\n}\nlet rand_choice = function<T>(arr: T[]) {\n    return arr[rand_int(arr.length)]\n}\n\nlet rand_shuffle = function<T>(arr: T[]) {\n    for (let i = 0, l = arr.length; i < l - 1; i++) {\n        let j = rand_incl(i, l - 1)\n        let tmp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = tmp\n    }\n    return arr\n}\n\nfunction cartesianProduct<T>(...allEntries: T[][]): T[][] {\n    return allEntries.reduce<T[][]>(\n      (results, entries) =>\n        results\n          .map(result => entries.map(entry => result.concat([entry])))\n          .reduce((subResults, result) => subResults.concat(result), []),\n      [[]]\n    )\n  }\n\nlet getParity = (perm: number[]) => {\n    let visited = Array(perm.length).fill(false)\n    let follow = (i: number, cnt: number) : number => {\n        if (visited[i]) {\n            return 0\n        } else {\n            visited[i] = 1\n            if (visited[perm[i]]) {\n                return cnt;\n            } else\n                return follow(perm[i], cnt + 1)\n        }\n    }\n    let res = 0\n    for (let x of perm) {\n        res += follow(x, 0)\n    }\n    return res\n}\n\nlet arrayEqual = function<T>(arr1: T[], arr2: T[]) {\n    if (arr1.length !== arr2.length) return false;\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) return false;\n    }\n    return true;\n}\n\nlet encodeArr = function(base: number, rarr: number[]) {\n    let int = 0\n    for (let i = rarr.length - 1; i >= 0; i--)\n        int = rarr[i] + int * base\n    return int\n}\n\nexport {rand_int, rand_choice, rand_shuffle, getParity, arrayEqual, encodeArr, cartesianProduct}","import React, { useEffect } from 'react'\n\nimport { FaceletCubeT, Face } from \"../lib/Defs\";\nimport * as THREE from 'three';\nimport { arrayEqual } from '../lib/Math';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\nimport * as chroma from 'chroma-js';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\ntype Config = {\n    cube: FaceletCubeT, width: number, height: number, colorScheme: Array<string>, facesToReveal: Face[],\n    theme: string,\n    hintDistance?: number,\n    enableControl? : boolean\n}\nlet { Vector3 } = THREE\n\n/*\nHow to propagate control of keypress ..? maybe not here, in the app.\n\nLet's look at click analogy: if a user click on sub-component,\nthat message should be propagated upwards to the parent.\n\nThat is, \"keydown\" should transform to some kind of message, e.g. the resulting cube state\nto be passed to the App, which then decides whether to trigger state change or let the cube keep being solved\n\n*/\n\n\ntype AxesInfo = [THREE.Vector3, THREE.Euler]\nconst TAU = Math.PI * 2;\nconst axesInfo: [THREE.Vector3, THREE.Euler][] = [\n    // UDFBLR\n    [new THREE.Vector3(0, 1, 0), new THREE.Euler(-TAU / 4, 0, 0)],\n    [new THREE.Vector3(0, -1, 0), new THREE.Euler(TAU / 4, 0, 0)],\n    [new THREE.Vector3(0, 0, 1), new THREE.Euler(0, 0, 0)],\n    [new THREE.Vector3(0, 0, -1), new THREE.Euler(0, TAU / 2, 0)],\n    [new THREE.Vector3(-1, 0, 0), new THREE.Euler(0, -TAU / 4, 0)],\n    [new THREE.Vector3(1, 0, 0), new THREE.Euler(0, TAU / 4, 0)],\n];\n\n\ntype ConfigT = {width: number, height: number, colorScheme: Array<string>, mode?: string,\n    faces?: Face[], theme?: string, hintDistance?: number,     enableControl? : boolean\n}\n\nconst roundedFace = ((rounded?: number[], cornerRadius?: number, ) => {\n    cornerRadius = cornerRadius || 0.1\n    rounded = rounded || [1, 1, 1, 1]\n    let geo = new THREE.BufferGeometry()\n    let cornerVertices = []\n    let cornerCenter = new THREE.Vector3(1 - cornerRadius, 1 - cornerRadius, 0)\n    let squareCorner = new THREE.Vector3(1, 1, 0)\n    for (let i = 0; i <= 90; i += 10) {\n        let degree = (i * Math.PI) / 180\n        cornerVertices.push( \n            cornerCenter.clone().add(new THREE.Vector3(Math.cos(degree), Math.sin(degree), 0).multiplyScalar(cornerRadius))\n        )\n    }\n    let vertices = []\n    for (let i = 0; i < 4; i++) {\n        if (rounded[i]) {\n            vertices.push(...cornerVertices)\n        } else {\n            vertices.push(squareCorner.clone())\n        }\n        cornerVertices = cornerVertices.map(x => x.clone().applyAxisAngle(new Vector3(0, 0, 1), 0.5 * Math.PI))\n        squareCorner.applyAxisAngle(new Vector3(0, 0, 1), 0.5 * Math.PI)\n    }\n    //vertices.push(new Vector3(0, 0, 0))\n\n    let vertices_float32 = new Float32Array( vertices.length * 3)\n    let vertices_attr = new THREE.BufferAttribute(vertices_float32, 3).copyVector3sArray( vertices)\n    console.log(vertices_attr)\n    let faces = []\n    for (let i = 0; i< vertices.length; i++) {\n        let i1 = (i + 1) % vertices.length;\n        faces.push(vertices[vertices.length - 1])\n        faces.push(vertices[i])\n        faces.push(vertices[i1])\n    }\n    geo.setFromPoints(faces)\n\n    return geo\n})\n\n\n\nconst redraw_cube = function (cube: FaceletCubeT, config: ConfigT ) {\n    let { width, height, colorScheme, mode, faces, theme, enableControl} = config\n    let hintDistance = config.hintDistance || 3\n    const bgColor = theme === \"bright\" ? \"#eeeeef\" : '#252525' \n\n    mode = mode || \"FRU\"\n    let facesToReveal = faces || [Face.L, Face.B, Face.D]\n\n    const scene = new THREE.Scene()\n    const angle = 50\n    const camera = new THREE.PerspectiveCamera(angle, width / height, 0.1, 1000)\n\n    const mag = 1.0\n    const alpha = 0.5\n    const enableBorder = true\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true })\n    renderer.setSize(width, height, true);\n    //renderer.setViewport( 0, 0, width * window.devicePixelRatio, height * window.devicePixelRatio);\n    renderer.setClearColor(bgColor) // #70788a') //#5a606e') // '#373B43') // '#eeeeee')\n    renderer.setPixelRatio(window.devicePixelRatio)\n\n    const controls = new OrbitControls( camera, renderer.domElement );\n    controls.enabled = !!config.enableControl\n\n    const angleScale = Math.sin(70 / 180 * Math.PI)  /  Math.sin(angle / 180 * Math.PI)\n    const scale = (hintDistance > 5) ? .96 * angleScale : .9 * angleScale\n    const cameraPosition = (mode === \"FRU\") ? new THREE.Vector3(2.5 * scale, 3.5 * scale, 3 * scale) : new THREE.Vector3(0 / 1.1, 3 / 1.1, 3 / 1.1)\n    camera.position.copy(cameraPosition)\n    camera.aspect = width / height;\n    camera.lookAt(new THREE.Vector3(0, 0, 0))\n\n    let stickers_tmpl: THREE.Mesh[], stickerwrap_tmpl: THREE.Mesh\n\n    const geos : THREE.BufferGeometry[] = []; // new THREE.PlaneGeometry(0.89 * mag * 2, 0.89 * mag * 2)\n    const geo_border = new THREE.PlaneGeometry(2.0, 2.0)//1.0 * mag * 2, 1.0 * mag * 2)\n\n    let materials_border = new THREE.MeshBasicMaterial({ color: 0x000000, side: THREE.FrontSide })\n    stickerwrap_tmpl = (() => {\n        let mesh = new THREE.Mesh(geo_border, materials_border)\n        mesh.setRotationFromEuler(axesInfo[0][1])\n        return mesh\n    })()\n\n    const sticker_scale = 0.88\n    const corner_radius = 0.4\n    const hint_scale = 0.95\n    const rounded_patterns = [\n        [0, 0, 0, 1],\n        [0, 0, 1, 1],\n        [0, 0, 1, 0],\n        [1, 0, 0, 1],\n        [1, 1, 1, 1],\n        [0, 1, 1, 0],\n        [1, 0, 0, 0],\n        [1, 1, 0, 0],\n        [0, 1, 0, 0]\n    ];\n\n    function drawCube(faces: FaceletCubeT, colorScheme: Array<string>): THREE.Group {\n        //console.log(\"update color scheme \", colorScheme_)\n        let materials = Array(7).fill(0).map((_, i) => {\n            let mat = new THREE.MeshBasicMaterial({ color: colorScheme[i], side: THREE.DoubleSide });\n            mat.alphaTest = alpha;\n            return mat\n        })\n\n        stickers_tmpl = materials.map((mat) => {\n            return rounded_patterns.map(pattern => {\n                let geo = roundedFace(pattern, corner_radius)\n                geos.push(geo)\n                let mesh = new THREE.Mesh(geo, mat)\n                mesh.scale.set(sticker_scale, sticker_scale, sticker_scale)\n                mesh.setRotationFromEuler(axesInfo[0][1])\n                return mesh\n            })\n        }).flat()\n\n        let hint_mesh = Array(7).fill(0).map((_, i) => {\n            let color = (theme === \"bright\") \n                ? chroma.mix(colorScheme[i], 'white', 0.18).hex()\n               :  chroma.mix(colorScheme[i], 'black', 0.35).hex()\n \n               // \n            //chroma.default(colorScheme[i]).brighten(0.7).hex()\n                  //desaturate(2).hex() //darken(0.5).hex()\n            let mat = new THREE.MeshBasicMaterial({ color, side: THREE.DoubleSide });\n\n            let geo = roundedFace([1,1,1,1], corner_radius)\n            geos.push(geo)\n            let mesh = new THREE.Mesh(geo, mat)\n            mesh.scale.set(hint_scale, hint_scale, hint_scale)\n            mesh.setRotationFromEuler(axesInfo[0][1])\n            return mesh\n        })\n\n\n        const cube = new THREE.Group();\n        for (let i = 0; i < 6; i++) {\n            const cubie = new THREE.Group();\n            const rot = new THREE.Matrix4().makeRotationFromEuler(axesInfo[i][1]);\n            const rot1 = new THREE.Matrix4().makeRotationFromEuler(axesInfo[1][1]);\n            cubie.setRotationFromMatrix(rot.multiply(rot1))\n            for (let z = -1; z <= 1; z++) {\n                for (let x = -1; x <= 1; x++) {\n                    let idx = (z + 1) * 3 + (x + 1)\n\n                    const curr_tmpl = stickers_tmpl[faces[i][idx] * 9 + idx]\n                    const sticker = curr_tmpl.clone()\n                    const stickerwrap = stickerwrap_tmpl.clone()\n\n                    const eps = 0.05\n                    sticker.position.copy(new THREE.Vector3(x * 2, 3, z * 2))\n                    stickerwrap.position.copy(new THREE.Vector3(x * 2, 3 - eps, z * 2))\n\n                    if (facesToReveal.indexOf(i) > -1) { // (i === 5 && mode === \"UF\")) {\n                        const stickerhint = hint_mesh[faces[i][idx]].clone()\n                        stickerhint.position.copy(new THREE.Vector3(x * 2, 3 + hintDistance, z * 2))\n                        cubie.add(stickerhint)\n                    }\n                    if (enableBorder)\n                        cubie.add(stickerwrap)\n\n                    cubie.add(sticker)\n                }\n\n            }\n            cube.add(cubie)\n        }\n        cube.scale.set(1 / 3, 1 / 3, 1 / 3)\n        return cube\n    }\n\n    let cubeG = drawCube(cube, colorScheme)\n    scene.add(cubeG)\n\n    const render = () => {\n        controls.update();\n        renderer.render(scene, camera)\n    }\n    render()\n\n    let frameID = -1\n    const animate = () => {\n        frameID = requestAnimationFrame(animate)\n        renderer.render(scene, camera)\n    }\n    animate()\n\n    const updateCubeAndColor = (cube: FaceletCubeT, colorScheme: Array<string>) => {\n        scene.remove(cubeG)\n        cubeG = drawCube(cube, colorScheme)\n        scene.add(cubeG)\n        renderer.render(scene, camera)\n        return renderer\n    }\n\n    const cleanup = () => {\n        geos.forEach(g => g.dispose())\n        materials_border.dispose()\n        geo_border.dispose()\n        scene.remove(cubeG)\n        cancelAnimationFrame(frameID)\n    }\n    return {\n        updateCubeAndColor,\n        getRenderer: () => renderer,\n        cleanupFunc: cleanup,\n        renderControls: render\n    }\n    //let defaultColorScheme = [ 0x00ff00, 0x0000ff, 0xff0000,0xff8800,0xffff00, 0xffffff]\n}\n\nlet drawCube = (function(){\n    let config_cache : ConfigT | null = null\n    let painter : Painter | null = null\n    let func = (cube: FaceletCubeT, config: ConfigT) => {\n        if (config_cache === null) {\n            painter?.cleanupFunc()\n\n            painter = redraw_cube(cube, config)\n            config_cache = config\n            return painter\n        }\n        else if (config.width === config_cache.width && config.height === config_cache.height &&\n            arrayEqual(config.faces || [], config_cache.faces || []) && config.theme === config_cache.theme &&\n            config.hintDistance === config_cache.hintDistance && config.enableControl === config_cache.enableControl) {\n\n            painter?.updateCubeAndColor(cube, config.colorScheme)\n            config_cache = config\n            return painter!\n        } else {\n            painter?.cleanupFunc()\n            painter = redraw_cube(cube, config)\n            config_cache = config\n            return painter!\n        }\n    }\n    return func\n})\n\ntype Painter = {\n    updateCubeAndColor: (cube: FaceletCubeT, scheme: Array<string>) => THREE.WebGLRenderer,\n    getRenderer: () => THREE.WebGLRenderer,\n    cleanupFunc: () => void,\n    renderControls: () => void\n\n}\n\nfunction CubeSim(props: Config) {\n    const mount = React.useRef<HTMLDivElement | null>(null)\n    let { width, height, colorScheme, facesToReveal, hintDistance, theme} = props\n    let cubePainter = React.useMemo(drawCube, [])\n\n\n    const gt_xs = useMediaQuery(useTheme().breakpoints.up('sm'));\n    const enableControl = gt_xs\n\n    let painter = cubePainter(props.cube, {\n            width, height, colorScheme, faces: facesToReveal, theme, hintDistance, enableControl })\n\n    useEffect( () => {\n        let dom = mount.current!\n        dom.appendChild(painter.getRenderer().domElement) //renderer.domElement)\n        return () => {\n            dom.removeChild(painter.getRenderer().domElement)\n        }\n    })\n\n    return <div\n        ref={mount}\n        style={{ width: props.width, height: props.height, zIndex: 1 }}\n    />;\n}\n\nexport default CubeSim","import { MoveT, OriChg, PermChg, StickerT, StickerExtT, CornerCoord, EdgeCoord, cstimer_corners_coord, cstimer_edges_coord, CenterCoord, centers_coord } from \"./Defs\";\nimport { u, d, f, b, l, r, m, e, s} from \"./Defs\";\nimport { FaceletT, FaceletCubeT, corners_coord, edges_coord, u_face, f_face, color_map } from \"./Defs\";\nimport { Typ, Face, C, E, T, U, D, F, B, L, R } from \"./Defs\";\nimport { rand_int, rand_shuffle, getParity, rand_choice, arrayEqual } from \"./Math\";\n\nconst C_MOD = 3;\nconst E_MOD = 2;\nconst T_MOD = 1;\n\nexport class CubieCube {\n    cp: number[] = [];\n    co: number[] = [];\n    ep: number[] = [];\n    eo: number[] = [];\n    tp: number[] = [];\n    // The addition of tp is not necessary, but helps us deal with slice moves in Roux during search and simcube.\n    deserialize(s: string) {\n        let obj = JSON.parse(s)\n        this.set(obj);\n        return this\n    }\n    serialize() {\n        let {cp, co, ep, eo, tp} = this\n        return JSON.stringify({cp, co, ep, eo, tp});\n    }\n\n    Id() : CubieCube {\n        this.set({\n            cp: [0, 1, 2, 3, 4, 5, 6, 7],\n            co: [0, 0, 0, 0, 0, 0, 0, 0],\n            ep: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\n            eo: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            tp: [0, 1, 2, 3, 4, 5]\n        })\n        return this\n    }\n    clone() : CubieCube {\n        return new CubieCube({\n            cp: [...this.cp],\n            co: [...this.co],\n            ep: [...this.ep],\n            eo: [...this.eo],\n            tp: [...this.tp]\n        })\n    }\n    constructor(value?: {cp: number[], co: number[], ep: number[], eo: number[], tp?: number[]} | CubieCube) {\n        if (value instanceof CubieCube) {\n            this.set({\n                cp: value.cp, co: value.co, ep: value.ep, eo: value.eo, tp: value.tp\n            })\n        }\n        else if (value) {\n            this.cp = value.cp\n            this.co = value.co\n            this.ep = value.ep\n            this.eo = value.eo\n            this.tp = value.tp || [0, 1, 2, 3, 4, 5] // UD FB LR\n        } else {\n            this.Id()\n        }\n    }\n    set(value: {cp?: number[], co?: number[], ep?: number[], eo?: number[], tp?: number[]} | CubieCube) {\n        this.cp = value.cp || this.cp\n        this.co = value.co || this.co\n        this.ep = value.ep || this.ep\n        this.eo = value.eo || this.eo\n        this.tp = value.tp || this.tp\n    }\n    _apply_partial(o: Array<number>, p: Array<number>, oc: Array<OriChg>, pc: Array<PermChg>, mod: number) {\n        let o_new = [...o];\n        let p_new = [...p];\n        console.assert(oc.length === pc.length)\n\n        for (let i = 0; i < oc.length; i++) {\n            //let [src, dst] = pc[i];\n            let src = pc[i][0], dst = pc[i][1];\n            p_new[dst] = p[src];\n            o_new[dst] = (o[src] + oc[i]) % mod;\n        }\n        return [o_new, p_new]\n    }\n\n    // all side-effect-less\n    apply_one(move: Move) {\n        let [co, cp] = this._apply_partial(this.co, this.cp, move.coc, move.cpc, C_MOD)\n        let [eo, ep] = this._apply_partial(this.eo, this.ep, move.eoc, move.epc, E_MOD)\n        let toc = Array(move.tpc.length).fill(0)\n        let [, tp] = this._apply_partial([0, 0, 0, 0, 0, 0], this.tp, toc, move.tpc, T_MOD)\n        return new CubieCube({ co, cp, eo, ep, tp })\n    }\n\n    apply(move: Move | Array<Move> | MoveSeq | string): CubieCube {\n        if (Array.isArray(move) || move instanceof MoveSeq) {\n            let moves = Array.isArray(move) ? move : move.moves\n            let cube = this.clone()\n            for (let i = 0; i < moves.length; i++) {\n                cube = cube.apply_one(moves[i])\n            }\n            return cube\n        } else if (typeof move === \"string\") {\n            return this.apply(new MoveSeq(move))\n        }\n        else {\n            return this.apply_one(move)\n        }\n    }\n\n    static _rotate_coord(fs: Face[]) {\n        let faces = [...fs] as Face[]\n        let last_face = faces[faces.length - 1];\n        for (let i = faces.length - 1; i > 0; i--) {\n            faces[i] = faces[i - 1];\n        }\n        faces[0] = last_face\n        return faces\n    }\n    static _backward_rotate_coord(fs: Face[]){\n        let faces = [...fs] as Face[]\n        let first_face = faces[0]\n        for (let i = 0; i < faces.length - 1; i++) {\n            faces[i] = faces[i + 1];\n        }\n        faces[faces.length - 1] = first_face\n        return faces\n    }\n\n    // facelet mapping: from position to piece\n    _to_facelet_mapping(corners_coord: CornerCoord[], edges_coord: EdgeCoord[], centers_coord: CenterCoord[]) {\n        let facelet_mapping : [Face[], Face[]][]= []\n\n        for (let i = 0; i < 8; i++) {\n            let pos = corners_coord[i] as Face[]\n            let piece = corners_coord[this.cp[i]] as Face[]\n\n            for (let j = 0; j < this.co[i];j++) {\n                piece = CubieCube._rotate_coord(piece)\n            }\n            facelet_mapping.push([pos, piece])\n        }\n        for (let i = 0; i < 12; i++) {\n            let pos = edges_coord[i] as Face[]\n            let piece = edges_coord[this.ep[i]] as Face[]\n            for (let j = 0; j < this.eo[i];j++) {\n                piece = CubieCube._rotate_coord(piece)\n            }\n            facelet_mapping.push([pos, piece])\n        }\n        for (let i = 0; i<6;i++) {\n            let pos = centers_coord[i]\n            let piece = centers_coord[this.tp[i]] as Face[]\n            facelet_mapping.push([ pos, piece])\n        }\n        return facelet_mapping\n    }\n\n    _from_facelet_mapping (fm: [Face[], Face[]][], custom_corners_coord: CornerCoord[], custom_edges_coord: EdgeCoord[], custom_centers_coord: CenterCoord[] ) {\n        let cube = new CubieCube()\n\n        let match_pos_piece = (pos: Face[], piece: Face[], coord: Face[][], parity: number) : [number, number, number]=> {\n            let expected = new Map(coord.map( (x, i) => [x.toString(), i]))\n            let ori = 0\n            while (!expected.has(pos.toString())) {\n                pos = CubieCube._backward_rotate_coord(pos)\n                ori--;\n                if (ori <= -parity) break;\n            }\n            while (!expected.has(piece.toString())) {\n                piece = CubieCube._backward_rotate_coord(piece)\n     \n                ori++;\n                if (ori >= 10) {\n                    console.warn(\"can't match piece\", piece, expected)\n                    break\n                }\n            }\n\n            ori = (ori + parity) % parity;\n            return [ori, expected.get(pos.toString())!, expected.get(piece.toString())! ]\n        }\n\n        for (let coord_pair of fm) {\n            let pos = coord_pair[0], piece = coord_pair[1]\n            let coord : Face[][] = (pos.length === 2) ? custom_edges_coord : \n                        (pos.length === 3) ? custom_corners_coord :\n                         custom_centers_coord ;\n            let [newOri,newpos,newPerm] = match_pos_piece(pos, piece, coord, pos.length);\n\n            //console.log( pp([pos, piece]), [newOri, newpos,newPerm])\n            if (pos.length === 2) {\n                cube.eo[newpos] = newOri;\n                cube.ep[newpos] = newPerm;\n            } else if (pos.length === 3){\n                cube.co[newpos] = newOri;\n                cube.cp[newpos] = newPerm;\n            } else {\n                cube.tp[newpos] = newPerm;\n            }\n        }\n        return cube\n    }\n\n    to_cstimer_cube() {\n        let facelet_mapping = this._to_facelet_mapping(corners_coord, edges_coord, centers_coord)\n        let cube = this._from_facelet_mapping(facelet_mapping, cstimer_corners_coord, cstimer_edges_coord, centers_coord)\n        return cube\n    }\n\n    is_solveable() {\n        if (this.tp[0] !== 0) {\n            this.apply(new MoveSeq(\"M2\")) // assuming lse\n        }\n        let perm_correct = (getParity(this.cp) + getParity(this.ep)) % 2 === 0\n        let ori_correct = (this.co.reduce((x, y) => x + y, 0) % 3 === 0) && (this.eo.reduce((x, y) => x + y, 0) % 2 === 0)\n        return perm_correct && ori_correct\n    }\n\n    changeBasis(s: MoveSeq) {\n        // only take x and y for now\n        let facelet_mapping = this._to_facelet_mapping(corners_coord, edges_coord, centers_coord)\n\n        let transformed_mapping = s.moves.reduce( (mapping, move) : [Face[], Face[]][] => {\n            let face_mapping = Object.fromEntries(move.tpc)\n            //console.log(\"applying face mapping for \", move.name, face_mapping)\n            //console.log(\"before\", pp(mapping))\n            let result = mapping.map( ([face_pos, face_target]) => \n                [face_pos.map(f => face_mapping[f] ?? f ),\n                 face_target.map(f => face_mapping[f] ?? f) ]\n            )\n            //console.log('after', pp(result))\n            return result as any \n        } , facelet_mapping)\n        //console.log(s.toString(), facelet_mapping, transformed_mapping)\n        let cube = this._from_facelet_mapping(transformed_mapping, corners_coord, edges_coord, centers_coord)\n        return cube\n        //let cube = this._from_facelet_mapping(facelet_mapping, corners_coord, edges_coord, centers_coord)\n    }\n}\n\n\n/* Moves */\n/* We will generate all the moves based on the base moves and rotations, and return them in an array */\nexport class Move {\n    cpc: Array<PermChg> = [];\n    coc: Array<OriChg> = [];\n    epc: Array<PermChg> = [];\n    eoc: Array<OriChg> = [];\n    tpc: Array<PermChg> = [];\n    name: string = \"\";\n    constructor(arg?: Array<Move> | CubieCube | Move | MoveT, name?: string) {\n        if (Array.isArray(arg)) {\n            this.from_moves(arg, name!)\n        } else if (arg instanceof Move){\n            this.cpc = [...arg.cpc]\n            this.coc = [...arg.coc]\n            this.epc = [...arg.epc]\n            this.eoc = [...arg.eoc]\n            this.tpc = [...arg.tpc]\n            this.name = name!\n        } else if (arg instanceof CubieCube) {\n            this.from_cube(arg, name!)\n        } else if (arg) {\n            this.set(arg)\n        }\n    }\n    set(move: Move | MoveT) {\n        this.cpc = move.cpc\n        this.coc = move.coc\n        this.epc = move.epc\n        this.eoc = move.eoc\n        this.tpc = move.tpc\n        this.name = move.name\n    }\n    from_cube(cube: CubieCube, name: string) {\n        let get_change = (p: Array<number>, o: Array<number>, acc_p: Array<PermChg>, acc_o: Array<OriChg>) => {\n            for (let i = 0; i < p.length; i++) {\n                if (i === p[i] && o[i] === 0) {\n                } else {\n                    acc_p.push([p[i], i]);\n                    acc_o.push(o[i]);\n                }\n            }\n        }\n        get_change(cube.cp, cube.co, this.cpc, this.coc);\n        get_change(cube.ep, cube.eo, this.epc, this.eoc);\n        get_change(cube.tp, [0, 0, 0, 0, 0, 0], this.tpc, []);\n        this.name = name\n        return this\n    }\n    from_moves (moves: Move[], name: string) {\n        this.from_cube(new CubieCube().apply(moves), name)\n        return this\n    }\n    clone() {\n        return new Move(this, this.name)\n    }\n    static make_rot_set(move: Move): Array<Move> {\n        return [move,\n            new Move().from_moves([move, move], move.name + \"2\"),\n            new Move().from_moves([move, move, move], move.name + \"'\"),\n        ]\n    }\n\n    static generate_base_moves = () => {\n        let make_rot_set = Move.make_rot_set\n        let us = make_rot_set(new Move(u));\n        let fs = make_rot_set(new Move(f));\n        let rs = make_rot_set(new Move(r));\n        let ls = make_rot_set(new Move(l));\n        let ds = make_rot_set(new Move(d));\n        let bs = make_rot_set(new Move(b));\n        let ms = make_rot_set(new Move(m));\n        let es = make_rot_set(new Move(e));\n        let ss = make_rot_set(new Move(s));\n\n        let rw = new Move([new Move(r), ms[2]], \"r\")\n        let rws = make_rot_set(rw)\n        let lw = new Move([new Move(l), new Move(m)], \"l\")\n        let lws = make_rot_set(lw)\n        let uw = new Move([new Move(u), new Move(e)], \"u\")\n        let uws = make_rot_set(uw)\n\n        let x = new Move([new Move(r), ls[2], ms[2]], \"x\")\n        let xs = make_rot_set(x)\n        let y = new Move([new Move(u), new Move(e), ds[2]], \"y\")\n        let ys = make_rot_set(y)\n        let z = new Move([x, y, x, x, x], \"z\")\n        let zs = make_rot_set(z)\n\n        let id = new Move(new CubieCube(), \"id\")\n        let moves = [\n            id,\n            us, fs, rs, ls, ds, bs, ms, es, ss,\n            xs, ys, zs,\n            rws, lws, uws\n        ].flat()\n        let moves_dict: { [key: string]: Move } = Object.create({})\n        moves.forEach(m => moves_dict[m.name] = m)\n        return moves_dict\n    }\n    static all: {[key: string]: Move} = Move.generate_base_moves();\n\n    inv(): Move {\n        let name: string\n        switch (this.name[this.name.length - 1]) {\n            case \"'\": name = this.name.slice(0, this.name.length - 1); break\n            case \"2\": name = this.name; break\n            default: name = this.name + \"'\"\n        }\n        return Move.all[name]\n    }\n\n    toString() {\n        return this.name\n    }\n}\n\n\nexport class MoveSeq {\n    moves: Move[] = [];\n\n    constructor(moves: Move[] | string) {\n        if (typeof moves === \"string\") {\n            this.parse(moves);\n        } else {\n            this.moves = moves\n        }\n    }\n\n    static quarterMap : {[key: string]: string} = ({\n        \"U2\": \"U'\",\n        \"R2\": \"R'\",\n        \"r2\": \"r'\",\n        \"M2\": \"M'\",\n        \"L2\": \"L\",\n    });\n    toQuarter() {\n        let nm : Move[] = []\n        for (let i = 0 ; i < this.moves.length; i++) {\n            let m = this.moves[i]\n            if (m.name[1] === \"2\") {\n                let k = MoveSeq.quarterMap[m.name] || m.name[0]\n                nm.push(Move.all[ k ])\n                nm.push(Move.all[ k ])\n            } else {\n                nm.push(m)\n            }\n        }\n        return new MoveSeq(nm)\n    }\n\n    static _combine(move1: Move, move2: Move) : MoveSeq {\n        const getCnt = (name : string) => {\n            if (name.length === 1) return 1\n            return name[1] === \"2\" ? 2 : 3\n        }\n        const getStr = (cnt : number) => {\n            return (cnt === 1) ? \"\" : (cnt === 2 ? \"2\" : \"'\")\n        }\n        if (move1.name[0] === move2.name[0]) {\n            let cnt = (getCnt(move1.name) + getCnt(move2.name)) % 4\n            if (cnt === 0) return new MoveSeq([])\n            else return new MoveSeq([ Move.all[move1.name[0] + getStr(cnt)] ])\n        } else {\n            return new MoveSeq([move1, move2])\n        }\n    }\n\n    remove_setup() {\n        let rotset = new Set([\"x\", \"x'\", \"x2\", \"y\", \"y'\", \"y2\", \"z\", \"z'\", \"z2\"]);\n        while (this.moves.length > 0 && rotset.has(this.moves[0].name)) {\n            this.moves.shift()\n        }\n        return this\n    }\n\n    parse_line(str: string) {\n        let tokens = []\n        let token = \"\"\n        let comment_idx = str.search(/\\/\\//)\n        if (comment_idx > -1) str = str.slice(0, comment_idx)\n        for (let i = 0; i < str.length; i++) {\n            let ch = str[i]\n            if (ch === '2' || ch === '\\'') {\n                if (token.length === 1) {\n                    token += str[i];\n                    tokens.push(token)\n                    token = \"\"\n                }\n            } else if (ch === ' ') {\n                if (token.length > 0) {\n                    tokens.push(token); token = \"\";\n                }\n            } else {\n                const ord = ch.charCodeAt(0)\n                if ( (65 <= ord && ord < 65 + 26) || (97 <= ord && ord < 97 + 26)) {\n                    if (token.length > 0) {\n                        tokens.push(token)\n                        token = \"\"\n                    }\n                    token += str[i]\n                }\n            }\n        }\n        let moves = []\n        if (token.length > 0) tokens.push(token);\n        for (let token of tokens) {\n            let move = Move.all[token]\n            if (move) {\n                moves.push(move)\n            }\n        }\n        return moves\n    }\n    parse(str: string) {\n        this.moves = str.split(\"\\n\").map(x => this.parse_line(x)).flat()\n        return this\n    }\n\n    collapse() : MoveSeq {\n        let newMoves : Move[] = []\n        let moves = this.moves\n        while (moves.length > 0) {\n            const nextMove = moves.shift()!\n            if (newMoves.length === 0) {\n                newMoves.push(nextMove)\n            } else {\n                const move = newMoves.pop()!\n                const combined = MoveSeq._combine(move, nextMove)\n                for (let m of combined.moves)\n                    newMoves.push(m)\n            }\n        }\n        return new MoveSeq(newMoves);\n    }\n\n    inv() {\n        let moves: Move[] = this.moves.slice(0).reverse().map(x => x.inv()).flat()\n        return new MoveSeq(moves)\n    }\n\n    slice(n: number) {\n        let moves: Move[] = this.moves.slice(0, n)\n        return new MoveSeq(moves)\n    }\n\n    static add_auf(moves: Array<Move>, auf_moves?: Array<Move | MoveSeq>) {\n        auf_moves = auf_moves || [ Move.all[\"id\"], Move.all[\"U\"], Move.all[\"U'\"], Move.all[\"U2\"]]\n        let auf_move = rand_choice(auf_moves)\n        if (auf_move instanceof MoveSeq) {\n            moves.concat(auf_move.moves)\n        } else {\n            moves.push(auf_move)\n        }\n    }\n\n    toString(useMetric?: string) {\n        return this.moves.map(m => m.toString()).join(\" \") + \" \" + (useMetric ? \"(\" + this.moves.length + \")\" : \"\")\n    }\n}\n\n/* Faces */\nlet FaceletCube = function () {\n    let mult_move = (face: FaceletT, move: Move): FaceletT => {\n        let face_new: FaceletT = [...face]\n        let mod_for_typ = (typ: Typ) => {\n            switch (typ) {\n                case C: return 3;\n                case E: return 2;\n                case T: return 1\n            }\n        }\n        let work = (p: PermChg, o: number, typ: Typ) => {\n            let mod = mod_for_typ(typ)\n            let [p1, p2] = p\n            for (let i = 0; i < face.length; i++) {\n                let [p_curr, o_curr, typ_curr] = face[i];\n                if (typ_curr === typ && p_curr === p1) {\n                    face_new[i] = [p2, (o_curr + o) % mod, typ]\n                }\n            }\n        }\n        for (let i = 0; i < move.cpc.length; i++) {\n            work(move.cpc[i], move.coc[i], C)\n        }\n        for (let i = 0; i < move.epc.length; i++) {\n            work(move.epc[i], move.eoc[i], E)\n        }\n        for (let i = 0; i < move.tpc.length; i++) {\n            work(move.tpc[i], 0, T)\n        }\n        return face_new\n    }\n    let color_of_c = (p: number, o1: number, o2: number) =>\n    corners_coord[p][(3 - o1 + o2) % 3];\n    let color_of_e = (p: number, o1: number, o2: number) =>\n        edges_coord[p][(2 - o1 + o2) % 2];\n    let color_of_t = (p: number) => [U, D, F, B, L, R][p]\n\n    let color_of_sticker = (cube: CubieCube, sticker: StickerT) => {\n        let [p, o, typ] = sticker\n        if (typ === C) {\n            return color_of_c(cube.cp[p], cube.co[p], o)\n        } else if (typ === E) {\n            return color_of_e(cube.ep[p], cube.eo[p], o)\n        } else if (typ === T) {\n            return color_of_t(cube.tp[p])\n        } else {\n            throw Error(\"unidentified type \" + typ)\n        }\n    }\n\n    let from_cubie_partial = (cube: CubieCube, facelet: FaceletT) => {\n        return facelet.map(s => color_of_sticker(cube, s))\n    }\n    let from_cubie_partial_masked = (cube: CubieCube, facelet: FaceletT, mask: Mask) => {\n        return facelet.map(([p, o, typ]) => {\n            if (typ === C) {\n                if (mask.cp[cube.cp[p]] === 1)\n                    return color_of_c(cube.cp[p], cube.co[p], o)\n                else\n                    return Face.X\n            } else if (typ === E) {\n                if (mask.ep[cube.ep[p]] === 1)\n                    return color_of_e(cube.ep[p], cube.eo[p], o)\n                else\n                    return Face.X\n            } else if (typ === T) {\n                if (mask.tp && mask.tp[cube.tp[p]] === 0)\n                    return Face.X\n                else\n                    return color_of_t(cube.tp[p])\n            } else {\n                throw Error(\"unidentified type \" + typ)\n            }\n        })\n    }\n\n    let moves = Move.all\n    let generate_base_facelets = () => {\n        let d_face = mult_move(f_face, moves[\"x'\"])\n        let l_face = mult_move(f_face, moves[\"y\"])\n        let r_face = mult_move(f_face, moves[\"y'\"])\n        let b_face = mult_move(f_face, moves[\"y2\"])\n        return {\n            d_face, l_face, r_face, b_face\n        }\n    }\n    let { d_face, l_face, r_face, b_face } = generate_base_facelets()\n\n    let from_cubie = (cube: CubieCube, mask?: Mask): FaceletCubeT => {\n        //console.log(\"converting from cube\", cube)\n        let faces = [u_face, d_face, f_face, b_face, l_face, r_face]\n        if (mask)\n            return faces.map((facelet) => from_cubie_partial_masked(cube, facelet, mask))\n        else\n            return faces.map((facelet) => from_cubie_partial(cube, facelet))\n    }\n\n    let to_unfolded_cube_str = (faceletCube: FaceletCubeT): String => {\n        let face_count = [0, 0, 0, 0, 0, 0];\n        let str_face_map: { [key: string]: Face } = {\n            \"U\": U, \"D\": D, \"F\": F, \"B\": B, \"L\": L, \"R\": R\n        }\n        let face_str_map = \"UDFBLR\"\n        let color_cube = \"\"\n        for (let i = 0; i < color_map.length; i++) {\n            let face_char = color_map[i];\n            if (str_face_map.hasOwnProperty(face_char)) {\n                let face: number = str_face_map[face_char] as number;\n                let count = face_count[face];\n                let color = faceletCube[face][count]\n                color_cube += face_str_map[color]\n                face_count[face] += 1;\n            } else {\n                color_cube += color_map[i];\n            }\n        }\n        return color_cube;\n    }\n\n\n    return {\n        from_cubie,\n        to_unfolded_cube_str,\n        color_of_sticker,\n        faces: {\n            u_face, d_face, l_face, r_face, f_face, b_face\n        }\n    }\n}()\n\ntype Mask = {\n    co?: number[],\n    eo?: number[],\n    tp?: number[],\n    cp: number[],\n    ep: number[],\n}\nexport type MaskT = Mask;\nfunction mask_copy (m: Mask) {\n    return {\n        co: m.co && [...m.co],\n        eo: m.eo && [...m.eo],\n        tp: m.tp && [...m.tp],\n        cp: [...m.cp],\n        ep: [...m.ep]\n    }\n}\n\nconst lse_mask: Mask = {\n    cp: [1, 1, 1, 1, 1, 1, 1, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1],\n}\n\nconst lse_4c_mask: Mask = {\n    cp: [1, 1, 1, 1, 1, 1, 1, 1],\n    ep: [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1],\n    eo: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n}\n\nconst solved_mask : Mask = {\n    cp: [1, 1, 1, 1,  1, 1, 1, 1],\n    ep:[1, 1, 1, 1,  1, 1, 1, 1, 1, 1, 1, 1],\n}\nconst empty_mask : Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n}\nconst dl_solved_mask : Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]\n}\nconst bl_solved_mask : Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]\n}\nconst fs_back_mask: Mask = {\n    cp: [0, 0, 0, 0, 0, 1, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\n\nconst fs_front_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\n\nconst fb_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst zhouheng_mask: Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst fbdr_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst ss_front_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 0, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst ss_back_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 1, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst sb_mask : Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 1, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst cmll_mask : Mask = {\n    cp: [1, 1, 1, 1, 1, 1, 1, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1],\n    tp: [0, 0, 0, 0, 1, 1]\n}\n\nlet CubeUtil = (() => {\n    let is_cube_solved = (cube: CubieCube) => {\n        let id = new CubieCube()\n        return arrayEqual(cube.co, id.co) &&\n               arrayEqual(cube.eo, id.eo) &&\n               arrayEqual(cube.cp, id.cp) &&\n               arrayEqual(cube.ep, id.ep)\n    }\n\n    let is_solved = (cube: CubieCube, mask: Mask) => {\n        let {co: co_, cp, eo: eo_, ep, tp: tp_} = mask\n        let co = co_ || cp\n        let eo = eo_ || ep\n        let tp = tp_ || Array(6).fill(1)\n        let c_true = co.every( (_, i) =>  (cp[i] === 0 || cube.cp[i] === i) \n                        && (co[i] === 0 || cube.co[i] === 0) )\n        if (!c_true) return false\n        let e_true = eo.every( (_, i) =>  (ep[i] === 0 || cube.ep[i] === i) \n        && (eo[i] === 0 || cube.eo[i] === 0) )\n        if (!e_true) return false\n        let t_true = tp.every( (_, i) =>  (tp[i] === 0 || cube.tp[i] === i) )\n        return t_true\n    }\n\n    function ext(stickers: StickerT[], f: Face) : StickerExtT[] {\n        return stickers.map(x => {\n            let [a, b, c] = x;\n            return [a,b,c,f]\n        })\n    }\n\n    let { u_face, d_face, l_face, r_face, f_face, b_face } = FaceletCube.faces\n    let stickers = [ ...ext(u_face, U), ...ext(d_face, D),\n        ...ext(l_face, L), ...ext(r_face, R), ...ext(f_face,F),  ...ext(b_face, B)]\n\n    let find_pairs = function() {\n        // enumerate each sticker\n        let edge_stickers = stickers.filter(s => s[2] === Typ.E)\n        let corner_stickers = stickers.filter(s => s[2] === Typ.C)\n\n        let ep_stickers : StickerExtT[][] = Array(12).fill(0).map(_ => Array(0))\n        edge_stickers.map(s => ep_stickers[s[0]].push(s) )\n\n        let cp_stickers : StickerExtT[][] = Array(8).fill(0).map(_ => Array(0))\n        corner_stickers.map(s => cp_stickers[s[0]].push(s))\n\n        const epcp_pairs : [number, number][] = []\n        for (let e = 0; e < 12; e++) {\n            for (let c = 0; c < 8; c++) {\n                let efs = ep_stickers[e]\n                let cfs = cp_stickers[c]\n\n                let match = 0;\n                efs.forEach( (e) => {\n                    cfs.forEach( (c) => { if (e[3] === c[3]) match++ })\n                })\n                if (match === 2) {\n                    epcp_pairs.push( [e, c] )\n                }\n            }\n        }\n\n\n        let get_color = (cube: CubieCube, s: StickerExtT) => {\n            return FaceletCube.color_of_sticker(cube, [s[0], s[1], s[2]] )\n        }\n        let func = (cube: CubieCube) => {\n            // now we process the cube\n            let connected_pairs : [number, number][]= []\n            //console.log(\"All neighboring pairs \", epcp_pairs)\n            for (let [ep, cp] of epcp_pairs) {\n                let efs = ep_stickers[ep]\n                let cfs = cp_stickers[cp]\n                let cnt = 0;\n                efs.forEach( (e) => {\n                    const c = cfs.filter( (c) => e[3] === c[3])[0]\n                    if (get_color(cube, e) === get_color(cube, c)) cnt++;\n                })\n                if (cnt === 2) {\n                    connected_pairs.push([ep, cp])\n                }\n            }\n            return connected_pairs\n        }\n        return func\n    }()\n\n    let is_mask_solved2 = (cube: CubieCube, { co, eo, cp, ep }: Mask, premove: (Move | Move[])[]) => {\n        //let moves = [ [], Move.all[\"U\"], Move.all[\"U'\"], Move.all[\"U2\"] ]\n        co = co || cp\n        eo = eo || ep\n        for (let move of premove) {\n            let cube1 = cube.apply(move)\n            let solved = true\n            for (let i = 0; i < 8 && solved; i++) {\n                if ((co[i] && cube1.co[i] !== 0)\n                    || (cp[i] && cube1.cp[i] !== i)) {\n                    solved = false;\n                }\n            }\n            for (let i = 0; i < 12 && solved; i++) {\n                if ((eo[i] && cube1.eo[i] !== 0)\n                    || (ep[i] && cube1.ep[i] !== i)) {\n                    solved = false;\n                }\n            }\n            if (solved) return true;\n        }\n        return false;\n    }\n\n    const u_premove = [[], Move.all[\"U\"], Move.all[\"U'\"], Move.all[\"U2\"]]\n    const m2_premove = [[], Move.all[\"M2\"]]\n\n    let is_cmll_solved = (cube: CubieCube) => {\n        return is_mask_solved2(cube, lse_mask, u_premove)\n    }\n\n    let get_random_with_mask = ({ co, eo, cp, ep }: Mask): CubieCube => {\n        co = co || cp\n        eo = eo || ep\n        // get_random -- figure out which masks are 0, and assign random to these\n        let random_ori = (ori_mask: number[], typ: Typ) => {\n            let ori = Array(ori_mask.length).fill(0)\n            let mod = (typ === C) ? 3 : 2\n            let sum: number\n            do {\n                sum = 0\n                for (let i in ori_mask) {\n                    if (ori_mask[i] === 0) {\n                        ori[i] = rand_int(mod)\n                        sum += ori[i]\n                    }\n                }\n            } while (sum % mod > 0)\n            return ori\n        }\n        let random_perm = (perm_mask: number[]) => {\n            let perm: number[] = Array(perm_mask.length).fill(0)\n            let undecided: number[] = []\n            for (let i = 0; i < perm_mask.length; i++) {\n                if (perm_mask[i] === 0) {\n                    undecided.push(i)\n                } else {\n                    perm[i] = i\n                }\n            }\n            rand_shuffle(undecided)\n            for (let i = 0, cnt = 0; i < perm_mask.length; i++) {\n                if (perm_mask[i] === 0) {\n                    perm[i] = undecided[cnt]\n                    cnt += 1\n                }\n            }\n            return perm\n        }\n        let cp_rand, ep_rand, par\n        do {\n            [cp_rand, ep_rand] = [random_perm(cp), random_perm(ep)]\n            par = (getParity(cp_rand) + getParity(ep_rand)) & 1\n        } while (par > 0)\n\n        return new CubieCube({\n            co: random_ori(co, C),\n            cp: cp_rand,\n            eo: random_ori(eo, E),\n            ep: ep_rand,\n        })\n    }\n\n    let get_random_lse = (): CubieCube => {\n        let cube = get_random_with_mask(lse_mask)\n        return cube.apply(rand_choice(m2_premove))\n    }\n\n \n\n    return {\n        is_cmll_solved,\n        is_solved,\n        get_random_lse,\n        get_random_with_mask,\n        is_cube_solved,\n        find_pairs,\n        stickers\n    }\n})()\n\nexport abstract class Storage {\n    abstract name: string;\n    abstract serialize(): string;\n    abstract deserialize(x: string): void;\n    abstract _setDefault(): void;\n    save() {\n        window.localStorage.setItem(this.name, this.serialize());\n    }\n    load() {\n        const item = window.localStorage.getItem(this.name)\n        if (item) this.deserialize(item);\n        else this._setDefault();\n    }\n}\n\nexport class ColorScheme extends Storage {\n    // UDFBLR\n    // specify the colors for uf\n    // how to do this?\n    static default_colors = {\n        \"G\": \"#00b500\",\n        \"B\": \"#0000ff\",\n        \"R\": \"#ff0000\",\n        \"O\": \"#ff8800\",\n        \"Y\": \"#ffff00\",\n        \"W\": \"#ffffff\",\n        \"X\": \"#cccccc\"\n    }\n    name = \"colorscheme\";\n    colors: {[key:string]:string} = {};\n    // UDFBLR from UF\n    // INFERR UFR from UF?\n    static valid_schemes = [\n        \"WYGBOR\",\n        \"WYBGRO\",\n        \"WYROGB\",\n        \"WYORBG\",\n        \"YWGBRO\",\n        \"YWBGOR\",\n        \"YWROBG\",\n        \"YWORGB\",\n\n        \"GBWYRO\",\n        \"GBYWOR\",\n        \"GBROYW\",\n        \"GBORWY\",\n        \"BGWYOR\",\n        \"BGYWRO\",\n        \"BGROWY\",\n        \"BGORYW\",\n\n        \"ORWYGB\",\n        \"ORYWBG\",\n        \"ORGBYW\",\n        \"ORBGWY\",\n        \"ROWYBG\",\n        \"ROYWGB\",\n        \"ROGBWY\",\n        \"ROBGYW\",\n    ]\n    static valid_schemes_map = function() {\n        return new Map(ColorScheme.valid_schemes.map(x => [ x[0] + x[2], x]))\n    }();\n    constructor(suppressLoad?: boolean) {\n        super();\n        if (!suppressLoad) {\n            this.load();\n        }\n    }\n    toUserInput() {\n        return \"GBROYWX\".split('').map(x => this.colors[x])\n    }\n    set( colors:{[key:string]:string} | string[]) {\n        let newScheme = new ColorScheme(true);\n        if (Array.isArray(colors)) {\n            colors.forEach( (color, i) => newScheme.colors[\"GBROYWX\"[i]] = color )\n        } else {\n            newScheme.colors = {...this.colors, ...colors};\n        }\n        newScheme.save();\n        return newScheme\n    }\n    setWithDefault() {\n        let newScheme = new ColorScheme(true);\n        newScheme._setDefault();\n        newScheme.save();\n        return newScheme\n    }\n    _setDefault() { this.colors = ColorScheme.default_colors; };\n    serialize() {\n        return JSON.stringify(this.colors)\n    }\n    deserialize(s: string) {\n        this.colors = JSON.parse(s)\n    }\n    getColorsForOri(s: string) {\n        let faces = (ColorScheme.valid_schemes_map.get(s) || ColorScheme.valid_schemes_map.get(\"WG\")) + \"X\";\n        let arr : string[] = []\n        for (let i = 0; i < faces.length; i++) {\n            arr.push(this.colors[faces[i]]!)\n        }\n        return arr\n    }\n}\n\nlet Mask = {\n    lse_mask, fs_back_mask, fs_front_mask, fbdr_mask, fb_mask, sb_mask, cmll_mask, ss_front_mask, ss_back_mask,\n    empty_mask, dl_solved_mask, bl_solved_mask, solved_mask, zhouheng_mask, lse_4c_mask,\n    copy: mask_copy\n}\n\nexport { FaceletCube, CubeUtil, Mask }\n","export type Selector = {\n    names: string[],\n    flags: number[],\n    kind: string,\n    label?: string\n}\n\nfunction getActiveNames(s : Selector) {\n    let ans = []\n    for (let i = 0; i < s.flags.length; i++) {\n        if (s.flags[i] === 1) {\n            ans.push(s.names[i])\n        }\n    }\n    return ans\n}\n\nfunction getActiveName(s : Selector) {\n    for (let i = 0; i < s.flags.length; i++) {\n        if (s.flags[i] === 1) {\n            return (s.names[i])\n        }\n    }\n    return \"\"\n}\n\nexport {getActiveNames, getActiveName}\n","import React from 'react'\n\nimport {\n    FormControlLabel, FormGroup, Button, makeStyles, Box,\n    FormControl, FormLabel, RadioGroup, Checkbox, Dialog, DialogTitle, DialogContent, DialogActions\n} from '@material-ui/core';\n\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport Radio from '@material-ui/core/Radio';\n\nimport { AppState, Config, Action } from '../Types';\nimport { Selector } from '../lib/Selector';\n\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(2),\n      backgroundColor: theme.palette.background.default\n    },\n    button: {\n      width: \"100%\",\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    infoColumn: {\n      color: theme.palette.background.paper\n    },\n    scrambleColumn: {\n      paddingLeft: theme.spacing(3)\n    },\n    textColumn: {\n      // color: \"black\",\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 138\n      },\n    },\n    fixedHeight: {\n      height: 250,\n    },\n    title : {\n        flexGrow: 1,\n    },\n    select: {\n      color: theme.palette.text.primary\n    },\n    selectLabel: {\n      color: theme.palette.text.secondary\n    }\n\n}))\n\nfunction SingleSelect(props: {state: AppState, dispatch: React.Dispatch<Action>,\n    select: (c: Config) => Selector, label?: string}) {\n    let { state, dispatch, select } = props\n    let { config } = state\n    let sel = select(config)\n    let classes = useStyles()\n\n    const handleChange = (evt: { target: { value: string; }; }) => {\n      let { names } = sel\n      let n = names.length\n      let new_flags = Array(n).fill(0)\n\n      for (let i = 0; i < names.length; i++) {\n        if (names[i] === evt.target.value) {\n          new_flags[i] = 1\n        }\n      }\n      let new_config = JSON.parse(JSON.stringify(config))\n      select(new_config).flags = new_flags\n      if (new_config.fbPairSolvedSelector.flags[1] === 1) {\n        new_config.fbdrSelector.flags = [1, 0, 0]\n      }\n      dispatch( { type: \"config\", content: new_config })\n    }\n\n    let radioValue = function() {\n      let { names, flags } = sel\n      for (let i = 0; i < flags.length; i++) {\n        if (flags[i] === 1) return names[i]\n      }\n      return \"\"\n    }()\n\n    let label = sel.label || props.label || \"\"\n    return (\n      <FormControl component=\"fieldset\" className={classes.select}>\n      <FormLabel component=\"legend\"className={classes.selectLabel} >{label}</FormLabel>\n      <RadioGroup aria-label=\"position\" name=\"position\" value={radioValue} onChange={handleChange} row>\n        {\n          sel.names.map(name => (\n            <FormControlLabel\n              key={name}\n              value={name}\n              control={<Radio color=\"primary\" />}\n              label={name}\n              labelPlacement=\"end\"\n            />\n          ))\n        }\n      </RadioGroup>\n    </FormControl>)\n  }\n\n\n\n  type MultiOptions = {\n    label?: string, noDialog?: boolean,\n    manipulators?: {name: string, enableIdx: number[]}[]\n  }\n\n\n  function MultiSelectContent(props: {state: AppState, dispatch: React.Dispatch<Action>, select: (c: Config) => Selector, options?: MultiOptions }) {\n    let { state, dispatch, select, options } = props\n    options = options || {}\n    let { config } = state\n\n    let sel = select(config)\n    const handleChange = (evt: { target: { value: string; checked: boolean }; }) => {\n      let { names, flags } = sel\n      let new_flags = [...flags]\n\n      for (let i = 0; i < names.length; i++) {\n        if (names[i] === evt.target.value) {\n          new_flags[i] = (evt.target.checked)? 1 : 0\n        }\n      }\n      let new_config = JSON.parse(JSON.stringify(config))\n      select(new_config).flags = new_flags\n      dispatch( { type: \"config\", content: new_config })\n    }\n\n    let makeBox = (name: string, checked: boolean) => {\n      return (\n      <FormControlLabel\n          control={\n          <Checkbox color=\"primary\" checked={checked} onChange={handleChange} />\n          }\n          label={name}\n          key={name}\n          value={name}\n      />)\n    }\n\n    const [manipChecked, setManipChecked] = React.useState< { [ name: string ]: boolean } >({})\n    let label = sel.label || options.label || \"\"\n    let makeManipulator = (manip: {name: string, enableIdx: number[]}) => {\n      let {name, enableIdx} = manip\n      let handleChange = (evt: { target: { value: string; checked: boolean }; }) => {\n        setManipChecked( {...manipChecked, [name] : evt.target.checked } )\n        let fillValue = (evt.target.checked);\n        let { flags } = sel\n        let new_flags = [...flags]\n        for (let i of enableIdx) {\n          new_flags[i] = fillValue ? 1 : 0;\n        }\n        let new_config = JSON.parse(JSON.stringify(config))\n        select(new_config).flags = new_flags;\n        dispatch( { type: \"config\", content: new_config } )\n      }\n      return (\n        <FormControlLabel\n        control={\n        <Checkbox color=\"primary\" checked={manipChecked[name]} onChange={handleChange} />\n        }\n        label={name}\n        key={name}\n        value={name}\n        />)\n    }\n    let manipulator_row = options.manipulators ?\n      (<FormGroup row>\n      {options.manipulators.map(x => makeManipulator(x)) }\n      </FormGroup>) : null;\n    const content = (\n      <React.Fragment>\n        {manipulator_row}\n        <FormGroup row>\n        {sel.names.map( (name, i) => makeBox(name, !!sel.flags[i]))}\n        </FormGroup>\n      </React.Fragment>\n    )\n    return {label, content}\n  }\n\n  function MultiSelect(props: {state: AppState, dispatch: React.Dispatch<Action>, select: (c: Config) => Selector, options?: MultiOptions }) {\n    let { state, dispatch, select, options } = props\n    let {label, content} = MultiSelectContent({state, dispatch, select, options})\n    options = options || {}\n\n    const [open, setOpen] = React.useState(false);\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n    const handleClose = () => {\n      setOpen(false);\n    }\n    let classes = useStyles()\n\n    if (options.noDialog)\n    return (\n      <FormControl component=\"fieldset\" className={classes.select}>\n        <FormLabel component=\"legend\"className={classes.selectLabel} >{label}</FormLabel>\n        {content}\n      </FormControl>\n    )\n\n    return (\n    <div>\n      <FormLabel component=\"legend\">{label}</FormLabel>\n      <Box height={8}/>\n      <Button color=\"primary\" variant=\"outlined\" style={{borderWidth: 2}} onClick={handleClickOpen}>\n      <SettingsIcon fontSize=\"small\" color=\"primary\" style={{marginLeft: -6, marginRight: 3}}></SettingsIcon>\n        Edit\n      </Button>\n      <Box height={8}/>\n      <Dialog disableBackdropClick disableEscapeKeyDown open={open} onClose={handleClose}>\n        <DialogTitle> {label} </DialogTitle>\n        <DialogContent>\n          {content}\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Ok\n            </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n    )\n  }\n\n  export { SingleSelect, MultiSelectContent, MultiSelect }","import React, { Fragment } from 'react'\n\nimport {\n    TextField,\n    Divider,\n    Button, Box,\n    FormLabel, Dialog, DialogTitle, DialogContent, DialogActions\n} from '@material-ui/core';\n\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport { AppState, Config, Action } from '../Types';\nimport { ColorScheme } from '../lib/CubeLib';\n\nimport { MultiSelectContent } from './Select';\n\nexport function ColorSetter(props: {state: AppState, dispatch: React.Dispatch<Action>}) {\n    const [text, setText] = React.useState(props.state.colorScheme.toUserInput().join(\",\"))\n    const handleChange = (event: any) => setText(event.target.value);\n    const handleClick = () => {\n        let arr = text.split(\",\")\n        props.dispatch({\n            type: \"colorScheme\",\n            content: arr.length === 7? arr : ColorScheme.default_colors\n        })\n    }\n    return (\n        <Fragment>\n        <Box>\n        <TextField\n            label=\"Color\"\n            defaultValue=\"Default Value\"\n            helperText=\"G,B,R,O,Y,W,Gray\"\n            onChange={handleChange}\n            fullWidth\n            value={text}\n        /></Box>\n\n        <Box>\n        <Button variant=\"outlined\" size=\"medium\" color=\"primary\" onClick={handleClick} >\n            Set color\n        </Button>\n        </Box>\n        </Fragment>\n    )\n}\n\nexport function ColorPanel(props: {state: AppState, dispatch: React.Dispatch<Action>}) {\n    let { state, dispatch } = props\n    let select = (config: Config) => { return config.orientationSelector }\n    let {content} = MultiSelectContent({state, dispatch, select})\n\n    const [open, setOpen] = React.useState(false);\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n    const handleClose = () => {\n      setOpen(false);\n    }\n    return (\n        <div>\n        <FormLabel component=\"legend\">Orientation and Color Scheme</FormLabel>\n        <Box height={8}/>\n        <Button color=\"primary\" variant=\"outlined\" style={{borderWidth: 2}} onClick={handleClickOpen}>\n        <SettingsIcon fontSize=\"small\" color=\"primary\" style={{marginLeft: -6, marginRight: 3}}></SettingsIcon>\n          Edit\n        </Button>\n        <Box height={8}/>\n        <Dialog disableBackdropClick disableEscapeKeyDown open={open} onClose={handleClose}>\n          <DialogTitle> Set Orientation (U-F) and Color Scheme  </DialogTitle>\n          <DialogContent>\n            {content}\n            <Box height={20}/>\n                <Divider />\n            <Box height={20}/>\n            <ColorSetter {...{state, dispatch}}/>\n\n          </DialogContent>\n          <DialogActions>\n              <Button onClick={handleClose} color=\"primary\">\n                  Close\n              </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n}","import React, { Fragment } from 'react'\n\nimport CubeSim from './CubeSim'\nimport { makeStyles, useTheme, FormControl, FormLabel, Typography, Button} from '@material-ui/core';\n\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport { CubeUtil, FaceletCube, Mask, MoveSeq } from '../lib/CubeLib';\n\nimport { AppState, Action, Config } from \"../Types\";\nimport clsx from 'clsx';\nimport { Face } from '../lib/Defs';\nimport { getActiveName } from '../lib/Selector';\nimport { MultiSelect, SingleSelect } from './Select';\nimport { ColorPanel } from './Input';\nimport { rand_int } from '../lib/Math';\n\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(2),\n      backgroundColor: theme.palette.background.default\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    fixedHeight: {\n      height: 350,\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    title : {\n        color: theme.palette.text.hint,\n        fontWeight: 500,\n        fontSize: 18,\n        borderBottom: \"2px solid\",\n    },\n    prompt: {\n      color: theme.palette.text.secondary,\n    },\n    button: {\n      width: \"100%\"\n    },\n}))\n\n\n\nfunction _getMask(name: string) {\n  switch (name) {\n    case \"Show\": return Mask.solved_mask;\n    case \"Hide\": return Mask.empty_mask;\n    case \"Hide LSE\": return Mask.lse_mask;\n    default: return Mask.solved_mask\n  }\n}\nfunction CmllTrainerView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n    let { state, dispatch } = props\n    let cube = state.cube.state\n    let classes = useStyles()\n    const canvasPaper = clsx(classes.canvasPaper, classes.fixedHeight);\n    let facelet = FaceletCube.from_cubie(cube,\n      _getMask(getActiveName( state.config.cmllCubeMaskSelector) || \"Show\"))\n\n    let hyperori = getActiveName(state.config.hyperOriSelector) || \"off\"\n    if (hyperori !== \"off\") {\n      if (hyperori === \"F/B\") {\n        facelet = facelet.map( face => face.map(f => f === Face.L || f === Face.R ? Face.X : f) )\n      } else\n        facelet = facelet.map( face => face.map(f => f === Face.F || f === Face.B ? Face.X : f) )\n    }\n    const theme = useTheme()\n\n    const cmll = (c: Config) => c.cmllSelector;\n    const cmllcubemask = (c : Config) => c.cmllCubeMaskSelector;\n    const cmllauf = (c: Config) => c.cmllAufSelector;\n    const trigger = (c: Config) => c.triggerSelector;\n    const hyperorisel = (c: Config) => c.hyperOriSelector;\n\n\n    const panel = (\n      <Fragment>\n        <SingleSelect {...{state, dispatch, select: cmllcubemask, label: \"Virtual Cube\"}} />\n        <MultiSelect {...{state, dispatch, select: cmll, options: { label: \"CMLL Case\", noDialog: true} }} />\n        <MultiSelect {...{state, dispatch, select: cmllauf, options: { label: \"CMLL Auf\", noDialog: true} }} />\n        <MultiSelect {...{state, dispatch, select: trigger, options: { label: \"SB Last Pair Trigger (Uncheck all for pure CMLL)\", noDialog: true} } } />\n        <SingleSelect {...{state, dispatch, select: hyperorisel, label: \"Hyperorientation\" } } />\n\n        <ColorPanel {...{state, dispatch}} />\n      </Fragment>\n    )\n\n    React.useEffect( () =>  {\n      setReveal(false)\n    }, [ state ])\n    const [reveal, setReveal] = React.useState(false)\n    const handleClick = () => {\n      setReveal(true)\n    }\n    const handleNext = () => {\n      dispatch({type: \"key\", content: \"#space\"})\n    }\n\n    React.useEffect(() => {\n      function downHandler(event: KeyboardEvent) {\n        state.keyMapping.handle(event, dispatch);\n      }\n      window.addEventListener('keydown', downHandler);\n      return () => {\n        window.removeEventListener('keydown', downHandler);\n      };\n    });\n\n    let alg = \"\"\n    let setup = \"\"\n    if (state.case.desc.length === 4) {\n      setup = state.case.desc[3].algs[0]\n    }\n    if (reveal && state.case.desc.length >= 3) {\n      const moves = new MoveSeq(state.case.desc[1].algs[0] + state.case.desc[2].algs[0] )\n      let moves_c = moves.collapse()\n      if (moves_c.moves.length > 0) {\n        if (moves_c.moves[0].name[0] === \"U\") {\n          alg += \"(\" + moves_c.moves[0].name + \") \";\n          moves_c.moves = moves_c.moves.slice(1)\n        }\n        alg += moves_c.toString()\n      }\n    }\n    return (\n    <Box className={classes.container}>\n    <Grid container >\n      <Grid item xs={12} >\n            <Paper className={canvasPaper}>\n              <Box margin=\"auto\">\n              <CubeSim\n                width={400}\n                height={350}\n                cube={facelet}\n                colorScheme={state.colorScheme.getColorsForOri(state.cube.ori)}\n                theme={getActiveName(state.config.theme)}\n                facesToReveal={[Face.L]}\n              />\n              </Box>\n            </Paper>\n      </Grid>\n    </Grid>\n\n    <Box height = {5}/>\n\n    <Paper className={classes.paper} elevation={2}>\n    <Grid container spacing={2}>\n\n      <Grid item xs={3}>\n\n      <Box display=\"flex\">\n              <Box>\n              <Box className={classes.title} >\n                Scramble\n              </Box> </Box>\n      </Box>\n      </Grid>\n      <Grid item xs={9}>\n        <Box paddingBottom={1} lineHeight={1} >\n          <Typography style={{whiteSpace: 'pre-line', fontSize: 18, fontWeight: 500}}>\n            { setup }\n          </Typography>\n        </Box>\n\n      </Grid>\n      <Grid item xs={3}>\n\n      <Box display=\"flex\">\n              <Box>\n              <Box className={classes.title} >\n                Case\n              </Box> </Box>\n      </Box>\n      </Grid>\n      { (!reveal) ?\n      <Grid item xs={3}>\n      <Button onFocus={(evt) => evt.target.blur() } className={classes.button}\n      size=\"medium\" variant=\"outlined\" color=\"primary\" onClick={handleClick}> { /* className={classes.margin}>  */ }\n          Show\n      </Button>\n      </Grid>\n      :\n      <Grid item xs={9}>\n        <Box paddingBottom={1} lineHeight={1} >\n          <Typography style={{whiteSpace: 'pre-line', fontSize: 18, fontWeight: 500}}>\n            { alg }\n          </Typography>\n        </Box>\n\n      </Grid>\n      }\n    </Grid>\n    <Box height={30}/>\n\n    <Grid container spacing={0}>\n        <Grid item xs={4} sm={4} md={3}>\n          <Button onFocus={(evt) => evt.target.blur() } className={classes.button}\n          size=\"medium\" variant=\"contained\" color=\"primary\" onClick={handleNext}>\n              Next\n          </Button>\n        </Grid>\n    </Grid>\n    </Paper>\n\n\n    <Box height={20}/>\n      <Divider />\n    <Box height={20}/>\n    { panel }\n\n    <Box height={20}/>\n      <Divider />\n    <Box height={15}/>\n\n    <Box>\n    <FormControl component=\"fieldset\" className={classes.prompt}>\n      <FormLabel component=\"legend\">\n         Usage: Press space for next case. Enter to redo.\n      </FormLabel>\n      </FormControl>\n    </Box>\n\n    </Box>\n    );\n}\n\nexport default CmllTrainerView\n\n\n","import React, { Fragment } from 'react'\n\nimport {\n    TextField,\n    Divider,\n    Button, Box,\n    makeStyles,\n    Typography,\n    FormLabel, Dialog, DialogTitle, DialogContent, DialogActions\n} from '@material-ui/core';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport RootRef from '@material-ui/core/RootRef';\n\n\n\nimport { AppState, Config, Action } from '../Types'\nconst useStyles = makeStyles(theme => ({\n\n    setupEdit: {\n        whiteSpace: 'pre-line',\n        fontSize: \"1.2rem\",\n        fontWeight:500,\n        [theme.breakpoints.down('xs')]: {\n        fontSize: \"1.0rem\",\n        fontWeight: 500\n        },\n    },\n    button: {\n        marginRight: theme.spacing(1)\n        //margin: theme.spacing(1)\n    }\n}))\n\nexport function ScrambleInputView(props: { display: string, scrambles: string[], dispatch: React.Dispatch<Action>}) {\n    let classes = useStyles()\n    let [editing, setEditing] = React.useState(false)\n    let [value, setValue] = React.useState(props.scrambles.join(\"\\n\"))\n    let textField = React.useRef<HTMLInputElement | null>(null)\n    let container = React.useRef<HTMLInputElement | null>(null)\n    let editButton = React.useRef<HTMLElement | null>(null)\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue(event.target.value)\n        event.stopPropagation()\n    }\n    const onKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        event.stopPropagation()\n    }\n    const toggleEdit = () => {\n        setEditing(!editing)\n    }\n    const handleClose = () => {\n        setEditing(false)\n        props.dispatch({type: \"scrambleInput\", content: value.split(\"\\n\").filter(s => s.trim())})\n    }\n    React.useEffect(  () => {\n        setValue(props.scrambles.join(\"\\n\"))\n    }, [props.scrambles])\n\n    /*\n    React.useEffect( ()=> {\n        if (editing) {\n            textField.current && textField.current.focus()\n        } else {\n            textField.current && textField.current.blur()\n            editButton.current && editButton.current.blur()\n        }\n    }, [editing]*/\n\n    const onEntered = () => {\n        textField.current && textField.current.focus()\n    }\n    return <>\n    <Box>\n            <Button variant={editing ? \"contained\" : \"outlined\"}\n                color=\"primary\"\n                size=\"small\"\n                onClick={toggleEdit}\n                className={classes.button}\n                startIcon={<EditIcon />}\n            >\n                {\"INPUT\"}\n            </Button>\n\n    </Box>\n\n    <Dialog open={editing} \n            onClose={handleClose}  \n            onKeyPress={onKeyPress} \n            onKeyDown={onKeyPress} \n            onKeyUp={onKeyPress}\n            onEntered={onEntered}\n            >\n          <DialogTitle> Input your own scrambles (one per line) </DialogTitle>\n          <DialogContent>\n                <TextField\n                    inputRef={textField}\n                    multiline\n                    size=\"medium\"\n                    fullWidth\n                    rowsMax={10}\n                    rows={3}\n                    InputProps={{\n                        className:classes.setupEdit\n                    }}\n                \n                    value={value}\n                    onChange={onChange}\n                    variant=\"outlined\">\n                </TextField>\n          </DialogContent>\n          <DialogActions>\n              <Box padding={1}>\n              <Button onClick={handleClose} color=\"primary\" variant=\"outlined\" fullWidth >\n                  Confirm\n              </Button>\n              </Box>\n          </DialogActions>\n    </Dialog>\n    </>\n    /*\n    return <Dialog open={props.open} onClose={handleClose}>\n          <DialogTitle> Input your own scrambles  </DialogTitle>\n          <DialogContent>\n              Hello\n          </DialogContent>\n          <DialogActions>\n              <Button onClick={handleClose} color=\"primary\">\n                  Confirm\n              </Button>\n          </DialogActions>\n        </Dialog>\n        */\n}","import React, { Fragment } from 'react'\n\nimport CubeSim from './CubeSim'\nimport { Button, makeStyles, Typography, useTheme, FormControl, FormLabel, } from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport { FaceletCube, Mask, MoveSeq } from '../lib/CubeLib';\n\nimport { AppState,  Action, Config, FavCase, Mode} from \"../Types\";\nimport 'typeface-roboto-mono';\nimport { Face } from '../lib/Defs';\nimport { getActiveName } from '../lib/Selector';\n\nimport { SingleSelect, MultiSelect } from './Select';\nimport { ColorPanel } from './Input';\nimport { AlgDesc } from '../lib/Algs';\nimport { ScrambleInputView } from './ScrambleInputView';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { config } from 'process';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(2),\n      backgroundColor: theme.palette.background.default,\n      transition: \"all .5s ease-in-out\"\n    },\n    button: {\n      width: \"100%\",\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n      marginBottom: 3,\n      borderRadius: 0\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    infoColumn: {\n      color: theme.palette.background.paper\n    },\n    scrambleColumn: {\n      paddingLeft: theme.spacing(3)\n    },\n    textColumn: {\n      // color: \"black\",\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 138\n      },\n    },\n    setup: {\n      whiteSpace: 'pre-line',\n      fontSize: \"1.4rem\",\n      fontWeight:500,\n      [theme.breakpoints.down('xs')]: {\n      fontSize: \"1.0rem\",\n      fontWeight: 500\n      },\n  },\n    condGap: {\n    },\n    fgap: {\n      flexShrink: 100, flexBasis: \"2.5rem\", minWidth: \"1.5em\",\n      [theme.breakpoints.down('xs')]: {\n        flexBasis: \"1.0rem\", \n        minWidth: \"0.4rem\"\n      }\n    },\n    fixedHeight: {\n      height: 250,\n    },\n    title : {\n        color: theme.palette.text.hint,\n        fontWeight: 500,\n        borderBottom: \"3px solid\",\n    },\n    sourceIcon : {\n        color: theme.palette.text.hint,\n        fontSize: 15,\n        padding: 0\n    },\n    sourceIconWrap : {\n        //border: \"1px solid \" + theme.palette.text.hint,\n        //borderRadius: 3\n    },\n    fab: {\n      position: 'absolute',\n      top: theme.spacing(7),\n      left: theme.spacing(2),\n    },\n    prompt: {\n      color: theme.palette.text.secondary,\n    },\n  }))\n\n\nfunction getMask(state: AppState) : Mask {\n    if (state.mode === \"fbdr\") {\n      const fbOnly = (state.case.desc.length === 0 || state.case.desc[0].kind === \"fb\")\n      //   getActiveName(state.config.fbOnlySelector) === \"FB Last Pair\"\n      return fbOnly ? Mask.fb_mask : Mask.fbdr_mask\n    }\n    else if (state.mode === \"fs\") {\n      let name = getActiveName(state.config.fsSelector)\n      return ({\n        \"Front FS\": Mask.fs_front_mask,\n        \"Back FS\": Mask.fs_back_mask,\n        \"Both\": Mask.fb_mask\n      } as any)[name]\n    }\n    else if (state.mode === \"ss\") {\n      if (state.case.desc.length === 0) return Mask.sb_mask\n      if (state.case.desc[0].kind === \"ss-front\")\n        return Mask.ss_front_mask\n      else\n        return Mask.ss_back_mask\n    }\n    else if (state.mode === \"fb\") {\n      if (state.case.desc.length === 0 || state.case.desc[0].kind === \"fb\") {\n        return Mask.fb_mask\n      }\n      else if (state.case.desc[0].kind === \"fbdr\") {\n        return Mask.fbdr_mask\n      } else {\n        return Mask.solved_mask\n      }\n    }\n    else if (state.mode === \"4c\" || state.mode === \"eopair\") {\n      return Mask.solved_mask\n    }\n    else return Mask.sb_mask\n}\n\nfunction getHelperTextForMode(mode: Mode) {\n  if (mode === \"4c\" || mode === \"eopair\") {\n    return (\"Usage: Press space for next case. Enter to redo.\"\n      + \"\\n\\nVirtual Cube: I/K (E/D) for M'/M, J/F for U/U'\")\n  } else {\n    return null\n  }\n}\n\n\nfunction BlockTrainerView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n    let { state, dispatch } = props\n    let cube = state.cube.state\n    let classes = useStyles()\n\n    let facelet = FaceletCube.from_cubie(cube, getMask(state))\n\n    let desc : AlgDesc[] = state.case.desc.length ? state.case.desc :\n       [ { algs: [\"\"], setup:\"Press next for new case\", id: \"\", kind: \"\"} ]\n\n    let spaceButtonText = (state.name === \"hiding\") ? \"Reveal\" : \"Next\"\n\n\n    let describe_reveal = function(algs: AlgDesc[]) {\n      let get_algs = (d: AlgDesc) => d.algs;\n      if (algs.length === 1) {\n        return get_algs(algs[0]).join(\"\\n\")\n      } else {\n        return algs.map( alg =>\n          `[${alg.kind}]:\\n` + get_algs(alg).join(\"\\n\") + \"\\n\"\n        )\n      }\n    }\n\n    let describe_hide = (desc: AlgDesc[]) => {\n      let minMove = desc.map( d =>\n        d.algs.map(a => new MoveSeq(a).remove_setup().moves.length))\n        .flat()\n        .reduce( (a, b) => Math.min(a, b), 100 )\n      return `(Min = ${minMove} STM)`\n    }\n    let algText = (state.name === \"hiding\") ? describe_hide(desc)\n      : (state.name === \"revealed\") ? describe_reveal(desc) : \"\"\n\n    const handleSpace = () => {\n      dispatch({type: \"key\", content: \"#space\"})\n      if (spaceButtonText === \"Next\") {\n        setFav(false)\n      }\n    }\n\n\n    const [inputActive, setInputActive] = React.useState(false)\n    const handleInput = () => {\n      setInputActive(true)\n    }\n    const setup = desc.length ? desc[0].setup! : \"\"\n\n\n    const theme = useTheme()\n    const simBackground = getActiveName(state.config.theme) === \"bright\" ? \"#eeeeef\" : theme.palette.background.paper\n\n    // source\n    // Add event listeners\n    React.useEffect(() => {\n      function downHandler(event: KeyboardEvent) {\n        if (event.key === \" \" && spaceButtonText === \"Next\") {\n          setFav(false)\n        }\n        state.keyMapping.handle(event, dispatch);\n      }\n      window.addEventListener('keydown', downHandler);\n      return () => {\n        window.removeEventListener('keydown', downHandler);\n      };\n    });\n\n\n    const [favSelected, setFav] = React.useState(false)\n    const handleFav = () => {\n      if (state.case.desc.length === 0) return\n      const case_ : FavCase = {\n        mode: state.mode,\n        solver: state.case.desc.map(x => x.kind),\n        setup: setup || \"\"\n      }\n      if (!favSelected){\n        setFav(true)\n        dispatch({type: \"favList\", content: [ case_ ], action: \"add\"})\n      } else {\n        setFav(false)\n        dispatch({type: \"favList\", content: [ case_ ], action: \"remove\" })\n      }\n    }\n\n    const gt_sm = useMediaQuery(theme.breakpoints.up('sm'));\n    const canvas_wh = (gt_sm) ? [400, 350] : [320, 280]\n\n    // helper-text\n    let helperText = getHelperTextForMode(state.mode)\n\n                // <Checkbox  className={classes.sourceIconWrap}\n            //       icon={<FavoriteIcon />}\n            //       checked={favSelected}\n            //       onChange = {handleFav}\n            //       checkedIcon={<FavoriteIcon color=\"primary\" />}\n            //       name=\"fav\" />\n\n    return (\n    <Box className={classes.container}>\n      <Paper className={classes.paper} elevation={1}>\n        <Box style={{display: \"flex\"}}>\n          <Box style={{display: \"flex\", alignItems: \"center\"}}> <Box className={classes.title} style={{}}>\n            Scramble\n          </Box> </Box>\n          <Box style={{}} className={classes.fgap} />\n          <Box style={{display: \"flex\", alignItems: \"center\", flexGrow: 1}}>\n          <Typography className={classes.setup} >\n                {setup}\n          </Typography>\n             \n          </Box>\n          <Box style={{}} className={classes.fgap} />\n\n          <Box style={{display: \"flex\", flexWrap: \"wrap\", padding: 0}}>\n            <ScrambleInputView display = {setup}\n                dispatch={dispatch} scrambles={state.scrambleInput}/>\n\n            <Box>\n            <Button variant={favSelected ? \"contained\" : \"outlined\"}\n                color=\"primary\"\n                size=\"small\"\n                name=\"fav\"\n                onClick={handleFav}\n                startIcon={<FavoriteIcon />} \n                endIcon={favSelected ? null : null}\n                >\n                {favSelected ? \"✓\" : \"ADD\"}\n            </Button></Box>\n          </Box>\n          \n        </Box>\n      </Paper>\n\n      <Paper className={ classes.paper}>\n      <Grid container>\n\n        <Grid item md={6} sm={12} xs={12} className={classes.condGap}>\n          <Box style={{display: \"flex\" }}>\n            <Box display=\"flex\" >\n                <Box style={{display: \"flex\", alignSelf: \"flex-start\"}}> <Box className={classes.title} style={{}}>\n                  Solutions\n                </Box> </Box>\n            </Box>\n            <Box style={{}} className={classes.fgap} />\n            <div>\n              <Box paddingBottom={2} lineHeight={1}>\n                <Typography style={{whiteSpace: 'pre-line', fontSize: 16}} >\n                  {algText}\n                </Typography>\n              </Box>\n            </div>\n          </Box>\n        </Grid>\n\n\n        <Grid item md={6} sm={12} xs={12} style={{display: \"flex\", justifyContent: \"center\"}}>\n          <Box style={{backgroundColor: \"rgba(0, 0, 0, 0)\"}}>\n            { getActiveName(props.state.config.showCube) === \"Show\" ?\n            <CubeSim\n              width={canvas_wh[0]}\n              height={canvas_wh[1]}\n              cube={facelet}\n\n              colorScheme={state.colorScheme.getColorsForOri(state.cube.ori)}\n              hintDistance={ (state.mode === \"4c\" || state.mode === \"eopair\") ? 3 : 7 }\n              theme={getActiveName(state.config.theme)}\n              facesToReveal={ [Face.L, Face.B, Face.D]  }\n            /> : null }\n          </Box>\n        </Grid>\n      </Grid>\n      </Paper>\n\n      <Paper className={classes.paper} elevation={2}>\n\n      <Grid container spacing={0}>\n        <Grid item xs={5} sm={4} md={3}>\n          <Button onFocus={(evt) => evt.target.blur() } className={classes.button} size=\"medium\" variant=\"contained\" color=\"primary\" onClick={handleSpace}>\n              {spaceButtonText}\n          </Button>\n        </Grid>\n\n      </Grid>\n\n      </Paper>\n\n      <Box height={20}/>\n      <Divider/>\n      <Box height={20}/>\n\n      <ConfigPanelGroup {...{state, dispatch} } />\n\n      {helperText ?\n      <Fragment>\n        <Box height={20}/>\n          <Divider/>\n        <Box height={15}/>\n        <Box>\n        <FormControl component=\"fieldset\" className={classes.prompt}>\n          <FormLabel component=\"legend\">\n            <pre style={{ fontFamily: 'inherit' }}>\n              {helperText}\n            </pre>\n          </FormLabel>\n          </FormControl>\n        </Box>\n      </Fragment> : null }\n    </Box>\n    );\n}\n\n\n\nfunction ConfigPanelGroup(props: {state: AppState, dispatch: React.Dispatch<Action> }) {\n  let { state, dispatch } = props\n  if (state.mode === \"ss\") {\n    let select1 = (config: Config) => { return config.ssSelector }\n    let select2 = (config: Config) => { return config.ssPairOnlySelector }\n    let select3 = (config: Config) => { return config.solutionNumSelector }\n    let select4 = (config: Config) => { return config.ssPosSelector }\n\n    let DRManip = [\n      // names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n      // \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n      { name: \"Toggle Select All\", enableIdx: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17] },\n      { name: \"Toggle All Oriented\", enableIdx: [0, 2, 4, 6, 8, 10, 12, 14, 16] },\n    ]\n    return (\n      <Fragment>\n\n      <SingleSelect {...{state, dispatch, select: select1}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select2}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select3}}> </SingleSelect>\n      \n      <SingleSelect {...{state, dispatch, select: (c) => c.showCube}}> </SingleSelect>\n      <MultiSelect {...{state, dispatch, select: select4, options: {manipulators: DRManip} }}> </MultiSelect>\n      <ColorPanel {...{state, dispatch}} />\n\n      </Fragment>\n    )\n  } else if (state.mode === \"fbdr\") {\n    let select1 = (config: Config) => { return config.fbdrSelector }\n    let select2 = (config: Config) => { return config.fbOnlySelector }\n    let select3 = (config: Config) => { return config.fbPairSolvedSelector }\n    let select4 = (config: Config) => { return config.fbdrScrambleSelector }\n    let select5 = (config: Config) => { return config.solutionNumSelector }\n\n    let LPEdgeManip = [\n      { name: \"Toggle Select All\", enableIdx: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17] },\n    ]\n    let pos1 = (config: Config) => { return config.fbdrPosSelector1 }\n    let pos3 = (config: Config) => { return config.fbdrPosSelector3 }\n\n    return (\n      <Fragment>\n      <SingleSelect {...{state, dispatch, select: select2}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select1}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select3}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select4}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select5}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: (c) => c.showCube}}> </SingleSelect>\n\n      <MultiSelect {...{state, dispatch, select: pos1, options: {manipulators: LPEdgeManip} }}> </MultiSelect>\n      <MultiSelect {...{state, dispatch, select: pos3, options: {manipulators: LPEdgeManip} }}> </MultiSelect>\n      <ColorPanel {...{state, dispatch}} />\n\n      </Fragment>\n    )\n  } else if (state.mode === \"fb\") {\n    let select1 = (config: Config) => { return config.fbPieceSolvedSelector }\n    let select2 = (config: Config) => { return config.solutionNumSelector }\n\n    return (\n      <Fragment>\n        <SingleSelect {...{ state, dispatch, select: select1 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n        <SingleSelect {...{state, dispatch, select: (c) => c.showCube}}> </SingleSelect>\n\n        <ColorPanel {...{state, dispatch}} />\n\n\n      </Fragment>\n    )\n   } else if (state.mode === \"fs\") {\n    let select1 = (config: Config) => { return config.fsSelector }\n    let select2 = (config: Config) => { return config.solutionNumSelector }\n\n    return (\n      <Fragment>\n        <SingleSelect {...{ state, dispatch, select: select1 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n        <SingleSelect {...{state, dispatch, select: (c) => c.showCube}}> </SingleSelect>\n\n        <ColorPanel {...{state, dispatch}} />\n\n\n      </Fragment>\n    )\n   } else if (state.mode === \"fbss\") {\n    let select1 = (config: Config) => { return config.fbssLpSelector }\n    let select2 = (config: Config) => { return config.fbssSsSelector }\n    let select3 = (config: Config) => { return config.solutionNumSelector }\n\n    return (\n      <Fragment>\n        <SingleSelect {...{ state, dispatch, select: select1 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select3 }}> </SingleSelect>\n        <ColorPanel {...{state, dispatch}} />\n\n\n      </Fragment>\n    )\n   }\n   else if (state.mode === \"4c\"){\n    let select1 = (config: Config) => { return config.lseStageSelector }\n    let select2 = (config: Config) => { return config.lseMCSelector }\n    let select3 = (config: Config) => { return config.lseBarSelector }\n    let select4 = (config: Config) => { return config.solutionNumSelector }\n\n    return (\n      <Fragment>\n        <SingleSelect {...{ state, dispatch, select: select1 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select3 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select4 }}> </SingleSelect>\n        <SingleSelect {...{state, dispatch, select: (c) => c.showCube}}> </SingleSelect>\n\n        <ColorPanel {...{state, dispatch}} />\n      </Fragment>\n    )\n   } else if (state.mode === \"eopair\"){\n    let select1 = (config: Config) => { return config.lseEOSelector }\n    let select2 = (config: Config) => { return config.lseEOLRMCSelector }\n    let select3 = (config: Config) => { return config.lseBarbieSelector }\n    let select4 = (config: Config) => { return config.lseEOLRScrambleSelector }\n    let select5 = (config: Config) => { return config.solutionNumSelector }\n\n    return (\n      <Fragment>\n        <MultiSelect {...{ state, dispatch, select: select1, options: {noDialog: true}} }> </MultiSelect>\n        <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select3 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select4 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select5 }}> </SingleSelect>\n        <SingleSelect {...{state, dispatch, select: (c) => c.showCube}}> </SingleSelect>\n\n        <ColorPanel {...{state, dispatch}} />\n      </Fragment>\n    )\n   }\n   else return <Fragment/>\n}\n\n\n\nexport default BlockTrainerView\n\n\n","import React, { Dispatch } from 'react'\n\nimport { makeStyles } from '@material-ui/core';\nimport { GridList, GridListTile} from '@material-ui/core';\n\nimport { AlgDesc } from \"../lib/Algs\";\nimport { AppState, Action } from '../Types';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n      },\n    container: {\n        paddingTop: theme.spacing(0),\n        paddingBottom: theme.spacing(2),\n        backgroundColor: theme.palette.background.default,\n      },\n    paper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n      gridList: {\n        width: 600,\n        height: 450,\n      },\n}))\n\ntype VisualCubeConfig = {\n    alg: string;\n    stage: string;\n    sch: string; //yrbwog\n}\nfunction VisualCube(props: VisualCubeConfig) {\n  let { alg, stage, sch } = props\n  const template =\n  `http://localhost:8000/visualcube.php?fmt=svg&r=y30x-24&size=150&co=40&fo=100&cc=ccc`\n    + `&stage=${stage}&sch=${sch}&case=${alg}`\n  return <img src={template} alt=\"\"/>\n}\n\nfunction PanoramaTable(props: {algs: AlgDesc[]}){\n    let classes = useStyles()\n    let { algs } = props\n    return <GridList cellHeight={160} className={classes.gridList} cols={3}>\n            {algs.map((alg) => (\n                <GridListTile key={alg.id} cols={1}>\n                    <VisualCube alg={alg.algs[0]} stage=\"f2b\" sch=\"yrbwog\"/>\n                </GridListTile>\n            ))}\n        </GridList>\n}\n\nexport default function PanoramaView(props: { state: AppState, dispatch: Dispatch<Action> }) {\n    let classes = useStyles()\n    let algs : AlgDesc[] = [\n        \"RUR\", \"RU'R'\"\n    ].map( str => ({\n        id: str,\n        algs: [str],\n        kind: \"sb\"\n    }))\n\n    return <div className={classes.root}>\n        <div>\n        <PanoramaTable algs={algs}/>\n        </div>\n        <div>\n        <PanoramaTable algs={algs}/>\n        </div>\n    </div>\n}","import { CubieCube, Move } from './CubeLib';\nimport { cartesianProduct } from './Math';\n\nexport type PrunerConfig = {\n    size: number,\n    encode: (cube : CubieCube) => number,\n    solved_states: CubieCube[],\n    max_depth: number,\n    moveset: Move[]\n}\n\nexport type PrunerT = {\n    init: () => void,\n    query: (c : CubieCube) => number,\n    equal: (c1 : CubieCube, c2: CubieCube) => boolean,\n    encode: (c : CubieCube) => number\n}\n\nenum PrunerPiece {\n    S, O, I, X\n}; // Solved, Oriented, Ignore, Exclude \nconst { S, I } = PrunerPiece\n\nexport type PrunerDef = {\n    corner: PrunerPiece[],\n    edge:   PrunerPiece[],\n    center: PrunerPiece[],\n    solved_states: string[],\n    moveset: string[],\n    max_depth: number\n}\n\nexport function Pruner(config: PrunerConfig) : PrunerT {\n    let dist: Uint8Array;\n    let { size, encode, solved_states, max_depth, moveset} = config\n    let initialized = false\n    function init() {\n        if (initialized) return\n        initialized = true\n        dist = new Uint8Array(size).fill(255)\n        for (let state of solved_states) {\n            dist[encode(state)] = 0\n        }\n        let frontier = [...solved_states]\n        let total_expanded = frontier.length\n        for (let i = 0; i < max_depth; i++) {\n            console.log(\"pruner: expanding depth \", i)\n            let new_frontier = []\n            for (let state of frontier) {\n                for (let move of moveset) {\n                    let newState = state.apply(move) // clone\n                    let idx = encode(newState)\n                    if (dist[idx] === 255) {\n                        dist[idx] = i + 1;\n                        new_frontier.push(newState)\n                    }\n                }\n            }\n            frontier = new_frontier\n            total_expanded += frontier.length\n        }\n        console.log(\"Initialization complete. size = \", total_expanded)\n    }\n    function query(cube: CubieCube) {\n        let d = dist[encode(cube)]\n        if (d === 255) return max_depth + 1;\n        return d\n    }\n    function equal(cube1: CubieCube, cube2: CubieCube) {\n        return encode(cube1) === encode(cube2)\n    }\n    return  {\n        init,\n        query,\n        equal,\n        encode\n    }\n}\n\n\n\nlet prunerFactory = function(def: PrunerDef): PrunerConfig {\n    // edge\n    if (def.corner.length !== 8 || def.edge.length !== 12 || def.center.length !== 6) {\n        throw new Error(\"Invalid pruner def\");\n    }\n    const {S, O, I, X} = PrunerPiece\n    const def_to_idx = (d : PrunerPiece[], count_all?: boolean) => {\n        let curr_idx = 0, idx_arr = []\n        for (let i = 0; i < d.length; i++) {\n            if (d[i] === S || (count_all && (d[i] === O || d[i] === I))) {\n                idx_arr.push(curr_idx++);\n            } else idx_arr.push(-1);\n        }\n        return idx_arr;\n    }\n    let eosize = def.edge.filter(x => x === S || x === O).length\n    let epsize = def.edge.filter(x => x === S).length\n    let eisize = def.edge.filter(x => x !== X).length\n    let esize = Math.pow(2, eosize) * Math.pow(eisize, epsize)\n    let ep_idx = def_to_idx(def.edge, false);\n    let e_idx = def_to_idx(def.edge, true);\n\n    let cosize = def.corner.filter(x => x === S || x === O).length\n    let cpsize = def.corner.filter(x => x === S).length\n    let cisize = def.corner.filter(x => x !== X).length\n    let csize = Math.pow(2, cosize) * Math.pow(cisize, cpsize)\n    let cp_idx = def_to_idx(def.corner, false);\n    let c_idx = def_to_idx(def.corner, true);\n\n    let tosize = def.center.filter(x => x === O).length\n    let tpsize = def.center.filter(x => x === S).length\n    let tisize = def.center.filter(x => x !== X).length\n    let tsize = Math.pow(2, tosize) * Math.pow(tisize, tpsize)\n    let tp_idx = def_to_idx(def.center, false);\n\n    let size = esize * csize * tsize;\n\n    function encode(cube: CubieCube) {\n        let eo = 0, ep = 0, co = 0, cp = 0, to = 0, tp = 0, e, c, t\n        for (let i = 0; i < 12; i++) {\n            switch (def.edge[cube.ep[i]]) {\n                case S:\n                    eo = eo * 2 + cube.eo[i];\n                    ep = ep + Math.pow(eisize, ep_idx[cube.ep[i]]) * e_idx[i];\n                    break;\n                case O:\n                    eo = eo * 2 + cube.eo[i];\n                    break;\n            }\n        }\n        e = ep * Math.pow(2, eosize) + eo\n        for (let i = 0; i < 8; i++) {\n            switch (def.corner[cube.cp[i]]) {\n                case S:\n                    co = co * 3 + cube.co[i];\n                    cp = cp + Math.pow(cisize, cp_idx[cube.cp[i]]) * c_idx[i];\n                    break;\n                case O:\n                    co = co * 3 + cube.co[i];\n                    break;\n            }\n        }\n        c = cp * Math.pow(3, cosize) + co\n        for (let i = 0; i < 6; i++) {\n            switch (def.center[cube.tp[i]]) {\n                case S:\n                    tp = Math.pow(tisize, tp_idx[cube.tp[i]]) + i;\n                    break;\n                case O:\n                    to = to * 3 + (cube.tp[i] / 2) | 0;\n                    break;\n            }\n        }\n        t = tp * Math.pow(3, tosize) + to\n        return e * csize * tsize + c * tsize + t\n    }\n\n    const solved_states = def.solved_states.map( m => new CubieCube().apply(m))\n    const moveset : Move[] = def.moveset.map(s => Move.all[s])\n    const max_depth = def.max_depth\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}\n\n\nlet fbdrPrunerConfig : PrunerConfig = function() {\n    const esize = Math.pow(24, 4)\n    const csize = Math.pow(24, 2)\n    const size = esize * csize\n\n    function encode(cube:CubieCube) {\n      let c1 = 0, c2 = 0\n      for (let i = 0; i < 8; i++) {\n        if (cube.cp[i] === 4) {\n          c1 = i * 3 + cube.co[i]\n        } else if (cube.cp[i] === 5) {\n          c2 = i * 3 + cube.co[i];\n        }\n      }\n      const enc_c = c1 * 24 + c2\n      let e1 = 0, e2 = 0, e3 = 0, e4 = 0\n      for (let i = 0; i < 12; i++) {\n          switch (cube.ep[i]) {\n              case 5 : e1 = i * 2 + cube.eo[i]; break;\n              case 8 : e2 = i * 2 + cube.eo[i]; break;\n              case 9 : e3 = i * 2 + cube.eo[i]; break;\n              case 7 : e4 = i * 2 + cube.eo[i]; break;\n          }\n      }\n      const enc_e = e1 * (24 * 24 * 24) + e2 * (24 * 24) + e3 * 24 + e4\n      return enc_c + 24 * 24 * enc_e\n    }\n\n    const moves = [[]]//, Move.parse(\"L R'\"), Move.parse(\"L' R\"), Move.parse(\"L2 R2\")] \n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move) )\n\n    const max_depth = 4\n    const moveset : Move[] = [\"U\", \"U2\", \"U'\", \"F\", \"F2\", \"F'\", \"R\", \"R2\", \"R'\",\n    \"r\", \"r2\", \"r'\", \"D\", \"D2\", \"D'\", \"M\", \"M'\", \"M2\", \"B\", \"B'\", \"B2\"].map(s => Move.all[s])\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}()\n\n\n\n\nlet htm_rwm = [\"U\", \"U2\", \"U'\", \"F\", \"F2\", \"F'\", \"R\", \"R2\", \"R'\",\n    \"r\", \"r2\", \"r'\", \"D\", \"D2\", \"D'\", \"M\", \"M'\", \"M2\", \"B\", \"B'\", \"B2\"]\nlet rrwmu = [\"U\", \"U'\", \"U2\", \"R\", \"R'\", \"R2\",\n    \"r\", \"r'\", \"r2\", \"M'\", \"M\", \"M2\"]\n\nlet fbPrunerConfig = prunerFactory({\n    corner: [I,I,I,I,S,S,I,I],\n    edge:   [I,I,I,I,I,S,I,I,S,S,I,I],\n    center: [I,I,I,I,S,I],\n    solved_states: [\"id\"],\n    moveset: htm_rwm,\n    max_depth: 5\n});\n\nlet ssPrunerConfig = (is_front: boolean) => {\n    const size = Math.pow(24, 3)\n    const c1 = is_front ? 7 : 6;\n    const e1 = is_front ? 11 : 10\n    const e2 = 7\n    function encode(cube:CubieCube) {\n      let v = [0 ,0, 0]\n      for (let i = 0; i < 8; i++) {\n        if ( cube.cp[i] === c1) v[0] = i * 3 + cube.co[i]\n      }\n      for (let i = 0; i < 12; i++) {\n          if (cube.ep[i] === e1) v[1] = i * 2 + cube.eo[i];\n          else if (cube.ep[i] === e2) v[2] = i * 2 + cube.eo[i]\n      }\n      return v[0] + v[1] * 24 + v[2] * 24 * 24\n    }\n\n    const moves = [[]] \n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move))\n\n    const max_depth = 8\n    const moveset : Move[] = [\"U\", \"U'\", \"U2\", \"R\", \"R'\", \"R2\",\n        \"r\", \"r'\", \"r2\", \"M'\", \"M\", \"M2\"].map(s => Move.all[s])\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}\nlet sbPrunerConfig = prunerFactory({\n    corner: [I,I,I,I,I,I,S,S],\n    edge:   [I,I,I,I,I,I,I,S,I,I,S,S],\n    center: [I,I,I,I,I,I],\n    solved_states: [\"id\"],\n    moveset: rrwmu,\n    max_depth: 6\n});\n\nlet fsPrunerConfig = (is_front: boolean) => prunerFactory({\n        corner: is_front ? [I,I,I,I,S,I,I,I] : [I,I,I,I,I,S,I,I] ,\n        edge:   is_front ? [I,I,I,I,I,S,I,I,S,I,I,I] : [I,I,I,I,I,S,I,I,I,S,I,I] ,\n        center: [I,I,I,I,S,I],\n        solved_states: [\"id\"],\n        moveset: htm_rwm,\n        max_depth: 4\n});\n\nlet fbssPrunerConfig =(is_front: boolean) => [\n    prunerFactory({\n        corner: is_front ? [I,I,I,I,S,S,I,S]: [I,I,I,I,S,S,S,I],\n        edge:   [I,I,I,I,I,I,I,I,I,I,I,I],\n        center: [I,I,I,I,I,I],\n        solved_states: [\"id\"],\n        moveset: htm_rwm,\n        max_depth: 5\n    }),\n    prunerFactory({\n        corner: [I,I,I,I,I,I,I,I],\n        edge:   [I,I,I,I,I,S,I,S,S,S,is_front ? I : S,is_front ? S : I],\n        center: [I,I,I,I,I,I],\n        solved_states: [\"id\"],\n        moveset: htm_rwm,\n        max_depth: 5\n    }),\n]\n\nlet lsePrunerConfig : PrunerConfig = function() {\n    const size = Math.pow(12, 6) * 4 * 4 // TODO: optimize this plz\n    function encode(cube:CubieCube) {\n      let edge_encode = [0, 1, 2, 3, 4, -1, 5, -1, -1, -1, -1, -1];\n      let enc = [0, 0, 0, 0, 0, 0]\n      for (let i = 0; i < 12; i++) {\n        let idx = edge_encode[cube.ep[i]];\n        if (idx > -1) {\n            enc[idx] = edge_encode[i] * 2 + cube.eo[i];\n        }\n      }\n      let edge_enc = 0;\n      for (let i = 0; i < 6; i++) {\n        edge_enc = edge_enc * 12 + enc[i];\n      }\n      return edge_enc * 4 * 4 + cube.tp[0] * 4 + cube.cp[0]// center[0] and cp[0] must be (0-3)\n    }\n\n    const moves = [Move.all[\"id\"]]\n    const solved_states = moves.map( m => new CubieCube().apply(m))\n\n    const max_depth = 7\n    const moveset : Move[] = [\"U\", \"U'\", \"U2\", \"M'\", \"M\", \"M2\"].map(s => Move.all[s])\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}()\n\nfunction eolrPrunerConfig(center_flag: number, barbie_mode?: string): PrunerConfig {\n    const size = 6 * 6 * Math.pow(2, 6) * 4 * 2 // TODO: optimize this plz\n\n    const edge_encode = [0, 1, 0, 2, 0, -1, 0, -1, -1, -1, -1, -1];\n    const edge_idx = [0, 1, 2, 3, 4, -1, 5, -1, -1, -1, -1, -1];\n    function encode(cube:CubieCube) {\n      let eo = 0, ep = 0\n      for (let i = 0; i < 12; i++) {\n        let idx = edge_encode[cube.ep[i]];\n        if (idx >= 0) {\n            eo = eo * 2 + cube.eo[i]\n        }\n        if (idx > 0) {\n            ep += Math.pow(6, idx - 1) * edge_idx[i]\n        }\n      }\n      // make no distinction between centers M2 apart\n      return (eo * 36 + ep) * 4 * 2 + ~~(cube.tp[0] / 2) * 4 + cube.cp[0]// center[0] and cp[0] must be (0-3)\n    }\n\n    const moves_ac = cartesianProduct( [\"U'\", \"U\"], [\"M2\"], [\"\", \"U\", \"U'\", \"U2\"] ).map(x => x.join(\" \"))\n    const moves_mc = cartesianProduct( [\"M'\"], [\"U\", \"U'\"], [\"M2\"], [\"\", \"U\", \"U'\", \"U2\"]).map(x => x.join(\" \"))\n    let moves: string[] = []\n    if (center_flag & 0x01) moves = moves.concat(moves_ac)\n    if (center_flag & 0x10) moves = moves.concat(moves_mc)\n\n    const barb_moves_ac = [\"U\", \"U'\"]\n    const barb_moves_mc = [\"M U\", \"M U'\"]\n    let barb_moves: string[] = []\n    if (center_flag & 0x01) barb_moves = barb_moves.concat(barb_moves_ac)\n    if (center_flag & 0x10) barb_moves = barb_moves.concat(barb_moves_mc)\n\n    const pre_moves = barbie_mode === \"barbie\" ? barb_moves :\n        (barbie_mode === \"ab4c\" ? [\"id\"] : moves)\n\n    const solved_states = pre_moves.map( m => new CubieCube().apply(m))\n\n    const max_depth = 20\n    const moveset : Move[] = [\"U\", \"U'\", \"U2\", \"M'\", \"M\", \"M2\"].map(s => Move.all[s])\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}\n\nexport { fbdrPrunerConfig, fsPrunerConfig, sbPrunerConfig, ssPrunerConfig, fbPrunerConfig, lsePrunerConfig, eolrPrunerConfig,\n    prunerFactory, fbssPrunerConfig }","import {initialize, solve as min2phaseSolve, Min2PhaseCube} from \"./min2phase.js\"\nimport { CubieCube } from \"../CubeLib\";\n\nexport {initialize}\n\nfunction toMin2Phase(state: CubieCube): Min2PhaseCube {\n  // Note: this is its own inverse.\n  // const conjugate = {\n  //   EDGE: { permutation: [ 1, 0, 3, 2, 5, 4, 7, 6, 8, 9, 11, 10 ],\n  //           orientation: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ] },\n  //   CORNER: { permutation: [ 0, 3, 2, 1, 4, 5, 6, 7 ],\n  //             orientation: [ 0, 0, 0, 0, 0, 0, 0, 0 ] },\n  //   CENTER: { permutation: [ 0, 1, 2, 3, 4, 5 ],\n  //             orientation: [ 0, 0, 0, 0, 0, 0 ] }\n  // };\n  // const pseudo = Combine(def, Combine(def, conjugate, Invert(def, state)), conjugate);\n\n  return {\n    cp: state.cp,\n    co: state.co,\n    ep: state.ep,\n    eo: state.eo\n  }\n}\n\nexport function solve(state: CubieCube): string {\n  return min2phaseSolve(toMin2Phase(state));\n}\n","import { CubieCube, Move, MoveSeq } from './CubeLib';\nimport { arrayEqual } from './Math';\n\nimport { Pruner, PrunerT, fbdrPrunerConfig, fbssPrunerConfig, fsPrunerConfig, sbPrunerConfig, ssPrunerConfig, fbPrunerConfig, lsePrunerConfig, PrunerConfig, eolrPrunerConfig, PrunerDef } from './Pruner';\n\nimport { prunerFactory } from './Pruner';\nimport {initialize as min2phase_init, solve as min2phase_solve} from \"../lib/min2phase/min2phase-wrapper\"\nimport { maxHeaderSize } from 'http';\n\n\ntype SolverConfig = {\n    is_solved: (cube : CubieCube) => boolean,\n    moveset: Move[],\n    pruners: PrunerT[],\n    pruneSeenEncodings?: boolean\n}\n\ntype Accumulator = {\n    solutions: MoveSeq[],\n    capacity: number\n}\n\nexport type SolverT = {\n    solve: (cube : CubieCube, l : number, r : number, c : number) => MoveSeq[],\n    is_solved: (cube : CubieCube) => boolean,\n    getPruner: () => PrunerT[]\n}\n\n\nfunction Solver(config: SolverConfig) : SolverT{\n    const MAX_STATE_COUNT = 1000000\n    let { moveset, is_solved, pruners } = config\n    let state_count = 0, prune_count = 0;\n    let accum : Accumulator\n    let max_depth : number\n    let min_depth : number\n\n    enum SState {\n        CONTINUE,\n        STOP\n    };\n\n    function solve_depth(cube: CubieCube, min_depth_: number, max_depth_: number, accum_: Accumulator) {\n        accum = accum_\n        max_depth = max_depth_\n        min_depth = min_depth_\n        state_count = 0\n        prune_count = 0\n        search(cube, 0, [])\n        return accum\n    }\n\n    let nextMoves = Object.create({})\n    function generateNextMoveTable() {\n        function getAvailableMove(name : string) {\n            switch (name[0]) {\n                case \"U\": return moveset.filter(k => k.name[0] !== \"U\");\n                case \"D\": return moveset.filter(k => k.name[0] !== \"U\" && k.name[0] !== \"D\");\n                case \"R\": {\n                    let base = moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"r\");\n                    if (name === \"R\") return base.filter(k => k.name !== \"M'\")\n                    if (name === \"R'\") return base.filter(k => k.name !== \"M\")\n                    if (name === \"R2\") return base.filter(k => k.name !== \"M2\")\n                    return base\n                }\n                case \"L\": return moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"M\" && k.name[0] !== \"L\" && k.name[0] !== \"r\");\n                case \"r\": return moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"M\" && k.name[0] !== \"L\" && k.name[0] !== \"r\");\n                case \"M\": return moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"M\" && k.name[0] !== \"L\" && k.name[0] !== \"r\");\n                case \"F\": return moveset.filter(k => k.name[0] !== \"F\");\n                case \"B\": return moveset.filter(k => k.name[0] !== \"F\" && k.name[0] !== \"B\");\n\n                case \"E\": return moveset.filter(k => k.name[0] !== \"U\" && k.name[0] !== \"D\" && k.name[0] !== \"E\");\n                case \"S\": return moveset.filter(k => k.name[0] !== \"F\" && k.name[0] !== \"B\" && k.name[0] !== \"S\");\n            }\n        }\n        for (let move of moveset) {\n            nextMoves[move.name] = getAvailableMove(move.name)\n        }\n    }\n    generateNextMoveTable()\n\n    function expand(cube: CubieCube, depth: number, solution: Move[]) : SState{\n        const availableMoves = solution.length > 0 ? nextMoves[solution[solution.length - 1].name] : moveset\n        let seen_encodings : Set<number> | null = null\n        let prune = config.pruneSeenEncodings\n        if (prune) {\n            seen_encodings = new Set()\n            seen_encodings.add(pruners[0].encode(cube))\n        }\n        for (let move of availableMoves) {\n            let new_cube = cube.apply(move)\n            let enc = pruners[0].encode(new_cube)\n            if (seen_encodings == null || !seen_encodings.has(enc)) {\n                seen_encodings?.add(enc)\n                solution.push(move)\n                let st : SState = search(new_cube, depth + 1, solution)\n                solution.pop()\n                if (st === SState.STOP) {\n                    return SState.STOP\n                }\n            }\n        }\n        return SState.CONTINUE\n    }\n\n    function try_push(solution: Move[], depth: number) {\n        if (depth < min_depth) return SState.CONTINUE\n        if (accum.solutions.length < accum.capacity) {\n            let flag = true\n            for (let sol of accum.solutions) {\n                if (arrayEqual(sol.moves, solution)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                accum.solutions.push(new MoveSeq([...solution]))\n            }\n        }\n\n        if (accum.solutions.length === accum.capacity) {\n            return SState.STOP\n        } else {\n            return SState.CONTINUE\n        }\n    }\n\n    function search(cube: CubieCube, depth: number, solution: Move[]) : SState {\n        state_count++;\n        if (state_count > MAX_STATE_COUNT) {\n            return SState.STOP\n        }\n        if (is_solved(cube)) {\n            return try_push(solution, depth)\n        } else {\n            if (depth >= max_depth) return SState.CONTINUE;\n            let d = Math.max(...pruners.map(p => p.query(cube)))\n            if (d + depth > max_depth) {\n                prune_count++;\n                return SState.CONTINUE\n            } else {\n                return expand(cube, depth, solution)\n            }\n        }\n    }\n\n    function solve(cube: CubieCube, depth_l: number, depth_r: number, capacity: number) {\n        let accum : Accumulator = {\n            solutions: [],\n            capacity\n        }\n        for (let i = depth_l; i <= depth_r; i++) {\n            accum = solve_depth(cube, depth_l, i, accum)\n            if (accum.solutions.length === accum.capacity || state_count >= MAX_STATE_COUNT) {\n                break;\n            }\n        }\n        //console.log(`Number of states = ${state_count}, pruned = ${prune_count}`);\n        return accum.solutions\n    }\n\n    function getPruner() {\n        return pruners\n    }\n    return { solve, is_solved, getPruner }\n};\n\nfunction solverFactory(def: PrunerDef | PrunerConfig) {\n    let prunerConfig: PrunerConfig\n    if (\"corner\" in def) {\n        prunerConfig = prunerFactory(def);\n    } else {\n        prunerConfig = def\n    }\n    let pruner = Pruner(prunerConfig)\n    pruner.init()\n    //let solvedEncodings = prunerConfig.solved_states.map(s => prunerConfig.encode(s))\n    let solved_states = new Set(prunerConfig.solved_states.map(x => pruner.encode(x)))\n    let is_solved = (prunerConfig.solved_states.length === 0) ?\n        (cube: CubieCube) => pruner.query(cube) === 0 :\n        (cube: CubieCube) => solved_states.has(pruner.encode(cube));\n\n    let config = {\n        is_solved,\n        moveset: prunerConfig.moveset,\n        pruners: [pruner],\n        pruneSeenEncodings: true\n    }\n\n    let solver = Solver(config)\n    return solver\n}\n\nfunction solverFactory2(prunerConfigs: PrunerConfig[]) {\n    let pruners = prunerConfigs.map(pc => Pruner(pc))\n    pruners.forEach(p => p.init())\n    //let solvedEncodings = prunerConfig.solved_states.map(s => prunerConfig.encode(s))\n    let is_solved = (cube: CubieCube) => pruners.every(p => p.query(cube) === 0)\n\n    let config : SolverConfig = {\n        is_solved,\n        moveset: prunerConfigs[0].moveset,\n        pruners,\n        pruneSeenEncodings: false\n    }\n    let solver = Solver(config)\n    return solver\n}\n\nlet FbSolver = () => solverFactory(fbPrunerConfig)\n\nlet FbdrSolver = () => solverFactory(fbdrPrunerConfig)\n\nlet SsSolver = (is_front: boolean) => solverFactory(ssPrunerConfig(is_front))\n\nlet FbssSolver =  (is_front: boolean) => solverFactory2(fbssPrunerConfig(is_front))\n\nlet SbSolver = () => solverFactory(sbPrunerConfig)\n\nlet FsSolver = (is_front: boolean) => solverFactory(fsPrunerConfig(is_front))\n\nlet LSESolver = () => solverFactory(lsePrunerConfig)\n\nlet EOLRSolver = (center_flag: number, barbie_mode?: string) =>\n    solverFactory(eolrPrunerConfig(center_flag, barbie_mode))\n\nlet Min2PhaseSolver : () => SolverT = function() {\n    // polyfill for min2phase\n\n    min2phase_init();\n    function solve(cube : CubieCube, l : number, r : number, c : number) {\n        console.assert(arrayEqual(cube.tp, new CubieCube().tp), \"Cube center is not solved: \" + cube.tp)\n        const transformed_cube = cube.to_cstimer_cube()\n        console.assert( transformed_cube.is_solveable(), \"Cube must be solveable\")\n        let solution = min2phase_solve(transformed_cube);\n        return [ new MoveSeq(solution).inv() ]\n    }\n    function is_solved(cube: CubieCube) {\n        return true\n    }\n    function getPruner() {\n        return []\n    }\n    return {\n        solve,\n        is_solved,\n        getPruner\n    }\n}\n\n\n\nexport { FbdrSolver, FbSolver, SbSolver, FbssSolver, FsSolver, SsSolver, Min2PhaseSolver, LSESolver, EOLRSolver }","import { FbdrSolver, SolverT, FsSolver, SsSolver, SbSolver, FbSolver, FbssSolver, Min2PhaseSolver, LSESolver, EOLRSolver} from './Solver';\n\nlet all_solvers = [\n\"fbdr\",\"fb\", \"fs-front\", \"fs-back\", \"ss-front\", \"ss-back\", \"min2phase\",\n\"lse\", \"eolrac\", \"eolrmc\", \"eolr\", \"eolrac-b\", \"eolrmc-b\", \"eolr-b\" ]\n\nlet CachedSolver = function() {\n    let cache : Map<string, SolverT> = new Map()\n    function get(s: string) {\n        if (!cache.has(s)) {\n            switch (s) {\n                case \"fbdr\": cache.set(s, FbdrSolver()); break\n                case \"fb\": cache.set(s, FbSolver()); break\n                case \"fs-front\": cache.set(s, FsSolver(true)); break\n                case \"fs-back\": cache.set(s, FsSolver(false)); break\n                case \"ss-front\": cache.set(s, SsSolver(true)); break\n                case \"ss-back\": cache.set(s, SsSolver(false)); break\n                case \"fbss-front\": cache.set(s, FbssSolver(true)); break\n                case \"fbss-back\": cache.set(s,FbssSolver(false)); break\n                case \"sb\": cache.set(s, SbSolver()); break\n\n                case \"min2phase\": cache.set(s, Min2PhaseSolver()); break\n                case \"lse\": cache.set(s, LSESolver()); break\n                case \"lse-ab4c\": cache.set(s, EOLRSolver(0x01, \"ab4c\")); break\n                case \"eolrac\": cache.set(s, EOLRSolver(0x01)); break\n                case \"eolrmc\": cache.set(s, EOLRSolver(0x10)); break\n                case \"eolr\": cache.set(s, EOLRSolver(0x11)); break\n                case \"eolrac-b\": cache.set(s, EOLRSolver(0x01, \"barbie\")); break\n                case \"eolrmc-b\": cache.set(s, EOLRSolver(0x10, \"barbie\")); break\n                case \"eolr-b\": cache.set(s, EOLRSolver(0x11, \"barbie\")); break\n            }\n        }\n        return cache.get(s) as SolverT\n    }\n    return {get}\n}()\n\nexport {CachedSolver, all_solvers}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  Button, IconButton, DialogContent, TextField, DialogContentText\n} from '@material-ui/core';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { Table, Paper, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\n\nimport PlaylistPlayIcon from '@material-ui/icons/PlaylistPlay';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport AddIcon from '@material-ui/icons/Add';\nimport { AppState, Action, FavCase } from '../Types';\nimport { all_solvers } from '../lib/CachedSolver';\n\n\nconst useStyles = makeStyles(theme => ({\n  table: {\n    width: '100%',\n    minWidth: 200,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport function warnDialog(props: { confirm: () => void} ) {\n\n}\n\nfunction parseAddString(state: AppState, s : string) : [ FavCase[], boolean] {\n  const res : FavCase[] = []\n\n  const allSolvers = new Set(all_solvers);\n  for (const line of s.split('\\n')) {\n    let cols = line.split(',')\n    if (cols.length !== 2) continue\n    let solver = cols[0].trim().split(\"|\")\n    let setup = cols[1].trim()\n\n    if (solver.every(x => allSolvers.has(x))) {\n      let case_ : FavCase = {\n        mode: state.mode,\n        solver,\n        setup\n      }\n      res.push(case_)\n    }\n  }\n  if (res.length > 0) return [res, true]\n  else return [ [], false]\n}\n\nexport default function FavListView(props: { state: AppState, dispatch: React.Dispatch<Action> }) {\n  const {state, dispatch} = props\n  const classes = useStyles();\n  const favList = state.favList.filter(c => c.mode === state.mode)\n\n  const play = (i: number) => {\n    dispatch({ type: \"favList\", content: [ favList[i] ], action: \"replay\" })\n  }\n  const remove = () => {\n    if (dialogID >= 0 && dialogID < favList.length)\n    dispatch({ type: \"favList\", content: [ favList[dialogID] ], action: \"remove\" })\n  }\n  const [ dialogID, setDialogID ] = React.useState(-1)\n\n  const handleClose = () => setDialogID(-1)\n  const handleRemove = () => { remove(); setDialogID(-1); }\n  const dialogDelete = (<Dialog open={dialogID >= 0} onClose={handleClose} >\n    <DialogTitle id=\"alert-dialog-title\">{\"Delete this alg from favorites?\"}</DialogTitle>\n    <DialogActions>\n      <Button onClick={handleClose} color=\"primary\">\n        No\n    </Button>\n      <Button onClick={handleRemove} color=\"primary\" autoFocus>\n        Yes\n    </Button>\n    </DialogActions>\n  </Dialog>)\n\n  const [ addDialogOpen, setAddDialogOpen ] = React.useState(false)\n  const [ addString, setAddString ] = React.useState(\"\")\n  const handleAdd = () => setAddDialogOpen(true)\n  const handleAddClose = () => setAddDialogOpen(false)\n  const handleAddSuccess = () => {\n    let [res, status] = parseAddString(state, addString)\n    if (status) {\n      dispatch({ type: \"favList\", content: res, action: \"add\" })\n    }\n    handleAddClose()\n  }\n  const handleTextChange = (event: { target: { value: React.SetStateAction<string>; }; }) => {\n    setAddString(event.target.value)\n  }\n  const dialogAdd = <Dialog open={addDialogOpen} onClose={handleAddClose} aria-labelledby=\"form-dialog-title\">\n    <DialogTitle id=\"form-dialog-title\">Add New Cases</DialogTitle>\n    <DialogContent>\n      <DialogContentText>\n        Input your cases here. (one per line) <br></br>\n        Format: [category], [setup algorithm].\n        category := fb | fbdr | ss-front | ss-back\n      </DialogContentText>\n      <TextField\n        autoFocus\n        multiline\n        margin=\"dense\"\n        id=\"name\"\n        fullWidth\n        onChange={handleTextChange}\n        onKeyDown={ (event) => { event.stopPropagation() } }\n      />\n    </DialogContent>\n    <DialogActions>\n      <Button onClick={handleAddClose} color=\"primary\">\n        Cancel\n    </Button>\n      <Button onClick={handleAddSuccess} color=\"primary\">\n        Add All\n    </Button>\n    </DialogActions>\n  </Dialog>\n\n\n  return (\n    <div>\n    {dialogDelete}\n    {dialogAdd}\n    <Paper>\n      <Table className={classes.table} size=\"small\" >\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\"> Scramble </TableCell>\n            <TableCell align=\"center\" rowSpan={1}>\n              <IconButton   onClick={handleAdd} component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                <AddIcon />\n              </IconButton>\n              \n            {/* <IconButton component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                <FileCopyIcon />\n              </IconButton> */}\n             </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {favList.map((value, i) => {\n            //const labelId = `favlist-label-${i}`;\n            return (\n              <TableRow key={i}>\n                {/* <TableCell align=\"center\" >\n                  {/* padding=checkbox <Checkbox></Checkbox> */}\n\n                <TableCell align=\"center\">\n                { value.solver.join(\"|\") + \",\" + value.setup }\n                </TableCell>\n                <TableCell align=\"center\">\n                  <IconButton onFocus={(e: { target: { blur: () => void; }; }) => e.target.blur() } onClick={() => play(i)}\n                  component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                    <PlaylistPlayIcon />\n                  </IconButton>\n\n                  <IconButton onFocus={(e: { target: { blur: () => void; }; }) => e.target.blur() } onClick={() => setDialogID(i)}\n                  component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                    <DeleteOutlineIcon />\n                  </IconButton>\n\n                </TableCell>\n              </TableRow>\n            )\n          })}</TableBody>\n      </Table>\n    </Paper>\n    </div>\n  )\n}","import React from \"react\";\n\nimport { makeStyles } from '@material-ui/core';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { ENABLE_DEV } from '../settings';\nimport InfoIcon from '@material-ui/icons/Info';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport Brightness6Icon from '@material-ui/icons/Brightness6';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\n\nconst useStyles = makeStyles(theme => {\n    let is_bright = theme.palette.primary.main === '#556cd6';\n    return ({\n    page: {\n      backgroundColor: theme.palette.background.default\n    },\n    container: {\n      display: \"flex\"\n    },\n    icon: {\n      minWidth: 0\n    },\n    root: {\n      display: \"flex\"\n    },\n    bar: {\n      backgroundColor: is_bright ? theme.palette.primary.main : '#6e728a', // ,\n      color: theme.palette.background.paper,\n      //borderRadius: \"5px\"\n      display: \"flex\",\n      flexWrap: \"nowrap\",\n      justifyContent: \"space-between\",\n    },\n    select: {\n      backgroundColor: is_bright ? \"#657ce9\" : \"#9297b3\", //9FA4C2\",\n      color: theme.palette.background.paper,\n      paddingLeft: 12,\n      marginRight: 15,\n      marginLeft: 15,\n      fontWeight: 500,\n      fontSize: \"0.9rem\",\n      paddingTop: 8,\n      paddingBottom: 8,\n      borderRadius: 4,\n      //borderBottom: \"1px solid \" + theme.palette.background.default,\n    }\n})})\nconst description : [string, number][] = [\n[\"Solve Analysis (Beta)\", 0],\n[\"Tracking Trainer (Beta)\", 1],\n[\"FB Last Pair (+DR)\", 2],\n[\"First Square\", 3],\n[\"First Block\", 4],\n[ \"Second Square\", 5],\n[\"CMLL\", 7],\n[\"LSE 4c\", 8],\n[\"EOLR / EOLRb\", 9]\n]\n\nfunction TopBarView(props: { value: number, onChange: (x: number) => void,\n    toggleFav: () => void, toggleBright: () => void, handleInfoOpen: () => void } )\n{\n    let classes = useStyles()\n    let { value, onChange, toggleFav, toggleBright, handleInfoOpen } = props\n    let value_str_ = description.find(x => x[1] === value)\n    let value_str = value_str_ ? value_str_[0]: \"\"\n    let handleChange = (event: React.ChangeEvent<{ value: unknown }>) =>  {\n        let idx = description.findIndex(x => x[0] === (event.target.value as string))\n        let tab_idx = description[idx][1]\n        onChange(tab_idx)\n        //\n    }\n    return <div>\n            <Box boxShadow={4} >\n        <Toolbar className={classes.bar} >\n        <Typography style={{fontSize: \"0.9rem\", fontFamily: \"Public Sans\", flexShrink: 10}} >\n            Roux Trainer\n        </Typography>\n        <FormControl style={{flexShrink: 1}}>\n            <Select\n                 value={value_str}\n                 className={classes.select}\n                 onChange={handleChange}\n                 onFocus={(e) => e.target.blur()}\n            >\n                { description.map( (s, i) => <MenuItem key={i} value={s[0]}>{s[0]}</MenuItem> )}\n            </Select>\n        </FormControl>\n        <Box style={{flexGrow: 10}}> </Box>\n        <IconButton onClick={toggleFav}>\n            <BookmarkIcon />\n        </IconButton>\n        <IconButton onClick={toggleBright}>\n            <Brightness6Icon/>\n        </IconButton>\n        <IconButton onClick={handleInfoOpen}>\n            <InfoIcon />\n        </IconButton>\n        </Toolbar>\n        </Box>\n    </div>\n}\n\nexport default TopBarView;","import { EventAvailableOutlined } from \"@material-ui/icons\";\nimport { setEmitFlags } from \"typescript\";\nimport { MoveSeq } from \"./CubeLib\";\nimport two_gram_meter from './two_gram_v1.json'\nexport abstract class Evaluator {\n    abstract evaluate(moves: MoveSeq) : number;\n    abstract name : string;\n}\nexport class SeqEvaluator extends Evaluator {\n    name = \"sequential\";\n    static moveCost_gen() {\n        let pairs: [string, number][] = [\n            [\"U\", 0.8], [\"U'\", 0.8], [\"U2\", 1.0],\n            [\"R\", 0.8], [\"R'\", 0.8], [\"R2\", 1.2],\n            [\"r\", 1], [\"r'\", 1], [\"r2\", 1.3],\n            [\"L\", 1], [\"L'\", 1], [\"L2\", 1.4],\n            [\"F\", 1.4], [\"F'\", 1.4], [\"F2\", 1.8],\n            [\"B\", 1.6], [\"B'\", 1.6], [\"B2\", 2.2],\n            [\"D\", 1.4], [\"D'\", 1.4], [\"D2\", 1.7],\n            [\"M\", 1.5], [\"M'\", 1.2], [\"M2\", 1.8],\n            [\"S\", 1.7], [\"S'\", 1.7], [\"S2\", 3.0],\n            [\"E\", 1.5], [\"E'\", 1.5], [\"E2\", 2.4],\n        ];\n        let costMap = new Map(pairs);\n        return costMap;\n    }\n    static moveCost = SeqEvaluator.moveCost_gen();\n\n    evaluate(moves: MoveSeq) {\n        let sum = 0;\n        for (let m of moves.moves) {\n            const value = (SeqEvaluator.moveCost.get(m.name)) || 1.4;\n            sum += value;\n        }\n        return sum;\n    }\n\n}\n\nexport class QTMEvaluator extends Evaluator {\n    name = \"qtm\";\n    evaluate(moves: MoveSeq) {\n        let sum = 0;\n        for (let m of moves.moves) {\n            sum += m.name[1] === \"2\" ? 2 : 1;\n        }\n        return sum;\n    }\n}\n\nexport class DefaultEvaluator extends Evaluator {\n    name = \"default\";\n    evaluate(moves: MoveSeq) {\n        return moves.moves.length;\n    }\n}\n\n\nexport class TwoGramEvaluator extends Evaluator {\n    name = \"two-gram\";\n    static meter = two_gram_meter as {[s: string]: string};\n    evaluate(moves_input: MoveSeq) {\n        let score = 0\n        let moves = [\"\", ...moves_input.moves.map(x => x.name), \"\"]\n        for (let i =0; i < moves.length - 1; i++) {\n            let two_gram = moves[i] + moves[i + 1]\n            let curr_score = Number.parseFloat(TwoGramEvaluator.meter[two_gram])\n            if (Number.isNaN(curr_score)) {\n                curr_score = 0.3;\n            }\n            score += curr_score;\n        }\n        return score\n    }\n}\n\n//ames: [\"sequential\", \"two-gram\", \"QTM\", \"default\"],\nexport function getEvaluator(s: string) {\n    switch (s) {\n        case \"sequential\": return new SeqEvaluator();\n        case \"two-gram\": return new TwoGramEvaluator();\n        case \"qtm\": return new QTMEvaluator();\n        case \"default\": \n        default :\n            return new DefaultEvaluator();\n    }\n} ","\nimport { CubeUtil, CubieCube, Mask, Move, MoveSeq } from './CubeLib';\nimport { CachedSolver } from '../lib/CachedSolver';\nimport { getEvaluator } from '../lib/Evaluator';\n\nexport type AnalyzerState = {\n    scramble: string,\n    post_scramble: string, // the part of solution leading up to the stage under analysis\n    full_solution: SolutionDesc[],\n    stage: string,\n    orientation: string,\n    pre_orientation: string,\n    num_solution: number,\n    show_mode: string //\"foreach\" | \"combined\"\n}\nexport let initialState : AnalyzerState = {\n    scramble: \"L2 D2 R2 B2 F' D2 U2 L2 B2 F L B' U2 F' D U B L D2 \",\n    post_scramble: \"\",\n    full_solution: [],\n    stage: \"fb\",\n    orientation: \"x2y\",\n    pre_orientation: \"\",\n    num_solution: 1,\n    show_mode: \"foreach\"\n}\n\nexport type SolverConfig = {\n    premoves?: string[],\n    num_solution: number,\n    upper_limit: number,\n    lower_limit?: number,\n    evaluator?: string\n  }\n  \nexport type SolutionDesc = {\n    solution: MoveSeq,\n    premove: string,\n    score: number,\n    orientation?: string,\n    stage: string\n}\n  \nfunction is_fb_solved(cube: CubieCube, oris: MoveSeq[]) {\n    for (let ori of oris) {\n        let cube1 = cube.changeBasis(ori).apply(ori.inv())\n        if (CubeUtil.is_solved(cube1, Mask.fb_mask)) return ori  \n    }\n    return null\n}\n\n\n\nexport function analyze_roux_solve(cube: CubieCube, solve: MoveSeq) {\n    //todo: break up half turns to detect cancellation in between stages\n    let oris = get_oris(\"cn\").map(m => new MoveSeq(m))\n    let pres = [\"\", \"x\", \"x'\", \"x2\"].map(m => new MoveSeq(m))\n    const defaultSolution = {\n        solution: [], premove: \"\", orientation: \"\", stage: \"\", score: 0\n    }\n    // figure out which fb gets solved first\n    let stages = [\"fb\", \"ss\", \"sp\", \"cmll\", \"lse\"]\n    let solution : SolutionDesc[] = [];\n    let current_moves : Move[] = []\n    let stage_idx = 0\n    let getMasksForStage = (s: string) => {\n        switch (s) {\n            case \"ss\": return [Mask.ss_front_mask, Mask.ss_back_mask]\n            case \"sp\": return [Mask.sb_mask]\n            case \"cmll\": return [Mask.cmll_mask]\n            case \"lse\": return [Mask.solved_mask]\n            default: return [Mask.solved_mask]\n        }\n    }\n\n    let moves = [ Move.all[\"id\"], ...solve.moves]\n    for (let move of moves) {\n        cube = cube.apply(move)\n        if (move.name !== \"id\") current_moves.push(move)\n\n        if (stage_idx === 0) {\n            let res = is_fb_solved(cube, oris)\n            if (res !== null) {\n                let orientation = res\n                solution.push({ ...defaultSolution,\n                    solution: new MoveSeq(current_moves),\n                    orientation: orientation.moves.join(\"\"),\n                    stage: \"fb\"\n                })\n                stage_idx++\n                current_moves = []\n                cube = cube.changeBasis(orientation).apply(orientation.inv())\n            }\n        }\n        else if (stage_idx !== 3) {\n            let stage = stages[stage_idx]\n            let masks = getMasksForStage(stage)\n            if (masks.some(mask => CubeUtil.is_solved(cube, mask))) {\n                solution.push({ ...defaultSolution, \n                    solution: new MoveSeq(current_moves),\n                    stage\n                })\n                stage_idx++\n                current_moves = []\n            }\n        } else {\n            if (CubeUtil.is_cmll_solved(cube)) {\n                solution.push({ ...defaultSolution, \n                    solution: new MoveSeq(current_moves),\n                    stage: \"cmll\"\n                })\n                stage_idx++\n                current_moves = []\n            }\n        }\n        if (stage_idx >= stages.length) break\n    }\n    if (current_moves.length > 0) {\n        solution.push({ ...defaultSolution, \n            solution: new MoveSeq(current_moves),\n            stage: \"unknown\"\n        })\n    }\n    return solution\n}\n\nfunction solve(solver_str: string, cube: CubieCube, config: SolverConfig) {\n    const solver = CachedSolver.get(solver_str)\n    let { premoves, num_solution, upper_limit } = config\n    let ev = getEvaluator(config.evaluator || \"sequential\")\n    let solver_num_solution = (num_solution < 10) ? 10 : num_solution\n    let solutions = (premoves || [\"\"]).map(pm => \n        solver.solve(cube.apply(pm), 0, upper_limit, solver_num_solution)\n            .map(x => ({premove: pm, solution: x, score: ev.evaluate(x)}))\n    ).flat()\n    return solutions.sort( (x, y) => x.score - y.score).slice(0, num_solution) \n}\n\nconst get_oris = (ori: string, preori?: string) => {\n    let oris : string[] = []\n    if (ori === \"x2y\") {\n        oris = (preori === \"\") ? [\"\", \"y\", \"y'\", \"y2\", \"x2\", \"x2y\", \"x2y'\", \"x2y2\"] :\n        (preori === \"x\") ? [\"x\", \"xy\", \"xy'\", \"xy2\", \"x'\", \"x'y\", \"x'y'\", \"x'y2\"] :\n        [\"z\", \"zy\", \"zy'\", \"zy2\", \"z'\", \"z'y\", \"z'y'\", \"z'y2\"]\n    \n    } else if (ori === \"cn\") {\n        oris = [\"\", \"y\", \"y'\", \"y2\", \"x2\", \"x2y\", \"x2y'\", \"x2y2\",\n                \"x\", \"xy\", \"xy'\", \"xy2\", \"x'\", \"x'y\", \"x'y'\", \"x'y2\",\n                \"z\", \"zy\", \"zy'\", \"zy2\", \"z'\", \"z'y\", \"z'y'\", \"z'y2\"]\n    }\n    return oris\n}\nfunction analyze_fb(state: AnalyzerState, cube: CubieCube): SolutionDesc[] {\n    let config : SolverConfig = {\n        premoves: [\"\", \"x\", \"x'\", \"x2\"],\n        num_solution: state.num_solution,\n        upper_limit: 9\n    }\n    let oris = get_oris(state.orientation, state.pre_orientation)\n\n    let solutions = oris.map(ori => solve(\"fb\", cube.changeBasis(new MoveSeq(ori)), config).map(sol => ({\n    ...sol, orientation: ori, stage: \"fb\"\n    })).sort( (x, y) => x.score - y.score)).flat()\n\n    return solutions\n}\n\nfunction analyze_ss(state: AnalyzerState, cube: CubieCube): SolutionDesc[] {\n    let config : SolverConfig = {\n        num_solution: state.num_solution,\n        upper_limit: 15\n    }\n    let solutions = [\"ss-front\", \"ss-back\"].map(name => solve(name, cube, config).map(sol => ({\n        ...sol, stage: name\n    })).sort( (x, y) => x.score - y.score)).flat()\n    return solutions\n}\n\nfunction analyze_sp(state: AnalyzerState, cube: CubieCube): SolutionDesc[] {\n    let config : SolverConfig = {\n        num_solution: state.num_solution,\n        upper_limit: 10\n    }\n    let solutions = solve(\"sb\", cube, config).map(sol => ({\n        ...sol, stage: \"sp\"\n    })).sort( (x, y) => x.score - y.score)\n\n    return solutions\n}\n\nfunction analyze_lse(state: AnalyzerState, cube: CubieCube): SolutionDesc[] {\n    let config : SolverConfig = {\n        num_solution: state.num_solution,\n        upper_limit: 20\n    }\n    let solutions = solve(\"lse\", cube, config).map(sol => ({\n        ...sol, stage: \"lse\"\n    })).sort( (x, y) => x.score - y.score)\n\n    return solutions\n}\n\n\nexport function analyze(state: AnalyzerState) {\n    let cube = new CubieCube().apply(state.scramble).apply(state.post_scramble)\n    if (state.stage === \"fb\") return analyze_fb(state, cube)\n    else {\n        let ori = new MoveSeq((state.full_solution[0]?.orientation) || \"\")\n        cube = cube.changeBasis(ori).apply(ori.inv())\n        if (state.stage === \"ss\") return analyze_ss(state, cube)\n        else if (state.stage === \"sp\") return analyze_sp(state, cube)\n        else if (state.stage === \"lse\") return analyze_lse(state, cube)\n    }\n    return []\n}","import React, { Fragment } from 'react'\n\nimport CubeSim from './CubeSim'\nimport { Button, makeStyles, Typography, useTheme, FormControl, FormLabel, Size, } from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport { CubeUtil, CubieCube, FaceletCube, Mask, MoveSeq } from '../lib/CubeLib';\n\nimport { AppState,  Action, Config, FavCase, Mode} from \"../Types\";\nimport 'typeface-roboto-mono';\nimport { Face } from '../lib/Defs';\nimport { getActiveName } from '../lib/Selector';\n\nimport { SingleSelect, MultiSelect } from './Select';\nimport { ColorPanel } from './Input';\nimport { AlgDesc } from '../lib/Algs';\nimport TextField from '@material-ui/core/TextField';\n\nimport { AnalyzerState, SolverConfig, SolutionDesc, initialState, analyze_roux_solve } from '../lib/Analyzer';\n\nimport * as Comlink from 'comlink';\n/* eslint-disable import/no-webpack-loader-syntax */\nimport Worker from \"worker-loader!../lib/Worker\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nimport Chip from '@material-ui/core/Chip';\nimport { BoxBufferGeometry, BoxHelper } from 'three';\nimport { CachedSolver } from '../lib/CachedSolver';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport { createNonNullChain } from 'typescript';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\n// web work solution: worker-loader + comlink interface\n// https://dev.to/nicolasrannou/web-workers-in-create-react-app-cra-without-unmounting-4865\n// https://github.com/webpack-contrib/worker-loader#integrating-with-typescript\n// const worker = new Worker()\n// const obj = Comlink.wrap(worker)\n// async function init() {\n//   await (obj as any).inc();\n//   await (obj as any).inc();\n//   let ct = await (obj as any).counter\n//   console.log(\"Testing \",  ct);\n// }\n// init()\n\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(2),\n      backgroundColor: theme.palette.background.default, \n      transition: \"all .5s ease-in-out\"\n    },\n    button: {\n      width: \"100%\",\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n      marginBottom: 3,\n      borderRadius: 0\n    },\n    paper2: {\n      paddingLeft: theme.spacing(3),\n      paddingTop: theme.spacing(2),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n      marginBottom: 3,\n      borderRadius: 0\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    infoColumn: {\n      color: theme.palette.background.paper\n    },\n    scrambleColumn: {\n      paddingLeft: theme.spacing(3)\n    },\n    textColumn: {\n      // color: \"black\",\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 138\n      },\n    },\n    setup: {\n      whiteSpace: 'pre-line',\n      fontSize: \"1.4rem\",\n      fontWeight:500,\n      [theme.breakpoints.down('xs')]: {\n      fontSize: \"1.0rem\",\n      fontWeight: 500\n      },\n  },\n    condGap: {\n    },\n    fgap: {\n      flexShrink: 100, flexBasis: \"2.5rem\", minWidth: \"1.5em\",\n      [theme.breakpoints.down('xs')]: {\n        flexBasis: \"1.0rem\", \n        minWidth: \"0.4rem\"\n      }\n    },\n    fixedHeight: {\n      height: 250,\n    },\n    title : {\n        color: theme.palette.text.hint,\n        fontWeight: 500,\n        borderBottom: \"3px solid\",\n    },\n    title1 : {\n      fontWeight: 500,\n      marginTop: 7,         \n      border: \"1px solid\",\n      borderRadius: 4,\n      fontSize: \"0.8rem\"\n   },\n    stage: {\n      paddingTop: 5,\n      paddingLeft: 5,\n    },\n    configItem: {\n      paddingRight: 15\n    },\n    stageText: {\n      color: theme.palette.text.primary,\n      textTransform: \"none\"\n    },\n    sourceIcon : {\n        color: theme.palette.secondary.main,\n        fontSize: 15,\n        padding: 0\n    },\n    sourceIconWrap : {\n        //border: \"1px solid \" + theme.palette.text.hint,\n        //borderRadius: 3\n    },\n    fab: {\n      position: 'absolute',\n      top: theme.spacing(7),\n      left: theme.spacing(2),\n    },\n    prompt: {\n      color: theme.palette.text.secondary,\n    },\n    formControl: {\n      margin: theme.spacing(0),\n      minWidth: 120,\n    },\n  }))\n\nconst resetState = (state: AnalyzerState) => {\n  return {\n    ...state,\n    postScramble: \"\",\n    full_solution: [],\n    scramble: \"\",\n    stage: \"fb\"\n  }\n}\nfunction ScrambleView(props: { state: AnalyzerState, setState: (newState: AnalyzerState) => void }) {\n    let { state, setState } = props\n    let classes = useStyles()\n    // Add event listeners\n    let [ value, setValue ] = React.useState(state.scramble)\n\n    let onScrambleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setValue(event?.target.value)\n    }\n\n    let handleBegin = () => {\n\n      setState({...resetState(state), scramble: value})\n    }\n    let handleGen = () => {\n      let cube = CubeUtil.get_random_with_mask(Mask.empty_mask)\n      let scramble = CachedSolver.get(\"min2phase\").solve(cube,0,0,0)[0].inv().toString()\n      setState({...resetState(state), scramble})\n      setValue(scramble)\n    }\n\n    return (\n    <Box style={{display: \"flex\"}}>\n    \n      <Box style={{display: \"flex\", alignItems: \"center\", flexGrow: 1}}>\n        <TextField\n          size=\"small\"\n          fullWidth\n          multiline\n          rowsMax={3}\n          label={\"Scramble\"}\n          value={value}\n          onChange={onScrambleChange}\n          variant=\"filled\"\n        />\n      </Box>\n      <Box style={{}} className={classes.fgap} />\n      <Button onFocus={(evt) => evt.target.blur() } onClick={handleGen}\n            size=\"medium\" variant=\"contained\" color=\"primary\" >\n              Gen\n      </Button>\n      <Button onFocus={(evt) => evt.target.blur() } onClick={handleBegin}\n            size=\"medium\" variant=\"contained\" color=\"primary\" >\n              GO\n      </Button>\n    </Box> )\n}\n\nconst bases = \"\"\nfunction ConfigView(props: { state: AnalyzerState, setState: (newState: AnalyzerState) => void}) {\n  let { state, setState } = props\n  let classes = useStyles()\n  let fb_ori_str = state.orientation + \",\" + state.pre_orientation\n  let handleFBOri = (event: React.ChangeEvent<{ value: unknown }>) => {\n    let value: string[]= (event.target.value as string).split(\",\")\n    setState({...state, orientation: value[0], pre_orientation: value[1]})\n  }\n  let display_mode_str = state.show_mode\n  let handle_display_mode = (event: React.ChangeEvent<{ value: unknown }>) =>  {\n    let value = (event.target.value as string)\n    setState({...state, show_mode: value})\n  }\n  let handle_num_solution = (event: React.ChangeEvent<{ value: unknown }>) =>  {\n    let value = Number.parseInt(event.target.value as string)\n    setState({...state, num_solution: value || state.num_solution})\n  }\n  return (\n  <Box display=\"flex\">\n    <Box className={classes.configItem}>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-helper-label\">FB Orientation</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-helper-label\"\n          id=\"demo-simple-select-helper\"\n          value={fb_ori_str}\n          onChange={handleFBOri}\n        >\n          <MenuItem value={\"x2y,\"}>x2y on White/Yellow</MenuItem>\n          <MenuItem value={\"x2y,x\"}>x2y on Blue/Green</MenuItem>\n          <MenuItem value={\"x2y,z\"}>x2y on Red/Orange</MenuItem>\n          <MenuItem value={\"cn,\"}>Color Neutral</MenuItem>\n        </Select>\n        <FormHelperText></FormHelperText>\n      </FormControl>\n    </Box>\n    <Box className={classes.configItem}>\n      <FormControl className={classes.formControl}>\n      <InputLabel id=\"demo-simple-select-helper-label\">Display Mode</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-helper-label\"\n        id=\"demo-simple-select-helper\"\n        value={display_mode_str}\n        onChange={handle_display_mode}\n      >\n        <MenuItem value={\"foreach\"}>Per orientation</MenuItem>\n        <MenuItem value={\"combined\"}>Combined </MenuItem>\n      </Select>\n      <FormHelperText></FormHelperText>\n     </FormControl>\n    </Box>\n    <Box  className={classes.configItem}>\n    <FormControl className={classes.formControl}>\n      <InputLabel id=\"demo-simple-select-helper-label\"># Solutions</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-helper-label\"\n        id=\"demo-simple-select-helper\"\n        value={state.num_solution}\n        onChange={handle_num_solution}\n      >\n        <MenuItem value={1}>1</MenuItem>\n        <MenuItem value={3}>3 </MenuItem>\n        <MenuItem value={5}>5</MenuItem>\n        <MenuItem value={10}>10 </MenuItem>\n        <MenuItem value={25}>25 </MenuItem>\n      </Select>\n      <FormHelperText></FormHelperText>\n    </FormControl>\n    </Box>\n\n  </Box>)\n}\n\n\nfunction SolutionInputView(props: { state: AnalyzerState, setState: (newState: AnalyzerState) => void}) {\n  let classes = useStyles()\n  let [editing, setEditing] = React.useState(false)\n  let [value, setValue] = React.useState(\"\")\n  let textField = React.useRef<HTMLInputElement | null>(null)\n  let container = React.useRef<HTMLInputElement | null>(null)\n  let editButton = React.useRef<HTMLElement | null>(null)\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setValue(event.target.value)\n      event.stopPropagation()\n  }\n  const toggleEdit = () => {\n      setEditing(true)\n  }\n  const handleClose = () => {\n    setEditing(false)\n    let t = Date.now()\n    let full_solution = analyze_roux_solve(new CubieCube().apply(props.state.scramble), new MoveSeq(value))\n    if (full_solution.length > 1 || full_solution.length === 1 && full_solution[0].solution.moves.length > 0 )\n      props.setState({...props.state, full_solution})\n  }\n  const onEntered = () => {\n      textField.current && textField.current.focus()\n  }\n  return <Box>\n    <Box >\n          <Button variant={editing ? \"contained\" : \"outlined\"}\n              color=\"primary\"\n              size=\"small\"\n              onClick={toggleEdit}\n              \n              startIcon={<EditIcon />}\n          >\n              {\"Input Your Solution\"}\n          </Button>\n    </Box>\n\n    <Dialog open={editing} \n            onClose={handleClose}  \n            onEntered={onEntered}\n            maxWidth=\"sm\"\n            fullWidth\n            >\n          <DialogTitle> Input your reconstructed solution </DialogTitle>\n          <DialogContent>\n                <TextField\n                    inputRef={textField}\n                    multiline\n                    size=\"medium\"\n                    fullWidth\n                    rowsMax={10}\n                    rows={5}\n                    value={value}\n                    onChange={onChange}\n                    variant=\"outlined\">\n                </TextField>\n          </DialogContent>\n          <DialogActions>\n              <Box padding={1}>\n              <Button onClick={handleClose} color=\"primary\" variant=\"outlined\" fullWidth >\n                  Confirm\n              </Button>\n              </Box>\n          </DialogActions>\n    </Dialog>\n  </Box>\n}\n\n\nfunction StageSolutionView(props: { solution: SolutionDesc }) {\n  let { solution, stage, premove, orientation } = props.solution\n  let getTags = () => {\n    if (stage === \"fb\") {\n      return [ orientation ]\n    } else if (stage === \"ss-front\" || stage === \"ss-back\"){\n      return [ stage ]\n    } else return []\n  }\n  let tags = getTags()\n  return (\n    <Box style={{display: \"flex\", marginBottom: \"2px\"}}>\n      {tags.filter(x=>x).map( (t, i) => <Chip variant=\"outlined\" size=\"small\" color=\"primary\" label={t} key={i} />) }\n      <Box style={{marginLeft: 5}}>\n        <Typography>\n          {premove + \" \" + solution.moves.map(m => m.name).join(\" \")}\n        </Typography>\n      </Box>\n    </Box>\n  )\n}\n\n\nfunction StageSolutionListView(props: { solutions: SolutionDesc[], state: AnalyzerState, setState: (newState: AnalyzerState) => void} ) {\n  let { solutions, state, setState } = props\n\n  return (\n    <Box lineHeight={1}>\n      { solutions.map( (s, i) => <StageSolutionView solution={s} key={i}/>) }\n    </Box>\n  ) \n}\n\nfunction FullSolutionView(props: { state: AnalyzerState, setState: (newState: AnalyzerState) => void} ) {\n  let { state, setState } = props\n  let classes = useStyles()\n\n  let setStage = (i: number) => () => {\n    setState({...state, \n      stage: state.full_solution[i].stage,\n      post_scramble: state.full_solution.slice(0, i).map(x => x.premove + x.solution.toString()).join(\" \")\n    })\n  }\n  let [show, setShow] = React.useState(-1)\n  let stageView = (sol: SolutionDesc, i: number) => {\n    return (\n      <Box display=\"flex\" key={i} className={classes.stage} \n        onMouseLeave={ () => setShow(-1)} onMouseEnter={() => setShow(i)} onClick={() => setShow(show === i ? -1 : i)}>\n        <Button variant={\"text\"}\n              color=\"primary\"\n              size=\"small\"\n              onClick={setStage(i)}\n              style={{fontSize: \"0.7rem\", marginLeft: 5, border: (show === i) ? \"1px solid\" : \"1px solid rgba(0, 0,0,0)\"\n            }} >\n        <Typography variant=\"subtitle1\" className={classes.stageText}>{sol.solution.toString()} // {sol.stage}\n        </Typography>        \n        <SearchIcon fontSize=\"small\"/>\n        </Button>\n\n      </Box>\n    )\n  }\n  return (\n    <Box paddingBottom={2} lineHeight={1} >\n      <Box>\n        <SolutionInputView state={state} setState={setState}/>\n      </Box>\n      <Box style={{fontFamily: \"Public Sans\"}}>\n        { props.state.full_solution.map( (desc, i) => stageView(desc, i))}\n      </Box>\n    </Box>\n  )\n  \n}\n\nconst worker_raw = new Worker()\nconst worker = Comlink.wrap(worker_raw)\n\nfunction AnalyzerView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n    let { state: appState, dispatch: appDispatch } = props\n    \n    const theme = useTheme()\n    let [ state, setState ] = React.useState(initialState)\n\n    let [ solutions, setSolutions ] = React.useState<SolutionDesc[]>([])\n\n    let classes = useStyles()\n\n    let mask = Mask.solved_mask\n    let cubieCube = new CubieCube().apply(state.scramble).apply(state.post_scramble)\n    let faceletCube = FaceletCube.from_cubie(cubieCube, mask)\n\n    let ycube = FaceletCube.from_cubie(cubieCube.changeBasis(new MoveSeq(\"y\")))\n\n    let solutions_to_display = solutions.slice()\n    if (state.show_mode === \"combined\") {\n      solutions_to_display = solutions_to_display.sort( (x, y) => x.score - y.score).slice(0, state.num_solution)\n    } else {\n     /// solutions_to_display = solutions.slice(0, Math.ceil(config.num_solution / oris.length))\n    }\n    React.useEffect(() => {\n      async function effect() {\n\n        let t = Date.now()\n        let curr_solutions = await (worker as any).analyze(state) as SolutionDesc[]\n        // console.log(\"web worker finished after \" + (Date.now() - t) + \" ms\")\n        //console.log(\"result = \", curr_solutions)\n\n        setSolutions(curr_solutions)\n        //l/et curr_solutions = await analyzer_worker(state, cubieCube)\n        //\n      }\n      effect()\n    }, [state.scramble, state.stage, state.post_scramble, state.num_solution, state.orientation, state.pre_orientation])\n\n    const gt_md = useMediaQuery(theme.breakpoints.up('md'));\n    const gt_sm = useMediaQuery(theme.breakpoints.up('sm'));\n    const canvas_wh = (gt_md) ? [400, 350] : (gt_sm) ? [400, 350] : [320, 280]\n\n    return (\n    <Box className={classes.container}>\n      <Paper className={classes.paper} elevation={1}>\n        <ScrambleView state={state} setState={setState}/>\n      </Paper>\n\n\n      <Paper className={classes.paper} elevation={2}>\n        <ConfigView state={state} setState={setState}/>\n      </Paper>\n\n      <Paper className={classes.paper2} elevation={1}>\n        <Box display=\"flex\" >\n          {\n            state.full_solution.length >= 1 ? <>\n              <Box style={{display: \"flex\", flexDirection: \"column\", alignSelf: \"flex-start\"}}> \n                <Box className={classes.title} style={{}}>\n                  My Solution\n                </Box> \n              </Box>\n              <Box style={{}} className={classes.fgap} /> \n            </>\n          : null\n          }\n\n          <FullSolutionView state={state} setState={setState}/>\n        </Box>\n\n      </Paper>\n\n      <Paper className={ classes.paper}>\n      <Grid container>\n        <Grid item md={6} sm={12} className={classes.condGap}>\n          <Box style={{display: \"flex\" }}>\n            <Box display=\"flex\" >\n                <Box style={{display: \"flex\", flexDirection: \"column\", alignSelf: \"flex-start\"}}> \n                  <Box className={classes.title} style={{}}>\n                    Solutions\n                  </Box> \n                  <Box>\n                  <Button className={classes.title1} size=\"small\" variant=\"outlined\" color=\"primary\">\n                    { state.stage }\n                  </Button>\n                  </Box>\n                </Box>\n            </Box>\n            <Box style={{}} className={classes.fgap} />\n           \n              <StageSolutionListView solutions={solutions_to_display} state={state} setState={setState}/>\n           \n          </Box>\n        </Grid>\n\n\n        <Grid item md={6} xs={12} style={{display: \"flex\", justifyContent: \"center\"}}>\n          <Box style={{backgroundColor: \"rgba(0, 0, 0, 0)\"}}>\n            <CubeSim\n              width={canvas_wh[0]}\n              height={canvas_wh[1]}\n              cube={faceletCube}\n              colorScheme={appState.colorScheme.getColorsForOri(appState.cube.ori)}\n              hintDistance={ 6 }\n              theme={getActiveName(appState.config.theme)}\n\n              facesToReveal={ [Face.L, Face.B, Face.D]  }\n            />\n          </Box>\n\n\n        </Grid>\n      </Grid>\n      </Paper>\n\n\n\n      <Box height={20}/>\n      <Divider/>\n      <Box height={20}/>\n\n\n    </Box>\n    );\n}\n\n\nexport default AnalyzerView\n\n\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/Worker.da327adb.worker.js\");\n}\n","import React from 'react'\n\nimport CubeSim from './CubeSim'\nimport { Button, makeStyles, Typography, useTheme, FormControl, FormLabel, Size, } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\n\nimport { CubeUtil, CubieCube, FaceletCube, Mask, MoveSeq } from '../lib/CubeLib';\n\nimport { AppState,  Action, Config, FavCase, Mode} from \"../Types\";\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem'\n\n\nimport { getActiveName } from '../lib/Selector';\nimport classes from '*.module.css';\nimport { Face, FaceletCubeT } from '../lib/Defs';\nimport { rand_choice, rand_int, rand_shuffle } from '../lib/Math';\nimport TextField from '@material-ui/core/TextField';\nimport { CachedSolver } from '../lib/CachedSolver';\nimport { SolverT } from '../lib/Solver';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        paddingTop: theme.spacing(0),\n        paddingBottom: theme.spacing(2),\n        backgroundColor: theme.palette.background.default, \n        transition: \"all .5s ease-in-out\"\n    },\n    paper: {\n        padding: theme.spacing(3),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n        marginBottom: 3,\n        borderRadius: 0\n    },\n    select: {\n        margin: \"0px 10px\"\n    },\n    scramble: {\n        whiteSpace: 'pre-line',\n        fontSize: \"1.4rem\",\n        fontWeight:500,\n    },\n    title: {\n        color: theme.palette.text.hint,\n        fontWeight: 500,\n        borderBottom: \"3px solid\",\n    },\n    fgap: {\n        flexShrink: 100, flexBasis: \"2.5rem\", minWidth: \"1.5em\",\n        [theme.breakpoints.down('xs')]: {\n          flexBasis: \"1.0rem\", \n          minWidth: \"0.4rem\"\n        }\n    }\n})\n)\n\n\ntype TrackerChallenge = {\n        cubeBefore: CubieCube\n        moves: string,\n        progress: number,\n        mask: Mask\n}\n\ntype TrackerState = {\n    mode: string,\n    moveSet: string,\n    moveCount: number,\n    display: string,\n    result: TrackerChallenge | null\n}\n\nconst initialState : TrackerState = {\n    mode: \"fb,ss\",\n    moveSet: \"UDFBrRM\",\n    moveCount: 5,\n    display: \"hidden\",\n    result: null\n}\n\n\nconst axis : {[key: string]: number} = {\n    \"X\": 0,\n    \"R\": 1, \"r\": 1, \"l\": 1, \"L\": 1, \"M\": 1,\n    \"U\": 2, \"D\": 2, \"u\": 2, \"d\": 2, \"E\": 2,\n    \"F\": 3, \"B\": 3, \"f\": 3, \"b\": 3, \"S\": 3\n}\n\nconst mode_to_mask = (mode: string) => {\n    let mask = Mask.copy(Mask.empty_mask)\n    if (mode === \"fb,ss\") {\n\n    }\n    return mask\n}\n\nfunction generateScramble(moveSet: string, moveCount: number) {\n    let prev = \"X\"\n    let prevprev = \"X\"\n    let scramble = \"\"\n    let moveList = moveSet.split(\"\")\n    for (let i = 0; i < moveCount; i++) {\n        let move : string\n        do {\n            move = rand_choice(moveList)\n        } while (move === prev ||\n            ( axis[move] === axis[prev] && axis[move] === axis[prevprev]));\n        prevprev = prev;\n        prev = move;\n        scramble += move + rand_choice([\"\", \"2\", \"'\"])\n    }\n    return scramble\n}\n\nfunction generateMoves(cube: CubieCube, solver: SolverT, moveSet: string, moveCount: number) {\n    let candidate = moveSet.split(\"\").map(x => [x, x + \"2\", x + \"'\"]).flat()\n    let moves = \"\"\n    let prev = \"X\"\n    let prevprev = \"X\"\n    let prevSolution = \" \"\n\n    for (let i = 0; i < moveCount; i++) {\n        let c = [...candidate]\n        rand_shuffle(c)\n        while (c.length > 0){\n            let next = c[c.length-1]\n            if (next[0] === prev ||\n                (axis[next[0]] === axis[prev] && axis[prev] === axis[prevprev])) {\n                    c.pop()\n                    continue\n             }\n            let moveSeq = solver.solve(cube.apply(next), 0, i + 1, 1)[0]\n            if (!!moveSeq && moveSeq.toString() !== prevSolution){\n                cube = cube.apply(next)\n                moves = moves + next\n\n                prevSolution = moveSeq.toString()\n                prevprev = prev\n                prev = next[0]\n                break\n            }\n            c.pop()\n        }\n        if (c.length === 0) { // unsuccessful\n            return new MoveSeq(\"\")\n        }\n        //if (new MoveSeq(prevSolution).moves.length === moveCount) break;\n    }\n    return new MoveSeq(moves)\n}\n\nfunction generateChallengeForFB(state: TrackerState): TrackerChallenge {\n    let solver = CachedSolver.get(\"fb\")\n    let cubeAfter = CubeUtil.get_random_with_mask(Mask.fb_mask)\n    let moves = generateMoves(cubeAfter, solver, state.moveSet, state.moveCount)\n    //solver.solve(cubeBefore, state.moveCount, state.moveCount, 1)[0]\n    let mask = Mask.copy(Mask.empty_mask) // empty_mask) // fbdr_mask)\n    if (state.mode === \"fb,sp\" || state.mode === \"fb,ss\") {\n        if (rand_int(2) === 0) {\n            mask.ep[11] = 1\n            mask.cp[7] = 1\n        } else {\n            mask.ep[10] = 1\n            mask.cp[6] = 1\n        }\n    }\n    if (state.mode === \"fb,dr\" || state.mode === \"fb,ss\") {\n        mask.ep[7] = 1\n    }\n    return {\n        cubeBefore: cubeAfter.apply(moves),\n        mask,\n        moves: moves.inv().toString(),\n        progress: 0,\n    }\n}\n\nfunction generateChallengeForFS(state: TrackerState): TrackerChallenge {\n    let mode = rand_choice([\"fs-front\", \"fs-back\"])\n    let solver = CachedSolver.get(mode)\n    let cubeAfter = CubeUtil.get_random_with_mask(mode === \"fs-back\" ? Mask.fs_back_mask : Mask.fs_front_mask)\n    let moves = generateMoves(cubeAfter, solver, state.moveSet, state.moveCount)\n    //solver.solve(cubeBefore, state.moveCount, state.moveCount, 1)[0]\n    let mask = Mask.copy(Mask.empty_mask) // empty_mask) // fbdr_mask)\n    if (mode === \"fs-back\") {\n        mask.ep[8] = 1\n        mask.cp[4] = 1\n    } else {\n        mask.ep[9] = 1\n        mask.cp[5] = 1\n    }\n    if (state.mode === \"fs,lp+dr\") {\n        mask.ep[7] = 1\n    }\n    return {\n        cubeBefore: cubeAfter.apply(moves),\n        mask,\n        moves: moves.inv().toString(),\n        progress: 0,\n    }\n}\n\n\nfunction generateChallenge(state: TrackerState) {\n    if (state.mode.slice(0, 3) === \"fb,\") {\n        return generateChallengeForFB(state)\n    } else return generateChallengeForFS(state)\n}\n\nfunction getInitialState() {\n    let result = generateChallenge(initialState);\n    return {...initialState, result}\n}\n\nfunction TrackerView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n    let { state: globalState, dispatch: globalDispatch } = props\n    const theme = useTheme()\n    const simBackground = getActiveName(globalState.config.theme) === \"bright\" ? \"#eeeeef\" : theme.palette.background.paper\n\n    let [ state, setState ] = React.useState(getInitialState)\n    let classes = useStyles()\n\n    let {cubeBefore, mask, moves, progress} = state.result!\n    let cube1 = FaceletCube.from_cubie(cubeBefore.apply(\n           new MoveSeq(moves).toQuarter().slice(progress)), mask)\n\n    console.log(\"moves\", moves)\n    let cube2 = FaceletCube.from_cubie(cubeBefore.apply(moves), mask)\n\n\n    // React.useEffect( () => {\n    //     const t = new MoveSeq(moves).toQuarter().moves.length\n    //     let new_progress = 0\n    //     const timer = setInterval(() => {\n    //         new_progress++\n    //         if (new_progress > t) clearTimeout(timer)\n    //         setState( (state) => (\n    //             {...state, result: {...state.result, progress: new_progress} }\n    //         ))\n    //     }, 800);\n    //     return () => clearInterval(timer);\n    // }, [cubeBefore, moves])\n\n    let handleClick = () => {\n        if (state.display === \"hidden\") {\n            setState({...state, display: \"revealed\"})\n        } else {\n            let result = generateChallenge(state);\n            setState({...state, result, display: \"hidden\"})\n        }\n    }\n\n    let handleProgress = (func: (x : number) => number) => () => {\n        setState( (state) => (\n            {...state, result: {...state.result, progress: func(state.result.progress)} }\n        ))\n    }\n\n    let [ moveSetText, setMoveSetText ] = React.useState(state.moveSet)\n    let onMoveSetEdit = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setMoveSetText(event?.target.value)\n        onMoveSetCommit()\n    }\n    let onMoveSetCommit = () => {\n        setState({...state, moveSet: moveSetText})\n    }\n\n    let handleMode = (event: React.ChangeEvent<{ value: unknown }>) => {\n        let value = (event.target.value as string)\n        setState({...state, mode: value})\n    }\n    let handleMoveCount = (event: React.ChangeEvent<{ value: unknown }>) => {\n        let value = Number.parseInt(event.target.value as string) || 5\n        setState({...state, moveCount: value})\n    }\n\n    return (\n    <Box className={classes.container}>\n      <Paper className={classes.paper} >\n        <Box display=\"flex\" >\n          <Box>\n          <Box className={classes.title} style={{}}>\n            Scramble\n          </Box></Box>\n          <Box style={{}} className={classes.fgap} />\n          <Typography className={classes.scramble}>\n            {moves}\n          </Typography>\n        </Box>\n      </Paper>\n      <Paper className={classes.paper} >\n\n        <Box style={{display: \"flex\", alignItems: \"center\", flexGrow: 1}}> \n\n        <Box style={{padding: 10}} display=\"flex\" flexWrap=\"wrap\" flexDirection=\"row\">\n        <Box className={classes.select}>\n            <FormControl>\n                <InputLabel>Mode</InputLabel>\n                <Select\n                    value={state.mode}\n                    onChange={handleMode}\n                >\n                <MenuItem value={\"fs,lp\"}>Watch FS, Track Last Pair</MenuItem>\n                <MenuItem value={\"fs,lp+dr\"}>Watch FS, Track Last Pair + DR</MenuItem>\n                <MenuItem value={\"fb,dr\"}>Watch FB, Track DR </MenuItem>\n                <MenuItem value={\"fb,sp\"}>Watch FB, Track SB Pair </MenuItem>\n                <MenuItem value={\"fb,ss\"}>Watch FB, Track DR + SB Pair </MenuItem>\n                <MenuItem value={\"cross,pair\"}>Watch Cross, Track F2L Pair (will not be implemented, of course)</MenuItem>\n                </Select>\n                {/* <FormHelperText></FormHelperText> */}\n            </FormControl>\n        </Box>\n\n        <Box className={classes.select}>\n            <FormControl>\n                <InputLabel>MoveCount</InputLabel>\n                <Select\n                    value={state.moveCount}\n                    onChange={handleMoveCount}\n                    style={{minWidth: 80}}\n                >\n                <MenuItem value={\"3\"}>3</MenuItem>\n                <MenuItem value={\"4\"}>4</MenuItem>\n                <MenuItem value={\"5\"}>5</MenuItem>\n                <MenuItem value={\"6\"}>6</MenuItem>\n                <MenuItem value={\"7\"}>7</MenuItem>\n                <MenuItem value={\"8\"}>8</MenuItem>\n                </Select>\n                {/* <FormHelperText></FormHelperText> */}\n            </FormControl>\n        </Box>\n\n        <Box className={classes.select}>\n                <TextField\n                    size=\"small\"\n                    value={moveSetText}\n                    label=\"MoveGroup\"\n                    onChange={onMoveSetEdit}\n                />\n                {/* <FormHelperText></FormHelperText> */}\n        </Box>\n                {/* <Box style={{paddingTop: 10}}>\n                <Button\n                    color=\"primary\"\n                    size=\"medium\"\n                    onClick={onMoveSetCommit} >\n                    Confirm\n                </Button>\n                </Box> */}\n                {/* <FormHelperText></FormHelperText> */}\n                {/* <FormHelperText></FormHelperText> */}\n      </Box>\n\n      </Box>\n      </Paper>\n      <Paper className={classes.paper}>\n            <Box style={{paddingBottom: 10, margin: \"0px auto\"}}>\n                <Button color=\"primary\" size=\"medium\"\n                onClick={handleProgress((x) => 0) } >\n                    {\"|<<\"}\n                </Button>\n\n                <Button color=\"primary\" size=\"medium\"\n                onClick={handleProgress((x) => x - 1) } >\n                    {\"<<\"}\n                </Button>\n                <Button color=\"primary\" size=\"medium\"\n                onClick={handleProgress((x) => x + 1) } >\n                    {\">>\"}\n                </Button>\n                <Button color=\"primary\" size=\"medium\"\n                onClick={handleProgress((x) => x + 1) } >\n                    {\">>|\"}\n                </Button>\n            </Box>\n        <Button size=\"medium\" variant=\"outlined\" color=\"primary\" onClick={handleClick}>\n            {state.display === \"hidden\" ? \"Reveal\" : \"Next\" }\n        </Button>\n\n      </Paper>\n      <Paper className={classes.paper} >\n        <Grid container style={{display: \"flex\"}}>\n        <Grid item sm={6} xs={6} style={{display: \"flex\", justifyContent: \"center\"}}>\n          <Box>\n            <CubeSim\n              width={250}\n              height={250}\n              cube={cube1}\n              colorScheme={globalState.colorScheme.getColorsForOri(globalState.cube.ori)}\n              hintDistance={ 5 }\n              theme={getActiveName(globalState.config.theme)}\n              facesToReveal={ [Face.L, Face.B, Face.D]  }\n            />\n          </Box>\n        </Grid>\n\n        <Grid item sm={6} xs={6} style={{display: \"flex\", justifyContent: \"center\"}}>\n          <Box>\n            <CubeSim\n              width={250}\n              height={250}\n              cube={state.display === \"revealed\" ? cube2: FaceletCube.from_cubie(new CubieCube(), Mask.empty_mask) }\n              colorScheme={globalState.colorScheme.getColorsForOri(globalState.cube.ori)}\n              hintDistance={ 5 }\n              theme={getActiveName(globalState.config.theme)}\n              facesToReveal={ [Face.L, Face.B, Face.D]  }\n            />\n          </Box>\n        </Grid>\n        </Grid>\n      </Paper>\n    </Box>\n    )\n}\n\nexport default TrackerView","import React from 'react'\nimport { AppState, Mode, Action } from \"../Types\";\n\nimport { Box, Typography,Button, makeStyles } from '@material-ui/core';\nimport { Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\nimport { Grid, Container } from '@material-ui/core';\n\nimport CmllTrainerView from './CmllTrainerView';\nimport BlockTrainerView from './BlockTrainerView';\nimport PanoramaView from './PanoramaView';\n\n\n//import 'typeface-roboto';\n\nimport FavListView from './FavListView';\nimport TopBarView from './TopBarView';\nimport AnalyzerView from './AnalyzerView';\nimport TrackerView from './TrackerView';\n\nimport Markdown from 'markdown-to-jsx';\n\n\ninterface TabPanelProps {\n  value: number,\n  index: number,\n  children: any,\n  [key: string]: any\n}\nfunction TabPanel(props: TabPanelProps ) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={0}>{children}</Box>}\n    </Typography>\n  );\n}\nconst useStyles = makeStyles(theme => ({\n  page: {\n    backgroundColor: theme.palette.background.default\n  },\n  container: {\n    display: \"flex\"\n  },\n  icon: {\n    minWidth: 0\n  },\n  root: {\n    display: \"flex\"\n  },\n  bar: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.background.paper,\n    //borderRadius: \"5px\"\n  },\n  select: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.background.paper,\n    borderRadius: 4,\n    border: \"1px solid \" + theme.palette.background.default,\n  }\n}))\n\n\nconst modes : Mode[] = [\"analyzer\", \"tracking\", \"fbdr\", \"fs\", \"fb\", \"ss\", \"fbss\", \"cmll\", \"4c\", \"eopair\"]\n\nfunction _getInitialHashLocation() {\n  const default_idx = 2\n  if (window.location.hash) {\n    let idx = (modes as string[]).indexOf(window.location.hash.slice(1))\n    if (idx === -1) {\n      window.location.hash = \"\";\n      return default_idx;\n    } else {\n      return idx;\n    }\n  } else {\n    return default_idx\n  }\n}\n\nconst introText = `# Onionhoney's Roux Trainers\n- A trainer collection that caters to all your Roux training needs  ❤️\n- Inspired by http://cubegrass.appspot.com/, but with everything that it is missing.\n\n## Modes supported\n- FB analyzer\n    - Solves for all x2y FBs, and suggests the best FB to start with!\n    - Other orientations supported too (CN, b/g x2y, etc.)\n- FB last slot (+ DR) trainer \n    - \\`HIGHLY USEFUL\\` if you're learning FB or FB + DR. Get a random scramble, think on your own, and check with our solutions!\n    - **Note**: while I try my best, the solver can still miss out on the best overall solution. So please, consult your human fellows when you're unsure, and always be careful with what you choose to learn.\n- FS/FB/SS trainer \n    - You can specify by piece positions. It seems these modes are pretty useful in providing new insights into blockbuilding  (for us dumb humans).\n- CMLL trainer \n    - Truly random scrambles so you can't tell the cases. You can specify different OCLLs. You can even start with a random SB last pair (to simulate how real recognition works)\n- LSE trainers (EOLR, 4c)\n    - Good for reviewing EOLR and practicing your 4c recognition method. You can filter by MC/Non-MC cases too.\n\n## Shortcuts\n- Space for the next scramble.\n- Enter to reset the virtual cube to current scramble. \n- Control your cube with cstimer key mapping.\n\n## Functionalities\n- Scrambles are all random state. Solver is Roux-optimized with M and r moves as first-class citizens, with up to 25 different solutions provided.\n\n- You can control the virtual cube with keyboard (CStimer mapping). You can also drag on the cube to change its perspective.\n\n- You can bookmark your favorite cases and these will be saved in your browser.\n\n- You can input your own scrambles as a list and our trainer will drain them one by one!\n\n- Appearance: dark mode enabled.\n\n---\n\n## Version Log \n- (v1.0.0) All work prior to 12/02/2020, which I forgot to version log for.\n- (v1.0.1) 12/02/2020: Add edge position control for FB Last Pair trainer.\n- (v1.1) 12/15/2020: Reworked UI. App bar now features a dropdown menu for selecting the mode. Scramble occupies its own row. Solutions are shown side by side with the sim cube in large screen.\n- (v1.2) 12/17/2020: Add support for scramble input for all modes. Now you can paste in a list of scrambles, and the trainer will consume them one by one in order.\n- (v1.3) 12/20/2020: Solve Analysis Beta is online! It can do the following:\n    - For any random scramble, it'll recommend the best FB solutions over all orientations (e.g. x2y yellow/white). \n    - Given a solve reconstruction, it'll analyze each stage, and compare your solution there with the solver-suggested solutions.\n- (v1.4) 12/23/2020: Refine the appearance of the virtual cube and enable camera control with mouse dragging. \n- (v1.5) 2/18/2021: Introduced Tracking Trainer Beta.\n\n---\n\nIf you have ideas on how to improve the app just shoot a message and let me know. <3\n`\n\nfunction Intro() {\n  return <Markdown>{introText}</Markdown>\n}\n\n// TODO: Write getter and setter for config items, and also write handlers that map to setters\nfunction AppView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n  //const [locations, setLocations] = React.useState([])\n  let { state, dispatch } = props\n  let classes = useStyles()\n\n  const handleChange = React.useCallback( (newValue:number) => {\n    if (newValue < modes.length) {\n      setValue(newValue)\n      let mode = modes[newValue]\n      dispatch({type: \"mode\", content: mode})\n    }\n  }, [dispatch])\n\n  const [ open, setOpen ] = React.useState(false)\n\n  const [value, setValue] = React.useState(_getInitialHashLocation());\n  React.useEffect( () => {\n    dispatch({type: \"mode\", content: modes[_getInitialHashLocation()]})\n  }, [])\n\n  const handleInfoOpen = () => { setOpen(true) }\n  const handleInfoClose = () => { setOpen(false) }\n\n  const toggleBright = () => {\n    const theme_flag = [...state.config.theme.flags]\n    theme_flag[0] = 1 - theme_flag[0]\n    theme_flag[1] = 1 - theme_flag[1]\n    dispatch({ type: \"config\", content: {\n      theme: {\n        ...state.config.theme,\n        flags: theme_flag\n    }}})\n  }\n  const toggleFav = () => {\n    setFav(!showFav)\n  }\n\n  const [ showFav, setFav ] = React.useState(false)\n\n  return (\n    <main>\n      <Dialog open={open} onClose={handleInfoClose} >\n      <DialogContent dividers>\n        <Intro></Intro> \n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" onClick={handleInfoClose}>\n          Got it!\n        </Button>\n      </DialogActions>\n      </Dialog>\n\n      <TopBarView onChange={handleChange} value={value}\n        handleInfoOpen={handleInfoOpen} toggleBright={toggleBright} toggleFav={toggleFav}\n      />\n\n\n      <Box paddingY={2}>\n      <Container maxWidth={showFav ? \"lg\" : \"md\" }>\n\n      {\n      value === -1?\n      (\n      <Grid container className={classes.container} spacing={3}>\n        <Grid item md={12} sm={12} xs={12}>\n        <TabPanel value={value} index={4} className={classes.page}>\n          <PanoramaView {...{state, dispatch}} />\n        </TabPanel>\n        </Grid>\n      </Grid>\n      )\n      :\n      (\n      <Grid container className={classes.container} spacing={3}>\n        <Grid item hidden={!showFav} md={4} sm={4} xs={12} >\n        <FavListView {...{state, dispatch}} />\n        </Grid>\n\n        <Grid item md={showFav ? 8 : 12} sm={showFav ? 8 : 12} xs={12}>\n        <TabPanel value={value} index={0} className={classes.page}>\n          <AnalyzerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={1} className={classes.page}>\n          <TrackerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={2} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={3} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={4} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={5} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={6} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={7} className={classes.page}>\n          <CmllTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={8} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={9} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        </Grid>\n      </Grid>\n      )\n      }\n      </Container></Box>\n\n\n\n    </main>\n  )\n}\nexport default AppView","const version = \"1.5.1\"\n\nexport {version}","\nimport { Config, FavCase } from \"./Types\"\nexport const initialFavList : FavCase[] = []\nexport const initialConfig : Config = (() => {\n    let arr_ori_flag = Array(24).fill(0)\n    arr_ori_flag[7] = 1 // YR\n    return {\n        showCube: {\n            label: \"Virtual Cube\",\n            names:[\"Show\", \"Hide\"],\n            flags: [1,0],\n            kind: \"virtual-cube\"\n        },\n        theme: {\n            names: [\"bright\", \"dark\"],\n            flags: [1,0],\n            kind: \"theme\"\n        },\n        evaluator: {\n            label: \"solution sorting metrics\",\n            names: [\"sequential\", \"two-gram\", \"QTM\", \"default\"],\n            flags: [1,0, 0, 0],\n            kind: \"evaluator\"\n        },\n        cmllSelector: {\n            names: [\"o\", \"s\", \"as\", \"t\", \"l\", \"u\", \"pi\", \"h\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"cmll\",\n        },\n        cmllAufSelector: {\n            names: [\"None\", \"U\", \"U'\", \"U2\"],\n            flags: [1, 1, 1, 1],\n            kind: \"u_auf\"\n        },\n        cmllCubeMaskSelector: {\n            names: [\"Show\", \"Hide\", \"Hide LSE\"],\n            flags: [1, 0, 0],\n            kind: \"cube_mask\"\n        },\n        triggerSelector: {\n            names: [\"RUR'\", \"RU'R'\", \"R'U'R\", \"R'UR\", \"RU2R'\", \"R'U2R\"],\n            flags: [0, 0, 0, 0, 0, 0],\n            kind: \"trigger\"\n        },\n        hyperOriSelector: {\n            names: [\"off\", \"L/R\", \"F/B\"],\n            flags: [1 ,0, 0],\n            kind: \"hyperori\"\n        },\n        orientationSelector: {\n            label: \"Color Scheme (U-F)\",\n            names: [\n                \"WG\", \"WB\", \"WO\", \"WR\",\n                \"YG\", \"YB\", \"YO\", \"YR\",\n                \"BW\", \"BY\", \"BO\", \"BR\",\n                \"GW\", \"GY\", \"GO\", \"GR\",\n                \"OW\", \"OY\", \"OB\", \"OG\",\n                \"RW\", \"RY\", \"RB\", \"RG\",\n            ],\n            flags: arr_ori_flag,\n            kind: \"orientation\"\n        },\n        fbdrSelector: {\n            label: \"Position of square\",\n            names: [\"FS at back\", \"FS at front\", \"Either\"],\n            flags: [1, 0, 0],\n            kind: \"fbdr\"\n        },\n        fbdrScrambleSelector: {\n            label: \"Type of scramble\",\n            names: [\"Short (Concerning FBDR Pieces only)\", \"Random State (Entire cube, useful for practicing F2B)\"],\n            flags: [1, 0],\n            kind: \"fbdr-scramble\"\n        },\n        fbOnlySelector: {\n            label: \"Pieces to solve\",\n            names: [\"FB Last Pair + DR\", \"FB Last Pair Only\"],\n            flags: [0, 1],\n            kind: \"fb-only\"\n        },\n        fbPairSolvedSelector: {\n            label: \"Last Pair pattern\",\n            names: [\"Random\", \"Solved(FS at back only)\"],\n            flags: [1, 0],\n            kind: \"fb-pair-solved\"\n        },\n        fbdrPosSelector1: {\n            label: \"Position of FB edge\",\n            names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n                    \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"fbdr-position-1\"\n        },\n        fbdrPosSelector2: {\n            label: \"Position of FB edge\",\n            names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n                    \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"fbdr-position-2\"\n        },\n        fbdrPosSelector3: {\n            label: \"Position of DR\",\n            names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n                    \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"fbdr-position-3\"\n        },\n        fsSelector: {\n            label: \"Position of square\",\n            names: [\"Front FS\", \"Back FS\", \"Both\"],\n            flags: [0, 0, 1],\n            kind: \"fs\"\n        },\n        ssSelector: {\n            label: \"Position of square\",\n            names: [\"SS at front\", \"SS at back\", \"Either\"],\n            flags: [1, 0, 0],\n            kind: \"ss\"\n        },\n        ssEOSelector: {\n            label: \"Orientation of DR\",\n            names: [\"Oriented\", \"Misoriented\", \"Either\"],\n            flags: [1, 0, 0],\n            kind: \"ss-orientation\"\n        },\n        ssPosSelector: {\n            label: \"Position of DR\",\n            names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n                    \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"ss-position\"\n        },\n        ssPairOnlySelector: {\n            label: \"Solve w/wo DR\",\n            names: [\"SS\", \"SB First Pair\"],\n            flags: [1, 0],\n            kind: \"sb-pair-only\"\n        },\n        solutionNumSelector: {\n            label: \"Number of solutions\",\n            names: [\"1\", \"3\", \"5\", \"10\", \"25\"],\n            flags: [0, 0, 1, 0, 0],\n            kind: \"solution-num\"\n        },\n        fbPieceSolvedSelector: {\n            label: \"Difficulty\",\n            names: [\"Hard over x2y(Scramble only)\", \"Hard\", \"DL Solved\", \"BL Solved\", \"Random\"],\n            flags: [1, 0, 0, 0, 0],\n            kind: \"fb-piece-solved\"\n        },\n        fbssLpSelector: {\n            label: \"fbss-lp\",\n            names: [\"FBLP at front\", \"FBLP at back\"],\n            flags: [1, 0],\n            kind: \"fbss\"\n        },\n        fbssSsSelector: {\n            label: \"fbss-ss\",\n            names: [\"SS at front\", \"SS at back\"],\n            flags: [1, 0],\n            kind: \"fbss\"\n        },\n        lseMCSelector: {\n            label: \"Center\",\n            names: [\"Aligned\", \"Misaligned\"],\n            flags: [0, 1],\n            kind: \"lse-mc\"\n        },\n        lseBarSelector: {\n            label: \"EO Pair\",\n            names: [\"ULUR\", \"UFUB\"],\n            flags: [1, 0],\n            kind: \"lse-bar\"\n        },\n        lseStageSelector: {\n            label: \"Stage\",\n            names: [\"4b for MC(1 move EOPair insert)\", \"M2 to 4c\", \"4c\"],\n            flags: [0, 1, 0],\n            kind: \"lse-stage\"\n        },\n        lseEOSelector: {\n            label: \"EO\",\n            names: [\"solved\", \"arrow\", \"4/0\", \"2o/0\", \"2a/0\", \"1/1\", \"6flip\", \"2o/2\", \"0/2\", \"2a/2\"],\n            flags: [0, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"lse-eo\"\n        },\n        lseEOLRMCSelector: {\n            label: \"Center strategy\",\n            names: [\"Non MC only\", \"MC only\", \"Combined\",\"Filter by Non-MC shorter\",  \"Filter by MC shorter\", ],\n            flags: [0, 0, 1, 0, 0],\n            kind: \"lse-eolrmc\"\n        },\n        lseBarbieSelector: {\n            label: \"EOLR / EOLRb\",\n            names: [\"EOLR\", \"EOLRb\"],\n            flags: [1, 0],\n            kind: \"lse-barbie\"\n        },\n        lseEOLRScrambleSelector: {\n            label: \"Type of scramble\",\n            names: [\"Short\", \"Random State\"],\n            flags: [0, 1],\n            kind: \"lse-eolr-scramble\"\n        }\n    }\n})()\n","import { Config, FavCase, Mode } from \"../Types\"\nimport { version } from \"../Version\"\nimport { initialConfig, initialFavList } from \"../Initialization\"\n\nexport type FavCaseStore = {mode: Mode, setup: string, solver: string }\nlet favListManager = function() {\n    const key = \"fav\"\n    let cache : FavCase[] | null = null\n    let getFavList = () => {\n        if (cache) return cache\n        const item = window.localStorage.getItem(key)\n        const item1 : FavCaseStore[] = item ? JSON.parse(item) : initialFavList\n        const item2 : FavCase[] = item1.map( ({mode, setup, solver}) => ({mode, setup, solver: solver.trim().split(\"|\")}) );\n        return item2\n    }\n    let setFavList = (item : FavCase[]) => {\n        const item1 : FavCaseStore[] = item.map(({mode, setup, solver}) => ({mode, setup, solver: solver.join(\"|\")}) );\n        window.localStorage.setItem(key, JSON.stringify(item1));\n        cache = item\n    }\n    return {\n        getFavList,\n        setFavList\n    }\n}()\n\nlet configManager = function() {\n    const key = \"config\"\n    const versionKey = \"version\"\n    let cache : Config | null = null\n\n    let getConfig = () => {\n        if (cache) {\n            return cache\n        }\n        const item = window.localStorage.getItem(key);\n        const vers = window.localStorage.getItem(versionKey)\n\n        const item1 : Partial<Config> = item ? JSON.parse(item) : initialConfig\n\n        if ( vers !== version) {\n            // version out of date\n            // let's preserve orientation\n            let config = initialConfig\n            if (item1.orientationSelector) {\n                config = {...initialConfig, orientationSelector: item1.orientationSelector}\n            }\n            window.localStorage.setItem(key, JSON.stringify(config));\n            window.localStorage.setItem(versionKey, version)\n\n            return config\n        }\n\n        // In rare cases we want to update new attributes but maintain previous version\n        if ( (item1 === null) || (item1 === undefined) || Object.keys(item1).length === 0) {\n            window.localStorage.setItem(key, JSON.stringify(initialConfig));\n            return initialConfig\n        }\n        // we will also add in unseen fields\n        if (Object.keys(item1).length < Object.keys(initialConfig).length) {\n            const item2 = {...initialConfig, ...item1}\n            window.localStorage.setItem(key, JSON.stringify(item2));\n            return item2\n        }\n        return item1 as Config\n    }\n\n    let setConfig = (partial: Partial<Config>) => {\n        let newConfig : Config = Object.assign(getConfig(), partial)\n        window.localStorage.setItem(key, JSON.stringify(newConfig));\n        cache = newConfig\n    }\n\n    return {\n        getConfig,\n        setConfig\n    }\n}()\n\nlet getConfig = configManager.getConfig\nlet setConfig = configManager.setConfig\nlet getFavList = favListManager.getFavList\nlet setFavList = favListManager.setFavList\n\nexport {\n    getConfig, setConfig, getFavList, setFavList\n}\n","import { AppState, Config, FavCase } from \"../Types\";\n/* State Manager\n * \"Passively\" updates localstorage in reduce.\n * Action types\n *  - move: respond to cube move\n *  - replay: replay case\n *  - reactToConfig: respond to changes in config\n */\nexport abstract class AbstractStateM {\n    state: AppState;\n    constructor(state: AppState) {\n        this.state = state;\n    }\n    /* when new moves arrive (from virtual cube control) */\n    abstract onMove(s: string): AppState;\n    /* when global config changes */\n    abstract onConfig(conf: Config): AppState;\n    /* when user clicks a button or presses a key */\n    abstract onControl(s: string): AppState;\n    /* when user replays an item from the favlist */\n    onReplay(case_: FavCase): AppState {\n        return this.state;\n    }\n}\n\nexport class StateFactory {\n    static create = (state: AppState) => {\n        let filler = ( (()=>1) as unknown ) as (state: AppState) => AbstractStateM;\n        return filler(state);\n    }\n}","// source: \"https://sites.google.com/view/kianroux/cmll\" and https://github.com/AshleyF/briefcubing/blob/master/algs.js\n\n//type oll_case = \"o\"|\"h\"|\"pi\"|\"u\"|\"t\"|\"s\"|\"as\"|\"l\"\nimport { Selector } from \"../lib/Selector\";\nimport { rand_choice } from \"./Math\";\n\nconst get_active_names = (sel : Selector) => {\n    let res = []\n    for (let i = 0; i < sel.names.length; i++) {\n        if (sel.flags[i]) {\n            res.push(sel.names[i]);\n        }\n    }\n    return res\n}\n\nexport type AlgDesc = {\n    id: string,\n    algs: string[],\n    setup?: string,\n    kind: string\n}\n\nexport let createAlg = (id: string, alg: string | string[], kind:string, setup?: string) : AlgDesc => ({\n    id, algs:Array.isArray(alg) ? alg : [alg], kind, setup\n})\n\nconst empty_alg = createAlg(\"empty\", \"\", \"any\")\n\nconst cmll_algs : AlgDesc[] = [\n    createAlg(\"o_adjacent_swap\", \"R U R' F' R U R' U' R' F R2 U' R'\", \"cmll\" ),\n    createAlg(\"o_diagonal_swap\", \"F R U' R' U' R U R' F' R U R' U' R' F R F'\", \"cmll\" ),\n    createAlg(\"h_columns\", \"R U R' U R U' R' U R U2 R'\", \"cmll\" ),\n    createAlg(\"h_rows\", \"F R U R' U' R U R' U' R U R' U' F'\", \"cmll\" ),\n    createAlg(\"h_column\", \"U R U2' R2' F R F' U2 R' F R F'\", \"cmll\" ),\n    createAlg(\"h_row\", \"r U' r2' D' r U' r' D r2 U r'\", \"cmll\" ),\n    createAlg(\"pi_right_bar\", \"F R U R' U' R U R' U' F'\", \"cmll\" ),\n    createAlg(\"pi_back_slash\", \"U F R' F' R U2 R U' R' U R U2' R'\", \"cmll\" ),\n    createAlg(\"pi_x_checkerboard\", \"U' R' F R U F U' R U R' U' F'\", \"cmll\" ),\n    createAlg(\"pi_forward_slash\", \"R U2 R' U' R U R' U2' R' F R F'\", \"cmll\" ),\n    createAlg(\"pi_columns\", \"U' r U' r2' D' r U r' D r2 U r'\", \"cmll\" ),\n    createAlg(\"pi_left_bar\", \"U' R' U' R' F R F' R U' R' U2 R\", \"cmll\" ),\n    createAlg(\"u_forward_slash\", \"U2 R2 D R' U2 R D' R' U2 R'\", \"cmll\" ),\n    createAlg(\"u_back_slash\", \"R2' D' R U2 R' D R U2 R\", \"cmll\" ),\n    createAlg(\"u_front_row\", \"R2' F U' F U F2 R2 U' R' F R\", \"cmll\" ),\n    createAlg(\"u_rows\", \"U' F R2 D R' U R D' R2' U' F'\", \"cmll\" ),\n    createAlg(\"u_x_checkerboard\", \"U2 r U' r' U r' D' r U' r' D r\", \"cmll\" ),\n    createAlg(\"u_back_row\", \"U' F R U R' U' F'\", \"cmll\" ),\n    createAlg(\"t_left_bar\", \"U' R U R' U' R' F R F'\", \"cmll\" ),\n    createAlg(\"t_right_bar\", \"U L' U' L U L F' L' F\", \"cmll\" ),\n    createAlg(\"t_rows\", \"F R' F R2 U' R' U' R U R' F2\", \"cmll\" ),\n    createAlg(\"t_front_row\", \"r' U r U2' R2' F R F' R\", \"cmll\" ),\n    createAlg(\"t_back_row\", \"r' D' r U r' D r U' r U r'\", \"cmll\" ),\n    createAlg(\"t_columns\", \"U2 r2' D' r U r' D r2 U' r' U' r\", \"cmll\" ),\n    createAlg(\"s_left_bar\", \"U R U R' U R U2 R'\", \"cmll\" ),\n    createAlg(\"s_x_checkerboard\", \"U L' U2 L U2' L F' L' F\", \"cmll\" ),\n    createAlg(\"s_forward_slash\", \"U F R' F' R U2 R U2' R'\", \"cmll\" ),\n    createAlg(\"s_columns\", \"U2 R' U' R U' R2' F' R U R U' R' F U2' R\", \"cmll\" ),\n    createAlg(\"s_right_bar\", \"U' R U R' U R' F R F' R U2' R'\", \"cmll\" ),\n    createAlg(\"s_back_slash\", \"U R U' L' U R' U' L\", \"cmll\" ),\n    createAlg(\"as_right_bar\", \"U R' U' R U' R' U2' R\", \"cmll\" ),\n    createAlg(\"as_columns\", \"U' R2 D R' U R D' R' U R' U' R U' R'\", \"cmll\" ),\n    createAlg(\"as_back_slash\", \"U' F' L F L' U2' L' U2 L\", \"cmll\" ),\n    createAlg(\"as_x_checkerboard\", \"U' R U2' R' U2 R' F R F'\", \"cmll\" ),\n    createAlg(\"as_forward_slash\", \"U' L' U R U' L U R'\", \"cmll\" ),\n    createAlg(\"as_left_bar\", \"U R U2' R' F R' F' R U' R U' R'\", \"cmll\" ),\n    createAlg(\"l_mirror\", \"F R U' R' U' R U R' F'\", \"cmll\" ),\n    createAlg(\"l_inverse\", \"F R' F' R U R U' R'\", \"cmll\" ),\n    createAlg(\"l_pure\", \"U2 R U2 R' U' R U R' U' R U R' U' R U' R'\", \"cmll\" ),\n    createAlg(\"l_front_commutator\", \"R U2 R D R' U2 R D' R2'\", \"cmll\" ),\n    createAlg(\"l_diag\", \"U2 R' U' R U R' F' R U R' U' R' F R2\", \"cmll\" ),\n    createAlg(\"l_back_commutator\", \"U' R' U2 R' D' R U2 R' D R2\", \"cmll\" )\n]\n\nlet trigger_algs: AlgDesc[] = [\n    createAlg(\"RUR'_1\", \"R U R'\", \"trigger\"),\n    createAlg(\"RUR'_2\", \"r U r'\", \"trigger\"),\n    createAlg(\"RU'R'_1\", \"R U' R'\", \"trigger\"),\n    createAlg(\"RU'R'_2\", \"r U' r'\", \"trigger\"),\n    createAlg(\"R'U'R_1\", \"R' U' R\", \"trigger\"),\n    createAlg(\"R'U'R_2\", \"r' U' r\", \"trigger\"),\n    createAlg(\"R'UR_1\", \"R' U R\", \"trigger\"),\n    createAlg(\"R'UR_2\", \"r' U r\", \"trigger\"),\n    createAlg(\"RU2R'_1\", \"R U2 R'\", \"trigger\"),\n    createAlg(\"RU2R'_2\", \"r U2 r'\", \"trigger\"),\n    createAlg(\"R'U2R_1\", \"R' U2 R\", \"trigger\"),\n    createAlg(\"R'U2R_2\", \"r' U2 r\", \"trigger\"),\n]\n\nlet u_auf_algs: AlgDesc[] = [\n    createAlg(\"U\", \"U\", \"u_auf\"),\n    createAlg(\"U'\", \"U'\", \"u_auf\"),\n    createAlg(\"U2\", \"U2\", \"u_auf\"),\n    createAlg(\"None\", \"\", \"u_auf\"),\n]\n\nlet ori_algs: AlgDesc[] =\n    [\"WG\", \"WB\", \"WO\", \"WR\",\n    \"YG\", \"YB\", \"YO\", \"YR\",\n    \"BW\", \"BY\", \"BO\", \"BR\",\n    \"GW\", \"GY\", \"GO\", \"GR\",\n    \"OW\", \"OY\", \"OB\", \"OG\",\n    \"RW\", \"RY\", \"RB\", \"RG\"].map(s => createAlg(s, \"\", \"orientation\"))\n\nlet lookup_algset = (kind : string) => {\n    switch (kind) {\n        case \"cmll\": return cmll_algs;\n        case \"trigger\": return trigger_algs;\n        case \"orientation\": return ori_algs;\n        case \"u_auf\": return u_auf_algs;\n        default: return []\n    }\n}\n\nlet alg_generator = (selector: Selector) => {\n    let algSet = lookup_algset(selector.kind)\n    let lookup = new Set(get_active_names(selector))\n    let get_prefix = (id: string) => {\n        return id.split(\"_\", 1)[0]\n    }\n    let algs : AlgDesc[] = (() => {\n        return algSet.filter(alg => {\n            let prefix = get_prefix(alg.id);\n            return lookup.has(prefix)\n        })\n    })()\n\n    let next = () => {\n        if (algs.length === 0) {\n            return empty_alg\n        } else {\n            return rand_choice(algs)\n        }\n    }\n    return next\n}\n\nexport { alg_generator }","import { AppState, Config, FavCase } from \"../Types\";\nimport { alg_generator, AlgDesc } from \"../lib/Algs\";\nimport { Face, Typ, FBpairPos } from \"../lib/Defs\";\nimport { CubieCube, CubeUtil, Mask, FaceletCube, MoveSeq } from '../lib/CubeLib';\nimport { Evaluator, getEvaluator } from \"../lib/Evaluator\";\nimport { getActiveName, getActiveNames } from '../lib/Selector';\nimport { CachedSolver } from \"../lib/CachedSolver\";\nimport { rand_choice, arrayEqual } from '../lib/Math';\nimport { AbstractStateM, StateFactory } from \"./AbstractStateM\";\n\nexport abstract class BlockTrainerStateM extends AbstractStateM {\n    abstract solverL: number;\n    abstract solverR: number;\n    scrambleMargin: number = 1;\n    scrambleCount: number = 1;\n    algDescWithMoveCount: string = \"\";\n    expansionFactor = 5;\n    premoves: string[] = [\"\"];\n    orientations: string[] = [\"\"];\n    evaluator : Evaluator;\n\n    abstract getRandom(): [CubieCube, string[]] | [CubieCube, string[], string];\n    constructor(state: AppState) {\n        super(state)\n        let evalName = getActiveName(this.state.config.evaluator)\n        this.evaluator = getEvaluator(evalName)\n    }\n    _solve_with_solvers(cube: CubieCube, solverNames: string[]): AlgDesc[]{\n        const state = this.state;\n        const totalSolutionCap = 0 | (+(getActiveName(state.config.solutionNumSelector) || 5) * this.expansionFactor);\n        const selectedSolutionCap = +(getActiveName(state.config.solutionNumSelector) || 5);\n        let getDesc = (solverName: string) => {\n            const solver = CachedSolver.get(solverName);\n            const premoves = this.premoves || [\"\"]\n            let solutions = premoves.map(pm =>\n                solver\n                .solve(cube.apply(pm), 0, this.solverR, totalSolutionCap)\n                .map(sol => ({pre: pm, sol: sol, score: this.evaluator.evaluate(sol)}) )).flat()\n            solutions.sort((a, b) => a.score - b.score);\n            const toString = (sol: any) =>\n                (sol.pre === \"\" ? \"\" : \"(\" + sol.pre + \") \") + sol.sol.toString(this.algDescWithMoveCount);\n            const algs = solutions.slice(0, selectedSolutionCap).map(toString);\n            let algdesc: AlgDesc = {\n                id: `${solverName}`,\n                algs,\n                kind: `${solverName}`\n            }\n            return algdesc\n        }\n        return solverNames.map(getDesc)\n    }\n\n    _solve(cube: CubieCube, solverNames: string[], options?: {\n        updateSolutionOnly?: boolean, scrambleSolver?: string,\n        scramble?: string,\n    }) {\n        const state = this.state;\n        options = options || {}\n        let algDescs = this._solve_with_solvers(cube, solverNames);\n        const scrambleMargin = 1;\n        let setup : string\n        if (options.scramble) {\n            setup = options.scramble\n        } else if (options.updateSolutionOnly) {\n            setup = this.state.case.desc[0]!.setup!\n        } else {\n            const scramble = options.scrambleSolver === \"min2phase\"?\n            CachedSolver.get(\"min2phase\").solve(cube,0,0,0)[0].inv() :\n            (()=>{\n            const solutionLength = new MoveSeq(algDescs[0].algs[0]).remove_setup().moves.length;\n            return rand_choice(\n                CachedSolver.get(options.scrambleSolver || solverNames[0])\n                .solve(cube, Math.max(this.solverL, solutionLength + scrambleMargin),\n                    this.solverR, this.scrambleCount || 1)).inv()\n            })()\n            setup = scramble.toString()\n        }\n        if (algDescs.length === 0) {\n            algDescs = [{\n                id: `min2phase`,\n                algs: [],\n                setup,\n                kind: `min2phase`\n            }];\n        } else {\n            // populate setup into setup\n            algDescs.forEach(algDesc => algDesc.setup = setup);\n        }\n\n        const ori = (options.updateSolutionOnly) ? this.state.cube.ori : alg_generator(state.config.orientationSelector)().id;\n        const name = options.updateSolutionOnly ? this.state.name : \"hiding\";\n        // console.log(\"algdesc\", algdesc)\n        return {\n            ...state,\n            name: name,\n            cube: {\n                ...state.cube,\n                state: cube,\n                ori\n            },\n            case: {\n                state: new CubieCube().apply(setup),\n                desc: algDescs\n            }\n        };\n    }\n    _updateCase(): AppState {\n        let [cube, solverName, scrambleSolver] = this.getRandom();\n        let inputScramble : string | undefined = undefined\n        if (this.state.scrambleInput.length > 0) {\n            inputScramble = this.state.scrambleInput[0]\n            cube = new CubieCube().apply(inputScramble)\n        }\n        let state = this._solve(cube, solverName, {\n            updateSolutionOnly: false,\n            scrambleSolver,\n            scramble: inputScramble\n        });\n        if (inputScramble) {\n            state = {...state, \n                scrambleInput: state.scrambleInput.slice(1)\n            }\n        }\n        return state\n    }\n    _updateCap(): AppState {\n        const state = this.state;\n        if (state.case.desc.length === 0) {\n            return state;\n        }\n        const [cube, solverNames] = [state.cube.state, state.case.desc!.map(x => x.kind)];\n        return this._solve(cube, solverNames, {\n            updateSolutionOnly:true\n        });\n    }\n    onReplay(case_: FavCase): AppState {\n        const cube = new CubieCube().apply(case_.setup)\n        const state1 = this._solve(cube, case_.solver, {scramble: case_.setup});\n        return {\n            ...state1,\n            mode: case_.mode\n        };\n    }\n    onControl(s: string): AppState {\n        let state = this.state;\n        if (s === \"#space\") {\n            if (state.name === \"revealed\") {\n                return this._updateCase();\n            }\n            else {\n                return {\n                    ...state,\n                    name: \"revealed\"\n                };\n            }\n        }\n        else if (s === \"#enter\") {\n            return {\n                ...state,\n                cube: {\n                    ...state.cube,\n                    state: state.case.state,\n                }\n            };\n        }\n        else {\n            return state;\n        }\n    }\n    onMove(movestr: string): AppState {\n        let state = this.state;\n        let move = new MoveSeq(movestr);\n        let cube = state.cube.state.apply(move);\n        return {\n            ...state,\n            cube: {\n                ...state.cube,\n                state: cube\n            }\n        };\n    }\n    onConfig(conf: Config): AppState {\n        // see if solution cap changed\n        let changed = !arrayEqual(this.state.config.solutionNumSelector.flags, conf.solutionNumSelector.flags);\n        if (changed) {\n            return (StateFactory.create({ ...this.state, config: conf }) as BlockTrainerStateM)._updateCap();\n        }\n        else {\n            return this.state;\n        }\n    }\n}\n// const m_premove = [[], Move.all[\"M\"], Move.all[\"M'\"], Move.all[\"M2\"]];\nexport class FbdrStateM extends BlockTrainerStateM {\n    solverL = 8;\n    solverR = 10;\n    _get_pair_solved_front() {\n        let [cp, co, ep, eo] = rand_choice(FBpairPos);\n        //let mask = Mask.copy(Mask.fs_front_mask)\n        let cube = CubeUtil.get_random_with_mask(Mask.fs_back_mask);\n        for (let i = 0; i < 8; i++) {\n            if (cube.cp[i] === 4) {\n                cube.cp[i] = cube.cp[cp];\n                cube.co[i] = cube.co[cp];\n                cube.cp[cp] = 4;\n                cube.co[cp] = co;\n            }\n        }\n        for (let i = 0; i < 12; i++) {\n            if (cube.ep[i] === 8) {\n                cube.ep[i] = cube.ep[ep];\n                cube.eo[i] = cube.eo[ep];\n                cube.ep[ep] = 8;\n                cube.eo[ep] = eo;\n            }\n        }\n        return cube;\n    }\n    _edge_piece_in_pattern(cube: CubieCube, idx: number, pattern: [number, number][]) {\n        let dr_ep = cube.ep.indexOf(idx);\n        let dr_eo = cube.eo[dr_ep];\n        let good = (pattern.find( ([eo, ep]) => (eo === dr_eo) && (ep === dr_ep)))\n        return good\n    }\n    _get_random_fs_back() {\n        let cube = CubeUtil.get_random_with_mask(Mask.fs_back_mask);\n        for (let i = 0; i < 1000; i++) {\n            if (this._edge_piece_in_pattern(cube, 7, this.allowed_dr) &&\n                this._edge_piece_in_pattern(cube, 8, this.allowed_pedge)) break;\n            cube = CubeUtil.get_random_with_mask(Mask.fs_back_mask);\n        }\n        return cube;\n        //return CubieCube.apply(cube, rand_choice(m_premove));\n    }\n    _get_random_fs_front() {\n        let cube = CubeUtil.get_random_with_mask(Mask.fs_front_mask);\n        for (let i = 0; i < 1000; i++) {\n            if (this._edge_piece_in_pattern(cube, 7, this.allowed_dr) &&\n                this._edge_piece_in_pattern(cube, 9, this.allowed_pedge)) break;\n            cube = CubeUtil.get_random_with_mask(Mask.fs_front_mask);\n        }\n        return cube;;\n        //return CubieCube.apply(cube, rand_choice(m_premove));\n    }\n    edgePositionMap : [number, number][] = [\n        [0, 0], [1, 0],\n        [0, 1], [1, 1],\n        [0, 2], [1, 2],\n        [0, 3], [1, 3],\n        [0, 4], [1, 4],\n        [0, 6], [1, 6],\n        [0, 7], [1, 7],\n        [0, 10], [1, 10],\n        [0, 11], [1, 11]\n    ]\n    allowed_pedge : [number, number][] = []\n    allowed_dr : [number, number][] = []\n    getRandom(): [CubieCube, string[], string] {\n        const fbOnly = getActiveName(this.state.config.fbOnlySelector) === \"FB Last Pair Only\";\n        const pairSolved = getActiveName(this.state.config.fbPairSolvedSelector) !== \"Random\";\n        const scrambleType = getActiveName(this.state.config.fbdrScrambleSelector) || \"Short\";\n        const useMin2PhaseScramble = !scrambleType.startsWith(\"Short\");\n        const solverName = fbOnly ? \"fb\" : \"fbdr\";\n        const scrambleSolver = useMin2PhaseScramble ? \"min2phase\" : solverName\n        let active = getActiveNames(this.state.config.fbdrSelector)[0];\n        //console.log(\"active\", active)\n        this.allowed_pedge = this.state.config.fbdrPosSelector1.flags.map( (value, i) => [value, i])\n            .filter( ([value, i]) => value ).map( ([value, i]) => this.edgePositionMap[i] )\n        this.allowed_dr = this.state.config.fbdrPosSelector3.flags.map( (value, i) => [value, i])\n            .filter( ([value, i]) => value ).map( ([value, i]) => this.edgePositionMap[i] )\n\n        // decide which random scramble generator to use. but prioritize use input if there's any\n        \n        if (active === \"FS at back\") {\n            if (pairSolved)\n                return [this._get_pair_solved_front(), [solverName], scrambleSolver];\n            else\n                return [this._get_random_fs_back(), [solverName], scrambleSolver];\n        }\n        else if (active === \"FS at front\") {\n            return [this._get_random_fs_front(), [solverName], scrambleSolver];\n        }\n        else\n            return [ rand_choice([ () => this._get_random_fs_back(), () => this._get_random_fs_front()])(),\n                [solverName], scrambleSolver];\n    }\n}\nexport class SsStateM extends BlockTrainerStateM {\n    solverL = 9;\n    solverR = 10;\n    _get_random_fb(allowed_dr_eo_ep: [number, number][]) {\n        let active = getActiveName(this.state.config.ssPairOnlySelector);\n        let mask = (active === \"SS\") ? Mask.fb_mask : Mask.fbdr_mask;\n        let cube : CubieCube;\n        while (true) {\n            cube = CubeUtil.get_random_with_mask(mask);\n            if (active !== \"SS\") break;\n            let ep = cube.ep.indexOf(7);\n            let eo = cube.eo[ep];\n            if (allowed_dr_eo_ep.find( ([eo_, ep_]) => (eo === eo_) && (ep === ep_))) {\n                break\n            }\n        }\n        return cube\n    }\n    getRandom(): [CubieCube, string[] ] {\n        let active = getActiveNames(this.state.config.ssSelector)[0];\n        const drPositionMap : [number, number][] = [\n            [0, 0], [1, 0],\n            [0, 1], [1, 1],\n            [0, 2], [1, 2],\n            [0, 3], [1, 3],\n            [0, 4], [1, 4],\n            [0, 6], [1, 6],\n            [0, 7], [1, 7],\n            [0, 10], [1, 10],\n            [0, 11], [1, 11]\n        ]\n        let allowed_dr_eo_ep_patterns = this.state.config.ssPosSelector.flags.map( (value, i) => [value, i])\n            .filter( ([value, i]) => value ).map( ([value, i]) => drPositionMap[i] )\n        let cube = this._get_random_fb(allowed_dr_eo_ep_patterns);\n        let solver;\n        if (active === \"SS at front\") {\n            solver = \"ss-front\";\n        }\n        else if (active === \"SS at back\") {\n            solver = \"ss-back\";\n        }\n        else {\n            solver = rand_choice([\"ss-back\", \"ss-front\"]);\n        }\n        return [cube, [solver] ];\n    }\n}\nexport class FbStateM extends BlockTrainerStateM {\n    solverL: number = 9;\n    solverR: number = 11;\n    //premoves = [\"\", \"x\", \"x'\", \"x2\"];\n    premoves = [\"\", \"x\", \"x'\", \"x2\"];\n\n    _find_center_connected_edges(cube: CubieCube, is_l_only: boolean) {\n        let centers = is_l_only ? [ Face.L ] : [ Face.F, Face.B, Face.L, Face.R]\n        let edges = CubeUtil.stickers.filter(c => c[2] === Typ.E && centers.includes(c[3])\n            && FaceletCube.color_of_sticker(cube, [c[0], c[1], c[2]]) === c[3]);\n        return edges;\n    }\n    _get_random(): [CubieCube, string] {\n        let active = getActiveName(this.state.config.fbPieceSolvedSelector);\n        let mask;\n        if (active === \"Random\")\n            mask = Mask.empty_mask;\n        else if (active === \"DL Solved\")\n            mask = Mask.dl_solved_mask;\n        else if (active === \"BL Solved\")\n            mask = Mask.bl_solved_mask;\n        else if (active === \"Zhouheng Variant\")\n            mask = Mask.zhouheng_mask;\n        else\n            mask = Mask.empty_mask;\n        let cube = CubeUtil.get_random_with_mask(mask);\n\n        let solver = \"fb\";\n        if (active === \"Zhouheng Variant\") {\n            // B F'\n            cube = cube.apply(\"B F'\");\n            solver = \"fbdr\";\n        }\n        const hard_str = \"Hard\";\n        const g_hard_str = \"Hard over x2y(Scramble only)\"\n        if (active === g_hard_str) {\n            solver = \"min2phase\";\n        }\n        if (active !== hard_str && active !== g_hard_str) {\n            return [cube, solver];\n        }\n        let n = 0;\n        let is_l_only = active === hard_str\n        while (true) {\n            let pairs = CubeUtil.find_pairs(cube);\n            let cc_edges = this._find_center_connected_edges(cube, is_l_only);\n            n++;\n            if (pairs.length === 0 && cc_edges.length === 0) {\n                console.log(\"Successful after \" + n + \" tries \");\n                return [cube, solver];\n            }\n            cube = CubeUtil.get_random_with_mask(Mask.empty_mask);\n        }\n    }\n    getRandom() : [CubieCube, string[], string]{\n        let [cube, solver] = this._get_random();\n        return [cube, solver === \"min2phase\" ? [] : [solver], solver ];\n    }\n}\n\n\nexport class FsStateM extends BlockTrainerStateM {\n    solverL = 7;\n    solverR = 11;\n    premoves = [\"\", \"x\", \"x'\", \"x2\"];\n\n    getRandom(): [CubieCube, string[], string] {\n        let cube = CubeUtil.get_random_with_mask(Mask.empty_mask);\n        let name = getActiveName(this.state.config.fsSelector)\n        if (name === \"Front FS\") {\n            return [cube, [\"fs-front\"], \"fb\"]\n        } else if (name === \"Back FS\") {\n            return [cube, [\"fs-back\"], \"fb\"]\n        } else {\n            return [cube, [\"fs-front\", \"fs-back\"], \"fb\" ];\n        }\n    }\n}\n\n\nexport class FbssStateM extends BlockTrainerStateM {\n    solverL = 6;\n    solverR = 10;\n\n    getRandom(): [CubieCube, string[] ] {\n        let active_lp = getActiveName(this.state.config.fbssLpSelector)\n        let active_ss = getActiveName(this.state.config.fbssSsSelector)\n        let cube, solver\n        if (active_lp === \"FBLP at front\") {\n            cube = CubeUtil.get_random_with_mask(Mask.fs_back_mask)\n        } else {\n            cube = CubeUtil.get_random_with_mask(Mask.fs_front_mask)\n        }\n        if (active_ss === \"SS at front\") {\n            solver = \"fbss-front\";\n        } else {\n            solver = \"fbss-back\";\n        }\n        return [cube, [solver] ];\n    }\n}","\nimport { BlockTrainerStateM } from \"./BlockTrainerStateM\";\nimport { Mask, CubeUtil, CubieCube, Move } from \"../lib/CubeLib\";\nimport { getActiveName, getActiveNames } from \"../lib/Selector\";\nimport { rand_choice } from \"../lib/Math\";\nimport { CachedSolver } from \"../lib/CachedSolver\";\n\nexport class LSEStateM extends BlockTrainerStateM {\n    solverL = 5;\n    solverR = 20;\n    scrambleCount = 3;\n    algDescWithMoveCount = \"STM\";\n    getRandom(): [CubieCube, string[]] {\n        /*\n        LSE Modes:\n        pure 4c (UFUB/ULUR, MC/NC)\n        M2 to 4c (same as above)\n        */\n\n        let bars = getActiveName(this.state.config.lseBarSelector)\n\n        let cube = CubeUtil.get_random_with_mask(Mask.lse_4c_mask);\n\n        let move = new Move().from_cube(cube, \"\")\n\n        if (bars === \"UFUB\") {\n            cube = new CubieCube().apply(rand_choice([\"U\", \"U\"])).apply(move)\n        } else {\n            cube = new CubieCube().apply(move)\n        }\n\n        let is_mc = getActiveName(this.state.config.lseMCSelector) === \"Misaligned\";\n        let lse_premove = is_mc ? [Move.all[\"M\"], Move.all[\"M'\"]] : [ [], Move.all[\"M2\"] ]\n        cube = cube.apply(rand_choice(lse_premove))\n\n        let stage = getActiveName(this.state.config.lseStageSelector)\n        if (stage === \"M2 to 4c\")  {\n            cube = cube.apply(rand_choice([\"U M2\", \"U' M2\"])).apply(rand_choice([\"U\", \"U'\", \"U2\", \"id\"]))\n            return [cube, [\"lse\"]];\n        } else if (stage.startsWith(\"4b for MC\")) {\n            cube = cube.apply(rand_choice([\"U M2\", \"U' M2\"])).apply(rand_choice([\"U\", \"U'\", \"U2\", \"id\"]))\n            cube = cube.apply(rand_choice([\"M\", \"M'\"]))\n            cube = cube.apply(rand_choice([\"U\", \"U'\", \"U2\", \"id\"]))\n            return [cube, [\"lse\"]];\n        } else {\n            return [cube, [\"lse\"]];\n        }\n    }\n}\n\nconst lseEODef = [\n    {kind: \"solved\", eo: [0,0,0,0,0,0]},\n    {kind: \"arrow\", eo: [1,1,0,1,1,0]},\n    {kind: \"arrow\", eo: [0,1,1,1,0,1]},\n    {kind: \"4/0\", eo: [1,1,1,1,0,0]},\n    {kind: \"2o/0\", eo: [1,0,1,0,0,0]},\n    {kind: \"2a/0\", eo: [1,1,0,0,0,0]},\n    {kind: \"1/1\", eo: [1,0,0,0,0,1]},\n    {kind: \"1/1\", eo: [0,0,1,0,1,0]},\n    {kind: \"6flip\", eo: [1,1,1,1,1,1]},\n    {kind: \"2o/2\", eo: [0,1,0,1,1,1]},\n    {kind: \"0/2\", eo: [0,0,0,0,1,1]},\n    {kind: \"2a/2\", eo: [0,1,1,0,1,1]},\n]\nconst lseEODefLookup = function() {\n    let map = Object.assign({});\n    lseEODef.forEach( (def) => {\n        map[def.eo.toString()] = def.kind\n    })\n    return map\n}();\n\nexport class EOLRStateM extends BlockTrainerStateM {\n    solverL = 5;\n    solverR = 20;\n    scrambleCount = 3;\n    algDescWithMoveCount = \"STM\";\n\n    _getEOType(cube: CubieCube) {\n        for (let i = 0; i < 4; i++) {\n            let eo_arr = cube.eo.slice(0, 5)\n            eo_arr.push(cube.eo[6])\n            let eo = (lseEODefLookup[eo_arr.toString()])\n            if (eo) {\n\n                console.log(eo, eo_arr)\n                return eo;\n            }\n            cube = cube.apply(\"U\")\n        }\n        return \"Error\"\n    }\n\n    getRandom(): [CubieCube, string[], string] {\n        /*\n        LSE Modes:\n        pure 4c (UFUB/ULUR, MC/NC)\n        M2 to 4c (same as above)\n        */\n\n        let targetEO = rand_choice(getActiveNames(this.state.config.lseEOSelector))\n\n        let cube: CubieCube\n        let count = 0;\n        let eolrMCMode = getActiveName(this.state.config.lseEOLRMCSelector)\n        let compare = eolrMCMode === \"Filter by Non-MC shorter\" || eolrMCMode === \"Filter by MC shorter\"\n        let useBarbie = getActiveName(this.state.config.lseBarbieSelector) === \"EOLRb\"\n        let useFullScramble = getActiveName(this.state.config.lseEOLRScrambleSelector) === \"Random State\"\n\n        while (true) {\n            cube = CubeUtil.get_random_with_mask(Mask.lse_mask);\n            cube = cube.apply(rand_choice([\"id\", \"M2\"]))\n            console.log(\"targetEO\", targetEO)\n\n            if (count++ > 1000) {\n                console.log(\"something wrong\")\n                break\n            }\n\n            if (this._getEOType(cube) !== targetEO)\n                continue\n            if (compare) {\n                let acSolver = useBarbie ? \"eolrac-b\" : \"eolrac\"\n                let mcSolver = useBarbie ? \"eolrmc-b\" : \"eolrmc\"\n                let acLength = CachedSolver.get(acSolver).solve(cube, 0, 20, 1)[0].moves.length\n                let mcLength = CachedSolver.get(mcSolver).solve(cube, 0, 20, 1)[0].moves.length\n                if ( eolrMCMode === \"Filter by Non-MC shorter\" && acLength > mcLength ) continue\n                if ( eolrMCMode === \"Filter by MC shorter\" && mcLength > acLength ) continue\n            }\n            break\n        }\n\n        const ss = useFullScramble? \"lse\" : \"lse-ab4c\";\n        switch (eolrMCMode) {\n            case \"Non MC only\": return [cube, useBarbie ? [\"eolrac-b\"] : [\"eolrac\"], ss];\n            case \"MC only\": return [cube, useBarbie ? [\"eolrmc-b\"] : [\"eolrmc\"], ss];\n            case \"Combined\": return [cube, useBarbie ? [\"eolr-b\"] : [\"eolr\"], ss];\n            case \"Filter by Non-MC shorter\":\n            case \"Filter by MC shorter\": return [cube, useBarbie ? [\"eolr-b\"] : [\"eolr\"], ss];\n            default: return [cube, [\"eolr\"], ss];\n        }\n    }\n}\n","import { AppState, StateT, Config } from \"../Types\";\nimport { alg_generator, AlgDesc, createAlg } from \"../lib/Algs\";\nimport { CubieCube, Move, CubeUtil, MoveSeq } from '../lib/CubeLib';\nimport { AbstractStateM } from \"./AbstractStateM\";\nimport {initialize as min2phase_init, solve as min2phase_solve} from \"../lib/min2phase/min2phase-wrapper\"\nimport { arrayEqual } from \"../lib/Math\";\n\nexport abstract class CmllStateM extends AbstractStateM {\n    _get2PhaseSolution(cube: CubieCube): AlgDesc {\n        // Aha! f = g(b) but you modified b later, and f won't update!\n\n        let m2_away = false\n        if (cube.tp[0] !== 0) {\n            m2_away = true\n            cube = cube.apply(\"M2\")\n        }\n        console.assert(arrayEqual(cube.tp, new CubieCube().tp))\n\n        const transformed_cube = cube.to_cstimer_cube()\n        console.assert( transformed_cube.is_solveable(), \"Cube must be solveable\")\n        min2phase_init();\n        let solution = min2phase_solve(transformed_cube);\n        if (m2_away) {\n            solution += \" M2\"\n        }\n        const algDesc: AlgDesc = createAlg(\"scramble\", solution, \"scramble\")\n        console.log(solution);\n        return algDesc;\n    }\n    _generateCase(): AppState {\n        let state = this.state;\n        let { config } = state;\n        let { cmllSelector, triggerSelector, cmllAufSelector, orientationSelector } = config;\n        let generator = alg_generator(cmllSelector);\n        let trig_generator = alg_generator(triggerSelector);\n        let u_auf_generator = alg_generator(cmllAufSelector);\n        let ori_generator = alg_generator(orientationSelector);\n        let trigger_alg: AlgDesc = trig_generator();\n        let cmll_alg: AlgDesc = generator();\n        let u_auf_alg: AlgDesc = u_auf_generator();\n        let alg_str = trigger_alg.algs + \" \" + u_auf_alg.algs + \" \" + cmll_alg.algs;\n        let moves: Move[] = new MoveSeq(alg_str).inv().moves;\n\n        let lse_cube: CubieCube\n        while (true) {\n            lse_cube = CubeUtil.get_random_lse().apply(moves)\n            if (lse_cube.is_solveable()) {\n                break;\n            }\n        }\n        let solution = this._get2PhaseSolution(lse_cube);\n        // ori based on ...?\n        let ori: string = ori_generator().id;\n        //console.log(\"current ori selector's ori \", ori)\n        return ({\n            ...state,\n            name: \"solving\",\n            cube: {\n                state: lse_cube,\n                ori,\n                history: [],\n            },\n            case: {\n                state: lse_cube,\n                desc: [trigger_alg, u_auf_alg, cmll_alg, solution]\n            },\n        });\n    }\n    onControl(s: string): AppState {\n        let state = this.state;\n        if (s === \"#space\") {\n            // SCRAMBLE\n            // enter cleared solving state based on selection\n            return this._generateCase();\n        }\n        else if (s === \"#enter\") {\n            // REDO\n            return ({\n                ...state,\n                name: \"solving\",\n                cube: {\n                    ...state.cube,\n                    state: state.case.state,\n                    history: []\n                },\n                case: {\n                    ...state.case,\n                }\n            });\n        }\n        else {\n            throw new Error(\"Unrecognized control code\");\n        }\n    }\n    onConfig(conf: Config): AppState {\n        return this.state;\n    }\n}\nexport class SolvingStateM extends CmllStateM {\n    onMove(move: string): AppState {\n        let state = this.state;\n        let moves = new MoveSeq(move).moves;\n        if (moves.length > 0) {\n            let move = moves[0];\n            let cube = state.cube.state.apply(move);\n            let cmll_solved = CubeUtil.is_cmll_solved(cube);\n            let newState: StateT = cmll_solved ? \"solved\" : \"solving\";\n            return ({\n                ...state,\n                cube: {\n                    ...state.cube,\n                    state: state.cube.state.apply(move),\n                    history: [...state.cube.history, move],\n                },\n                name: newState\n            });\n        }\n        else {\n            // Nothing to apply\n            return state;\n        }\n    }\n}\nexport class SolvedStateM extends CmllStateM {\n    onMove(move: string): AppState {\n        return this.state;\n    }\n}\n","import { StateFactory} from './AbstractStateM';\nimport { AppState, Mode } from '../Types';\nimport { FbdrStateM, SsStateM, FbStateM, FsStateM, FbssStateM} from './BlockTrainerStateM';\nimport { LSEStateM, EOLRStateM } from './LSETrainerStateM';\nimport { SolvingStateM, SolvedStateM } from './CmllStateM';\n\nStateFactory.create = function(state: AppState) {\n        let mode: Mode = state.mode;\n        switch (mode) {\n            case \"fbdr\":\n                return new FbdrStateM(state);\n            case \"ss\":\n                return new SsStateM(state);\n            case \"fbss\":\n                return new FbssStateM(state);\n            case \"fs\":\n                return new FsStateM(state);\n            case \"fb\":\n                return new FbStateM(state);\n            case \"cmll\": {\n                switch (state.name) {\n                    case \"solving\": return new SolvingStateM(state);\n                    case \"solved\": return new SolvedStateM(state);\n                    default: throw new Error(\"impossible\");\n                }\n            }\n            case \"4c\":\n                return new LSEStateM(state);\n            case \"eopair\":\n                return new EOLRStateM(state);\n            case \"experimental\":\n                return new FbStateM(state);\n            case \"analyzer\":\n                return new FbStateM(state)\n            case \"tracking\":\n                return new FbStateM(state)\n        }\n        ;\n    }\n\nexport { StateFactory };","import { Action } from \"./Types\";\n\nconst defaultKeyMapping : { [key: string]: string } = {\n    \"I\": \"R\",\n    \"K\": \"R'\",\n    \"W\": \"B\",\n    \"O\": \"B'\",\n    \"S\": \"D\",\n    \"L\": \"D'\",\n    \"D\": \"L\",\n    \"E\": \"L'\",\n    \"J\": \"U\",\n    \"F\": \"U'\",\n    \"H\": \"F\",\n    \"G\": \"F'\",\n    \";\": \"y\",\n    \"A\": \"y'\",\n    \"U\": \"r\",\n    \"R\": \"l'\",\n    \"M\": \"r'\",\n    \"V\": \"l\",\n    \"T\": \"x\",\n    \"Y\": \"x\",\n    \"N\": \"x'\",\n    \"B\": \"x'\",\n    \".\": \"M'\",\n    \"X\": \"M'\",\n    \"5\": \"M\",\n    \"6\": \"M\",\n    \"P\": \"z\",\n    \"Q\": \"z'\",\n    \"Z\": \"d\",\n    \"C\": \"u'\",\n    \",\": \"u\",\n    \"/\": \"d'\",\n    \"ENTER\": \"#enter\",\n    \" \": \"#space\",\n  }\n\n\nconst lseKeyMapping : { [key: string]: string } = {\n    \"I\": \"M'\",\n    \"E\": \"M'\",\n    \"K\": \"M\",\n    \"D\": \"M\",\n    \"J\": \"U\",\n    \"F\": \"U'\",\n    \"S\": \"E'\",\n    \"L\": \"E\",\n    \"ENTER\": \"#enter\",\n    \" \": \"#space\",\n  }\n\n\nexport abstract class KeyMapping {\n    abstract handle(evt: KeyboardEvent, dispatch: React.Dispatch<Action>) : void;\n}\n\nexport class DefaultKeyMapping extends KeyMapping {\n    handle(evt: KeyboardEvent, dispatch: React.Dispatch<Action>) {\n        // do nothing if modifier key is pressed\n        if (evt.altKey || evt.ctrlKey || evt.metaKey) return;\n        let key = evt.key.toUpperCase();\n        if (defaultKeyMapping.hasOwnProperty(key)) {\n            dispatch({\n              type: \"key\", content: defaultKeyMapping[key]\n            });\n        }\n    }\n}\n\nexport class LSEKeyMapping {\n    handle(evt: KeyboardEvent, dispatch: React.Dispatch<Action>) {\n        // do nothing if modifier key is pressed\n        if (evt.altKey || evt.ctrlKey || evt.metaKey) return;\n        let key = evt.key.toUpperCase();\n        if (lseKeyMapping.hasOwnProperty(key)) {\n            dispatch({\n              type: \"key\", content: lseKeyMapping[key]\n            });\n        }\n    }\n}","import { AppState, StateT, Mode } from \"../Types\";\nimport { CubieCube, ColorScheme } from '../lib/CubeLib';\nimport { getConfig, getFavList } from '../lib/LocalStorage';\nimport { getActiveName } from '../lib/Selector';\nimport { DefaultKeyMapping, LSEKeyMapping } from \"../KeyMapping\";\n\n\nexport const getInitialState = (mode?: Mode): AppState => {\n    mode = mode || \"fbdr\";\n    let initialStateName: StateT = function () {\n        switch (mode) {\n            case \"cmll\": return \"solved\";\n            case \"fbdr\":\n            case \"ss\":\n            case \"fb\":\n            case \"4c\":\n            case \"eopair\":\n            case \"fbss\":\n            case \"fs\":\n                return \"revealed\";\n            case \"experimental\":\n                return \"revealed\";\n            case \"analyzer\":\n            case \"tracking\":\n                return \"revealed\"\n        }\n    }();\n    let ori = getActiveName(getConfig().orientationSelector) || \"YR\";\n    return {\n        name: initialStateName,\n        mode,\n        scrambleInput: [],\n        cube: {\n            state: new CubieCube(),\n            ori,\n            history: [],\n        },\n        case: {\n            state: new CubieCube(),\n            desc: []\n        },\n        config: getConfig(),\n        favList: getFavList(),\n        keyMapping: (mode === \"4c\" || mode === \"eopair\") ? new LSEKeyMapping() : new DefaultKeyMapping(),\n        colorScheme: new ColorScheme()\n    };\n};\n","\nimport { AppState, Action, Config, FavListAction } from \"../Types\"\nimport { setConfig, setFavList} from '../lib/LocalStorage';\nimport { StateFactory } from \"./StateFactory\";\nimport { arrayEqual } from \"../lib/Math\";\nimport { getInitialState } from \"./InitialState\";\n\nexport { getInitialState }\nfunction reduceByFavlist(state: AppState, action: FavListAction) {\n    let favList = state.favList;\n\n    switch (action.action) {\n        case \"add\":\n            favList = [...action.content, ...favList]\n            setFavList(favList)\n            break;\n        case \"remove\": {\n        // only remove one at a time for now\n            const rem = action.content[0]\n            favList = favList.filter((value) => {\n                return !(value.mode === rem.mode && value.setup === rem.setup && arrayEqual(value.solver, rem.solver))\n            })\n            setFavList(favList)\n            break;\n        };\n        case \"replay\": {\n            return StateFactory.create(state).onReplay(action.content[0])\n        }\n    }\n    return {\n        ...state,\n        favList\n    }\n}\n\nexport function reducer(state: AppState, action: Action): AppState {\n    // todo: cache values based on this\n    // console.log(\"prev state\", state)\n    switch (action.type) {\n        case \"key\": {\n            let newState = reduceByKey(state, action.content)\n            return newState\n        };\n        case \"config\": {\n            // LESSON: Object.assign is dangerous\n            let newConfig = {...state.config, ...action.content}\n            setConfig(newConfig)\n            let newState = reduceByConfig(state, newConfig)\n            return {\n                ...newState,\n                config: newConfig\n            }\n        };\n        case \"mode\": {\n            let mode = action.content\n            window.location.hash = mode\n            state = getInitialState(mode)\n            return state\n        };\n        case \"scrambleInput\":\n            return {\n                ...state,\n                scrambleInput: action.content\n            }\n        case \"favList\":\n            return reduceByFavlist(state, action)\n        case \"colorScheme\":\n            return {\n                ...state,\n                colorScheme: state.colorScheme.set(action.content)\n            }\n        case \"custom\":\n            return action.content(state)\n        default:\n            return state\n        }\n}\n\n\nfunction reduceByKey(state: AppState, code: string): AppState {\n    if (code === \"\") return state;\n\n    const stateM = StateFactory.create(state)\n    // case match on kind of operation\n    if (code[0] === \"#\") {\n        return stateM.onControl(code)\n    } else {\n        return stateM.onMove(code)\n    }\n}\nfunction reduceByConfig(state: AppState, conf: Config): AppState {\n    const stateM = StateFactory.create(state)\n    // case match on kind of operation\n    return stateM.onConfig(conf)\n}","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  name: \"bright\",\n  palette: {\n    primary: {\n      main: '#556cd6',// '#e0e8ff'//b0c4ee', //\n    },\n    secondary: {\n      main: '#d32f2f',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#eeeeef',\n      paper: '#fff'\n    },\n    text: {\n      primary: '#000',\n      secondary: '#888',\n      hint: '#556cd6'\n    }\n  },\n  /*\n  typography: {\n    \"fontFamily\": `\"Public Sans\", \"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n    \"fontSize\": 14,\n    \"fontWeightLight\": 400,\n    \"fontWeightRegular\": 500,\n    \"fontWeightMedium\": 600\n  }\n  */\n\n});\nconst themeDark = createMuiTheme({\n  name: \"dark\",\n  palette: {\n    primary: {\n      main: '#9FA4C2', // '#757575',\n    },\n    secondary: {\n      main: '#ffffff', //f55057',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#121212',\n      paper: '#252525' //#424242'\n    },\n    text: {\n      primary: '#fff',\n      secondary: '#ddd',\n      hint: '#eee'\n    }\n  },\n  overrides: {\n    // Style sheet name ⚛️\n    MuiDivider: {\n      // Name of the rule\n      // Some CSS\n      root: {\n        backgroundColor: 'rgba(255, 255 ,255, 0.3)',\n      }\n    },\n  }\n\n});\n\nexport { theme, themeDark };","import React from 'react'\nimport AppView from \"../components/AppView\"\nimport { reducer } from '../reducers/Reducer'\nimport { getInitialState } from \"../reducers/InitialState\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { theme, themeDark } from '../theme';\nimport { getActiveName } from '../lib/Selector';\nimport \"typeface-roboto\";\nimport \"fontsource-public-sans\";\n\nwindow.addEventListener('keypress', function(e) {\n  if(e.keyCode === 32 && e.target === document.body) {\n    e.preventDefault();\n  }\n});\n\nfunction App(props: {}) {\n  const [state, dispatch] = React.useReducer( reducer, getInitialState() )\n\n\n\n  const appTheme = getActiveName(state.config.theme) === \"bright\" ? theme : themeDark\n  return (\n    <ThemeProvider theme={appTheme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <AppView state={state} dispatch={dispatch} />\n    </ThemeProvider>\n  )\n}\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root'),\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* eslint-disable */\nfunction createArray(length) {\n\tconst arr = Array(length);\n\tfor (var i=0; i<length; i++) {\n\t\tarr[i] = 0;\n\t}\n\treturn arr;\n}\n\nfunction createArrays(length1, length2) {\n\tconst arr = Array(length1);\n\tfor (var i=0; i<length1; i++) {\n\t\tarr[i] = Array(length2);\n\t\tfor (var j=0; j<length2; j++) {\n\t\t\tarr[i][j] = 0;\n\t\t}\n\t}\n\treturn arr;\n}\n\nfunction bitOdd(i) {\n\ti ^= i >>> 1;\n\ti ^= i >>> 2;\n\ti ^= i >>> 4;\n\ti ^= i >>> 8;\n\treturn i & 1;\n}\n\nfunction bitCount(i) {\n\ti = i - ((i >>> 1) & 0x55555555);\n\ti = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n\treturn (i + (i >>> 8) + (i >>> 4)) & 0x0f;\n}\n\nfunction get4Parity(idx) {\n\tvar p = 0;\n\tfor (var i=2; i>=0; i--) {\n\t\tp += idx % (4-i);\n\t\tidx = ~~(idx / (4-i));\n\t}\n\tp &= 1;\n\treturn p;\n}\n\nfunction get8Parity(idx) {\n\tvar p = 0;\n\tfor (var i=6; i>=0; i--) {\n\t\tp += idx % (8-i);\n\t\tidx = ~~(idx / (8-i));\n\t}\n\tp &= 1;\n\treturn p;\n}\n\nfunction get12Parity(idx) {\n\tvar p = 0;\n\tfor (var i=10; i>=0; i--) {\n\t\tp += idx % (12-i);\n\t\tidx = ~~(idx / (12-i));\n\t}\n\tp &= 1;\n\treturn p;\n}\n\n\nfunction binarySearch(arr, key) {\n\tvar length = arr.length;\n\tif (key <= arr[length-1]) {\n\t\tvar l = 0;\n\t\tvar r = length-1;\n\t\twhile (l <= r) {\n\t\t\tvar mid = (l+r)>>>1;\n\t\t\tvar val = arr[mid];\n\t\t\tif (key > val) {\n\t\t\t\tl = mid + 1;\n\t\t\t} else if (key < val) {\n\t\t\t\tr = mid - 1;\n\t\t\t} else {\n\t\t\t\treturn (mid);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0xffff;\n}\n\nvar fact = [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, 479001600];\nvar perm3 = [[11, 10, 9], [10, 11, 9], [11, 9, 10], [9, 11, 10], [10, 9, 11], [9, 10, 11]];\nvar ud2std = [0, 1, 2, 4, 7, 9, 10, 11, 13, 16];\nvar std2ud = createArray(18);\nvar Cnk = createArrays(12, 13);\nvar move2str = [\"U \", \"U2\", \"U'\", \"R \", \"R2\", \"R'\", \"F \", \"F2\", \"F'\", \"D \", \"D2\", \"D'\", \"L \", \"L2\", \"L'\", \"B \", \"B2\", \"B'\"];\nvar urfMove = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15,16,17], \n\t\t\t\t\t\t\t\t\t\t\t[6, 7, 8, 0, 1, 2, 3, 4, 5,15,16,17, 9,10,11,12,13,14],\n\t\t\t\t\t\t\t\t\t\t\t[3, 4, 5, 6, 7, 8, 0, 1, 2,12,13,14,15,16,17, 9,10,11],\n\t\t\t\t\t\t\t\t\t\t\t[2, 1, 0, 5, 4, 3, 8, 7, 6,11,10, 9,14,13,12,17,16,15], \n\t\t\t\t\t\t\t\t\t\t\t[8, 7, 6, 2, 1, 0, 5, 4, 3,17,16,15,11,10, 9,14,13,12],\n\t\t\t\t\t\t\t\t\t\t\t[5, 4, 3, 8, 7, 6, 2, 1, 0,14,13,12,17,16,15,11,10, 9]];\nfor (var i=0; i<12; i++) {\n\tCnk[i][0] = 1;\n\tCnk[i][i] = 1;\n\tCnk[i][i+1] = 0;\n\tfor (var j=1; j<i; j++) {\n\t\tCnk[i][j] = (Cnk[i-1][j-1] + Cnk[i-1][j]);\n\t}\n}\nfor (var i=0; i<10; i++) {\n\tstd2ud[ud2std[i]] = i;\n}\n\nvar ckmv = Array(19);//new boolean[19][18];\nvar ckmv2 = Array(11);//new boolean[11][10];\nckmv[18] = Array(18);\nckmv2[10] = Array(10);\nfor (var i=0; i<18; i++) {\n\tckmv[i] = Array(18);\n\tfor (var j=0; j<18; j++) {\n\t\tckmv[i][j] = (~~(i/3) == ~~(j/3)) || ((~~(i/3)%3 == ~~(j/3)%3) && (i>=j));\n\t}\n\tckmv[18][i] = false;\n}\nfor (var i=0; i<10; i++) {\n\tckmv2[i] = Array(10);\n\tfor (var j=0; j<10; j++) {\n\t\tckmv2[i][j] = ckmv[ud2std[i]][ud2std[j]];\n\t}\n\tckmv2[10][i] = false;\n}\n\n\n//********************************************************************************//\n\nfunction CubieCube() {\n\tthis.cp = [0, 1, 2, 3, 4, 5, 6, 7];\n\tthis.co = [0, 0, 0, 0, 0, 0, 0, 0];\n\tthis.ep = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\tthis.eo = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\tthis.getFlip = function getFlip() {\n\t\tvar idx = 0;\n\t\tfor (var i=0; i<11; i++) {\n\t\t\tidx |= this.eo[i] << i;\n\t\t}\n\t\treturn idx;\n\t}\n\t\n\tthis.getFlipSym = function getFlipSym() {\n\t\tif (FlipR2S != 0) {\n\t\t\treturn FlipR2S[this.getFlip()];\n\t\t}\n\t\tfor (var k=0; k<16; k+=2) {\n\t\t\tEdgeConjugate(this, SymInv[k], temps);\n\t\t\tvar idx = binarySearch(FlipS2R, temps.getFlip());\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 3) | (k >>> 1));\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tthis.setFlip = function setFlip(idx) {\n\t\tthis.eo[11] = bitOdd(idx);\n\t\tfor (var i=0; i<11; i++) {\n\t\t\tthis.eo[i] = idx & 1;\n\t\t\tidx >>>= 1;\n\t\t}\n\t}\n\t\n\tthis.getTwist = function getTwist() {\n\t\tvar idx = 0;\n\t\tfor (var i=0; i<7; i++) {\n\t\t\tidx *= 3;\n\t\t\tidx += this.co[i];\n\t\t}\n\t\treturn idx;\n\t}\n\t\n\tthis.getTwistSym = function getTwistSym() {\n\t\tif (TwistR2S != null) {\n\t\t\treturn TwistR2S[this.getTwist()];\n\t\t}\n\t\tfor (var k=0; k<16; k+=2) {\n\t\t\tCornConjugate(this, SymInv[k], temps);\n\t\t\tlet idx = binarySearch(TwistS2R, temps.getTwist());\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 3) | (k >>> 1));\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\n\tthis.setTwist = function setTwist(idx) {\n\t\tvar twst = 0;\n\t\tfor (var i=6; i>=0; i--) {\n\t\t\ttwst += this.co[i] = idx % 3;\n\t\t\tidx = ~~(idx/3);\n\t\t}\n\t\tthis.co[7] = (15 - twst) % 3;\n\t}\n\t\n\tthis.getUDSlice = function getUDSlice() {\n\t\tvar idx = 0;\n\t\tvar r = 4;\n\t\tfor (var i=0; i<12; i++) {\n\t\t\tif (this.ep[i] >= 8) {\n\t\t\t\tidx += Cnk[11-i][r];\n\t\t\t\tr--;\n\t\t\t}\n\t\t}\n\t\treturn idx;\n\t}\n\n\tthis.setUDSlice = function setUDSlice(idx) {\n\t\tvar r = 4;\n\t\tfor (var i=0; i<12; i++) {\n\t\t\tif (idx >= Cnk[11-i][r]) {\n\t\t\t\tidx -= Cnk[11-i][r];\n\t\t\t\tr--;\n\t\t\t\tthis.ep[i] = (11-r);\n\t\t\t} else {\n\t\t\t\tthis.ep[i] = (i+r-4);\n\t\t\t}\n\t\t}\n\t}\n\tthis.getMPerm = function getMPerm() {\n\t\tvar m = (1 << this.ep[11]);\t\t\n\t\tvar idx = 0;\n\t\tfor (var i=10; i>=8; --i) {\n\t\t\tvar t = 1 << this.ep[i];\n\t\t\tidx += bitCount(m & (t - 1)) * fact[11-i];\n\t\t\tm |= t;\n\t\t}\n\t\treturn idx;\n\t}\t\n\tthis.setMPerm = function setMPerm(idx) {\n\t\tthis.ep[11] = 8;\n\t\tfor (var i=10; i>=8; i--) {\n\t\t\tthis.ep[i] = (idx % (12-i) + 8);\n\t\t\tidx = ~~(idx / (12-i));\n\t\t\tfor (var j=i+1; j<12; j++) {\n\t\t\t\tif (this.ep[j] >= this.ep[i])\n\t\t\t\t\tthis.ep[j]++;\n\t\t\t}\n\t\t}\t\n\t}\n\t\n\tthis.getMid3 = function getMid3() {\n\t\tvar idxA = 0;\n\t\tvar idxB = 0;\n\t\tvar mask = 0;\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (this.ep[i] >= 9) {\n\t\t\t\tidxA += Cnk[i][r--];\n\t\t\t\tvar t = 1 << this.ep[i];\n\t\t\t\tidxB += bitCount(mask & (t - 1)) * fact[2-r];\n\t\t\t\tmask |= t;\n\t\t\t}\n\t\t}\n\t\treturn (idxA * 6 + idxB);\n\t}\n\t\n\tthis.setMid3 = function setMid3(idxA) {\n\t\tvar edge = perm3[idxA % 6];\n\t\tidxA = ~~(idxA / 6);\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (idxA >= Cnk[i][r]) {\n\t\t\t\tidxA -= Cnk[i][r--];\n\t\t\t\tthis.ep[i] = edge[2-r];\n\t\t\t} else {\n\t\t\t\tthis.ep[i] = (8-i+r);\n\t\t\t}\n\t\t}\t\n\t}\n\t\n\tthis.getURtoUL = function getURtoUL() {\n\t\tvar idxA = 0;\n\t\tvar idxB = 0;\n\t\tvar mask = 0;\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (this.ep[i] <= 2) {\n\t\t\t\tidxA += Cnk[i][r--];\n\t\t\t\tvar t = 1 << this.ep[i];\n\t\t\t\tidxB += bitCount(mask & (t - 1)) * fact[2-r];\n\t\t\t\tmask |= t;\n\t\t\t}\n\t\t}\n\t\treturn (idxA * 6 + idxB);\t\n\t}\n\n\tthis.getDRtoDL = function getDRtoDL() {\n\t\tvar idxA = 0;\n\t\tvar idxB = 0;\n\t\tvar mask = 0;\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (4 <= this.ep[i] && this.ep[i] <= 6) {\n\t\t\t\tidxA += Cnk[i][r--];\n\t\t\t\tvar t = 1 << this.ep[i];\n\t\t\t\tidxB += bitCount(mask & (t - 1)) * fact[2-r];\n\t\t\t\tmask |= t;\n\t\t\t}\n\t\t}\n\t\treturn (idxA * 6 + idxB);\t\n\t}\t\n\n\tthis.setEdgePerm = function setEdgePerm(idx) {\n\t\tthis.ep[11] = 0;\n\t\tfor (var i=10; i>=0; i--) {\n\t\t\tthis.ep[i] = (idx % (12-i));\n\t\t\tidx = ~~(idx/(12-i));\n\t\t\tfor (var j=i+1; j<12; j++) {\n\t\t\t\tif (this.ep[j] >= this.ep[i])\n\t\t\t\t\tthis.ep[j]++;\n\t\t\t}\n\t\t}\t\t\t\n\t}\n\t\n\tthis.getEdgePerm = function getEdgePerm() {\n\t\tvar m = (1 << this.ep[11]);\t\t\n\t\tvar idx = 0;\n\t\tfor (var i=10; i>=0; --i) {\n\t\t\tvar t = 1 << this.ep[i];\n\t\t\tidx += bitCount(m & (t - 1)) * fact[11-i];\n\t\t\tm |= t;\n\t\t}\n\t\treturn idx;\t\t\n\t}\n\n\tthis.getCPermSym = function getCPermSym() {\n\t\tif (EPermR2S != null) {\n\t\t\tvar idx = EPermR2S[get8Perm(this.cp)];\n\t\t\tidx ^= e2c[idx&0x0f];\n\t\t\treturn idx;\n\t\t}\n\t\tfor (var k=0; k<16; k++) {\n\t\t\tCornConjugate(this, SymInv[k], temps);\n\t\t\tvar idx = binarySearch(CPermS2R, get8Perm(temps.cp));\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 4) | k);\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\t\n\tthis.getEPermSym = function getEPermSym() {\t\n\t\tif (EPermR2S != null) {\n\t\t\treturn EPermR2S[get8Perm(this.ep)];\n\t\t}\n\t\tfor (var k=0; k<16; k++) {\n\t\t\tEdgeConjugate(this, SymInv[k], temps);\n\t\t\tvar idx = binarySearch(EPermS2R, get8Perm(temps.ep));\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 4) | k);\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\t\n\n\tthis.URFConjugate = function URFConjugate() {\n\t\tCornMult(urf2, this, temps);\n\t\tCornMult(temps, urf1, this);\t\t\n\t\tEdgeMult(urf2, this, temps);\n\t\tEdgeMult(temps, urf1, this);\t\t    \t\t\n\t}\n\t\n\tthis.invCubieCube = function invCubieCube() {\n\t\tfor (var edge=0; edge<12; edge++)\n\t\t\ttemps.ep[this.ep[edge]] = edge;\n\t\tfor (var edge=0; edge<12; edge++)\n\t\t\ttemps.eo[edge] = this.eo[temps.ep[edge]];\n\t\tfor (var corn=0; corn<8; corn++)\n\t\t\ttemps.cp[this.cp[corn]] = corn;\n\t\tfor (var corn=0; corn<8; corn++) {\n\t\t\tvar ori = this.co[temps.cp[corn]];\n\t\t\ttemps.co[corn] = -ori;\n\t\t\tif (temps.co[corn] < 0)\n\t\t\t\ttemps.co[corn] += 3;\n\t\t}\n\t\tthis.copy(temps);\n\t}\n\n\n\tthis.init = function init(cperm, twist, eperm, flip) {\n\t\tset8Perm(this.cp, cperm);\n\t\tthis.setTwist(twist);\n\t\tthis.setEdgePerm(eperm);\n\t\tthis.setFlip(flip);\n\t}\n\t\n\tthis.copy = function copy(c) {\n\t\tfor (var i=0; i<8; i++) {\n\t\t\tthis.cp[i] = c.cp[i];\n\t\t\tthis.co[i] = c.co[i];\n\t\t}\n\t\tfor (var i = 0; i < 12; i++) {\n\t\t\tthis.ep[i] = c.ep[i];\n\t\t\tthis.eo[i] = c.eo[i];\n\t\t}\n\t}\n}\n\nconst cctemp = new CubieCube();\nconst temps = new CubieCube();\n\nfunction set8Perm(arr, idx) {\n\tvar val = 0x76543210;\n\tfor (var i=0; i<7; i++) {\n\t\tvar p = fact[7-i];\n\t\tvar v = ~~(idx / p);\n\t\tidx %= p;\n\t\tv <<= 2;\n\t\tarr[i] = ((val >> v) & 7);\n\t\tvar m = (1 << v) - 1;\n\t\tval = (val & m) + ((val >> 4) & ~m);\n\t}\n\tarr[7] = val;\n}\n\nfunction get8Perm(arr) {\n\tvar idx = 0;\n\tvar val = 0x76543210;\n\tfor (var i=0; i<7; i++) {\n\t\tvar v = arr[i] << 2;\n\t\tidx = (8 - i) * idx + ((val >> v) & 7);\n\t\tval -= 0x11111110 << v;\n\t}\n\treturn idx;\t\n}\n\nfunction CornMult(a, b, prod) {\n\tfor (var corn=0; corn<8; corn++) {\n\t\tprod.cp[corn] = a.cp[b.cp[corn]];\n\t\tvar oriA = a.co[b.cp[corn]];\n\t\tvar oriB = b.co[corn];\n\t\tvar ori = oriA;\n\t\tori += (oriA<3) ? oriB : 3-oriB;\n\t\tori %= 3;\n\t\tif (oriA < 3 ^ oriB < 3) {\n\t\t\tori += 3;\n\t\t}\n\t\tprod.co[corn] = ori;\n\t}\n}\t\n\nfunction EdgeMult(a, b, prod) {\n\tfor (var ed=0; ed<12; ed++) {\n\t\tprod.ep[ed] = a.ep[b.ep[ed]];\n\t\tprod.eo[ed] = (b.eo[ed] ^ a.eo[b.ep[ed]]);\n\t}\n}\n\nfunction CornConjugate(a, idx, b) {\n\tCornMult(CubeSym[SymInv[idx]], a, cctemp);\n\tCornMult(cctemp, CubeSym[idx], b);\t\t\n}\n\nfunction EdgeConjugate(a, idx, b) {\n\tEdgeMult(CubeSym[SymInv[idx]], a, cctemp);\n\tEdgeMult(cctemp, CubeSym[idx], b);\t\t\n}\n\nvar CubeSym = Array(16);\nvar moveCube = Array(18);\nvar SymInv = Array(16);\nvar SymMult = Array(16);\nvar SymMove = Array(16);\nvar Sym8Mult = Array(8);\nvar Sym8Move = Array(8);\nvar Sym8MultInv = Array(8);\nvar SymMoveUD = Array(16);\nvar FlipS2R = Array(336);\nvar TwistS2R = Array(324);\nvar CPermS2R = Array(2768);\nvar EPermS2R = CPermS2R;\nvar FlipR2S = Array(2048);\nvar TwistR2S = Array(2187);\nvar EPermR2S = createArray(40320);\nfor (var i=0; i<40320; i++) {\n\tEPermR2S[i] = 0;\n}\nvar MtoEPerm = Array(40320);\nvar merge = Array(56);\nvar e2c = [0, 0, 0, 0, 1, 3, 1, 3, 1, 3, 1, 3, 0, 0, 0, 0];\nconst urf1 = new CubieCube();\nurf1.init(2531, 1373, 67026819, 1877);\nconst urf2 = new CubieCube();\nurf2.init(2089, 1906, 322752913, 255);\n\n\nfunction CubieInit() {\n\tvar mc = Array(6);\n\tmc[0] = new CubieCube();\n\tmc[0].init(15120, 0, 119750400, 0);\n\tmc[1] = new CubieCube();\n\tmc[1].init(21021, 1494, 323403417, 0);\n\tmc[2] = new CubieCube();\n\tmc[2].init(8064, 1236, 29441808, 802);\n\tmc[3] = new CubieCube();\n\tmc[3].init(9, 0, 5880, 0);\n\tmc[4] = new CubieCube();\n\tmc[4].init(1230, 412, 2949660, 0);\n\tmc[5] = new CubieCube();\n\tmc[5].init(224, 137, 328552, 1160);\n\tfor (var m=0; m<6; m++) {\n\t\tmoveCube[m*3] = mc[m];\n\t\tfor (var p=0; p<2; p++) {\n\t\t\tmoveCube[m*3+p+1] = new CubieCube();\n\t\t\tEdgeMult(moveCube[m*3+p], mc[m], moveCube[m*3+p+1]);\n\t\t\tCornMult(moveCube[m*3+p], mc[m], moveCube[m*3+p+1]);\n\t\t}\n\t}\n\tvar c = new CubieCube();\n\tvar d = new CubieCube();\n\tvar temp;\n\tvar f2 = new CubieCube();\n\tf2.init(28783, 0, 259268407, 0);\n\tvar u4 = new CubieCube();\n\tu4.init(15138, 0, 119765538, 1792);\n\tvar lr2 = new CubieCube();\n\tlr2.init(5167, 0, 83473207, 0);\n\tlr2.co = [ 3, 3, 3, 3, 3, 3, 3, 3 ];\n\tfor (var i=0; i<16; i++) {\n\t\tSymMult[i] = Array(16);\n\t\tSymMove[i] = Array(18);\n\t\tSymMoveUD[i] = Array(10);\n\t\tCubeSym[i] = new CubieCube();\n\t\tCubeSym[i].copy(c);\n\t\tCornMult(c, u4, d);\n\t\tEdgeMult(c, u4, d);\n\t\ttemp = d;\td = c;\tc = temp;\n\t\tif (i % 4 == 3) {\n\t\t\tCornMult(c, lr2, d);\n\t\t\tEdgeMult(c, lr2, d);\n\t\t\ttemp = d;\td = c;\tc = temp;\t\t\t\t\n\t\t}\n\t\tif (i % 8 == 7) {\n\t\t\tCornMult(c, f2, d);\n\t\t\tEdgeMult(c, f2, d);\n\t\t\ttemp = d;\td = c;\tc = temp;\n\t\t}\n\t}\n\n\tfor (var j=0; j<16; j++) {\n\t\tfor (var k=0; k<16; k++) {\n\t\t\tCornMult(CubeSym[j], CubeSym[k], c);\n\t\t\tif (c.cp[0] == 0 && c.cp[1] == 1 && c.cp[2] == 2) {\n\t\t\t\tSymInv[j] = k;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tfor (var i=0; i<16; i++) {\n\t\tfor (var j=0; j<16; j++) {\n\t\t\tCornMult(CubeSym[i], CubeSym[j], c);\n\t\t\tfor (var k=0; k<16; k++) {\n\t\t\t\tif (CubeSym[k].cp[0] == c.cp[0] && CubeSym[k].cp[1] == c.cp[1] && CubeSym[k].cp[2] == c.cp[2]) {\n\t\t\t\t\tSymMult[i][j] = k;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (var j=0; j<18; j++) {\n\t\tfor (var s=0; s<16; s++) {\n\t\t\tCornConjugate(moveCube[j], SymInv[s], c);\n\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\tvar found = 1;\n\t\t\t\tfor (var i=0; i<8; i++) {\n\t\t\t\t\tif (c.cp[i] != moveCube[m].cp[i] || c.co[i] != moveCube[m].co[i]) {\n\t\t\t\t\t\tfound = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (found) {\n\t\t\t\t\tSymMove[s][j] = m;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (var j=0; j<10; j++) {\n\t\tfor (var s=0; s<16; s++) {\n\t\t\tSymMoveUD[s][j] = std2ud[SymMove[s][ud2std[j]]];\n\t\t}\n\t}\n\tfor (var j=0; j<8; j++) {\n\t\tSym8Mult[j] = Array(8);\n\t\tSym8Move[j] = Array(18);\n\t\tSym8MultInv[j] = Array(8);\n\t\tfor (var s=0; s<8; s++) {\n\t\t\tSym8Mult[j][s] = (SymMult[j<<1][s<<1]>>>1);\n\t\t}\n\t}\n\tfor (var j=0; j<18; j++) {\n\t\tfor (var s=0; s<8; s++) {\n\t\t\tSym8Move[s][j] = SymMove[s<<1][j];\n\t\t}\n\t}\n\tfor (var j=0; j<8; j++) {\n\t\tfor (var s=0; s<8; s++) {\n\t\t\tSym8MultInv[j][s] = Sym8Mult[j][SymInv[s<<1]>>1];\n\t\t}\n\t}\n\n\tconst occ = new Array(1260);\n\n\tvar count = 0;\n\tfor (var i=0; i<64; occ[i++] = 0);\n\n\tfor (var i=0; i<2048; i++) {\n\t\tif ((occ[i>>>5]&(1<<(i&0x1f))) == 0) {\n\t\t\tc.setFlip(i);\n\t\t\tfor (var s=0; s<16; s+=2) {\n\t\t\t\tEdgeConjugate(c, s, d);\n\t\t\t\tvar idx = d.getFlip();\n\t\t\t\tocc[idx>>>5] |= 1<<(idx&0x1f);\n\t\t\t\tFlipR2S[idx] = ((count << 3) | (s >>> 1));\n\t\t\t}\n\t\t\tFlipS2R[count++] = i;\n\t\t}\n\t}\n//\talert(count);\n\tcount = 0;\n\tfor (var i=0; i<69; occ[i++] = 0);\n\tfor (var i=0; i<2187; i++) {\n\t\tif ((occ[i>>>5]&(1<<(i&0x1f))) == 0) {\n\t\t\tc.setTwist(i);\n\t\t\tfor (var s=0; s<16; s+=2) {\n\t\t\t\tCornConjugate(c, s, d);\n\t\t\t\tvar idx = d.getTwist();\n\t\t\t\tocc[idx>>>5] |= 1<<(idx&0x1f);\n\t\t\t\tTwistR2S[idx] =  ((count << 3) | (s >>> 1));\n\t\t\t}\n\t\t\tTwistS2R[count++] = i;\n\t\t}\n\t}\n//\talert(count);\n\n\tvar mask = Array(56);\n\tfor (var i=0; i<56; i++) {\n\t\tmask[i] = Array(2);\n\t\tmerge[i] = Array(56);\n\t}\n\tfor (var i=0; i<40320; i++) {\n\t\tset8Perm(c.ep, i);\n\t\tvar a = ~~(c.getURtoUL() / 6);\n\t\tvar b = ~~(c.getDRtoDL() / 6);\n\t\tmask[a][b>>>5] |= 1 << (b&0x1f);\n\t}\n\t\n\tfor (var i=0; i<56; i++) {\n\t\tcount = 0;\n\t\tfor (var j=0; j<56; j++) {\n\t\t\tif ((mask[i][j>>>5]&(1<<(j&0x1f))) != 0) {\n\t\t\t\tmerge[i][j] = count++;\n\t\t\t}\n\t\t}\n\t}\n\tcount = 0;\n\tfor (var i=0; i<1260; occ[i++] = 0);\n\tfor (var i=0; i<40320; i++) {\n\t\tif ((occ[i>>>5]&(1<<(i&0x1f))) == 0) {\n\t\t\tset8Perm(c.ep, i);\n\t\t\tfor (var s=0; s<16; s++) {\n\t\t\t\tEdgeConjugate(c, s, d);\n\t\t\t\tvar idx = get8Perm(d.ep);\n\t\t\t\tocc[idx>>>5] |= 1<<(idx&0x1f);\n\t\t\t\tvar a = d.getURtoUL();\n\t\t\t\tvar b = d.getDRtoDL();\n\t\t\t\tvar m = (merge[~~(a/6)][~~(b/6)] * 4032 + a * 12 + b % 6 * 2 + get8Parity(idx));\n\t\t\t\tMtoEPerm[m] = (count << 4 | s);\n\t\t\t\tEPermR2S[idx] = (count << 4 | s);\n\t\t\t}\n\t\t\tEPermS2R[count++] = i;\n\t\t}\n\t}\n}\n\nvar UDSliceMove = Array(495);//new char[495][18];\nvar TwistMove = Array(324);//new char[324][18];\nvar FlipMove = Array(336);//new char[336][18];\nvar UDSliceConj = Array(495);//new char[495][8];\nvar UDSliceTwistPrun = Array(495*324);//new byte[495 * 324];\nvar UDSliceFlipPrun = Array(495*336);//new byte[495 * 336];\n\t\nvar TwistFlipPrun = Array(336*324*8);//new byte[336 * 324 * 8];\n\t\n\t//phase1to2\nvar Mid3Move = Array(1320);//new char[1320][18];\nvar Mid32MPerm = Array(24);//new byte[24];\nvar CParity = Array(87);//new byte[2768/8];\n\n\t//phase2\nvar CPermMove = Array(2768);//new char[2768][18];\nvar EPermMove = Array(2768);//new char[2768][10];\nvar MPermMove = Array(24);//new byte[24][10];\nvar MPermConj = Array(24);//new byte[24][16];\nvar MCPermPrun = Array(24*2768);//new byte[24*2768];\nvar MEPermPrun = Array(24*2768);//new byte[24*2768];\n\n\nfunction CoordInit() {\n\tvar c = new CubieCube();\n\tvar d = new CubieCube();\n\tvar i, j;\n\tfor (i=0; i<2768; i++) {\n\t\tCPermMove[i] = Array(18);\n\t\tset8Perm(c.cp, CPermS2R[i]);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tCornMult(c, moveCube[j], d);\n\t\t\tCPermMove[i][j] = d.getCPermSym();\n\t\t}\n\t}\t\t\n\tfor (i=0; i<2768; i++) {\n\t\tEPermMove[i] = Array(10);\n\t\tset8Perm(c.ep, EPermS2R[i]);\n\t\tfor (j=0; j<10; j++) {\n\t\t\tEdgeMult(c, moveCube[ud2std[j]], d);\n\t\t\tEPermMove[i][j] = d.getEPermSym();\n\t\t}\n\t}\n\tfor (i=0; i<336; i++) {\n\t\tFlipMove[i] = Array(18);\n\t\tc.setFlip(FlipS2R[i]);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tEdgeMult(c, moveCube[j], d);\n\t\t\tFlipMove[i][j] = d.getFlipSym();\n\t\t}\n\t}\n\tfor (i=0; i<324; i++) {\n\t\tTwistMove[i] = Array(18);\n\t\tc.setTwist(TwistS2R[i]);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tCornMult(c, moveCube[j], d);\n\t\t\tTwistMove[i][j] = d.getTwistSym();\n\t\t}\n\t}\n\tfor (i=0; i<495; i++) {\n\t\tUDSliceMove[i] = Array(18);\n\t\tc.setUDSlice(i);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tEdgeMult(c, moveCube[j], d);\n\t\t\tUDSliceMove[i][j] = d.getUDSlice();\n\t\t}\n\t}\n\tfor (i=0; i<495; i++) {\n\t\tUDSliceConj[i] = Array(8);\n\t\tc.setUDSlice(i);\n\t\tfor (j=0; j<16; j+=2) {\n\t\t\tEdgeConjugate(c, SymInv[j], d);\n\t\t\tUDSliceConj[i][j>>>1] = d.getUDSlice();\n\t\t}\n\t}\n\tfor (i=0; i<1320; i++) {\n\t\tMid3Move[i] = Array(18);\n\t\tc.setMid3(i);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tEdgeMult(c, moveCube[j], d);\n\t\t\tMid3Move[i][j] = d.getMid3();\n\t\t}\n\t}\t\n\tfor (i=0; i<24; i++) {\n\t\tc.setMPerm(i);\n\t\tMid32MPerm[c.getMid3() % 24] = i;\n\t}\n\tfor (i=0; i<2768; i++) {\n\t\tCParity[i>>>3] |= (get8Parity(CPermS2R[i])) << (i & 7);\n\t}\n\tfor (i=0; i<24; i++) {\n\t\tMPermMove[i] = Array(10);\n\t\tc.setMPerm(i);\n\t\tfor (j=0; j<10; j++) {\n\t\t\tEdgeMult(c, moveCube[ud2std[j]], d);\n\t\t\tMPermMove[i][j] = d.getMPerm();\n\t\t}\n\t}\t\t\n\tfor (i=0; i<24; i++) {\n\t\tMPermConj[i] = Array(16);\n\t\tc.setMPerm(i);\n\t\tfor (j=0; j<16; j++) {\n\t\t\tEdgeConjugate(c, SymInv[j], d);\n\t\t\tMPermConj[i][j] = d.getMPerm();\n\t\t}\n\t}\n\t\n\tvar SymState = Array(324);\n\tfor (i=0; i<324; i++) {\n\t\tc.setTwist(TwistS2R[i]);\n\t\tfor (var j=0; j<8; j++) {\n\t\t\tCornConjugate(c, j<<1, d);\n\t\t\tif (binarySearch(TwistS2R, d.getTwist()) != 0xffff) {\n\t\t\t\tSymState[i] |= (1 << j);\n\t\t\t}\n\t\t}\n\t}\n\tvar SymStateF = Array(324);\n\tfor (i=0; i<336; i++) {\n\t\tc.setFlip(FlipS2R[i]);\n\t\tfor (var j=0; j<8; j++) {\n\t\t\tEdgeConjugate(c, j<<1, d);\n\t\t\tif (binarySearch(FlipS2R, d.getFlip()) != 0xffff) {\n\t\t\t\tSymStateF[i] |= (1 << j);\n\t\t\t}\n\t\t}\n\t}\t\t\n\tfor (i=0; i<336*324*8; i++) {\n\t\tTwistFlipPrun[i] = -1;\n\t}\n\tfor (i=0; i<8; i++) {\n\t\tTwistFlipPrun[i] = 0;\n\t}\n\tvar depth = 0;\n\tvar done = 8;\n\tvar inv;\n\tvar select;\n\tvar check;\n\t\n\twhile (done < 336*324*8) {\n\t\tinv = depth > 6;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<336*324*8; i++) {\n\t\t\tif (TwistFlipPrun[i] != select)\n\t\t\t\tcontinue;\n\t\t\tvar twist = ~~(i / 2688);\n\t\t\tvar flip = i % 2688;\n\t\t\tvar fsym = i & 7;\n\t\t\tflip >>>= 3;\n\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\tvar twistx = TwistMove[twist][m];\n\t\t\t\tvar tsymx = twistx & 7;\n\t\t\t\ttwistx >>>= 3;\n\t\t\t\tvar flipx = FlipMove[flip][Sym8Move[fsym][m]];\n\t\t\t\tvar fsymx = Sym8MultInv[Sym8Mult[flipx & 7][fsym]][tsymx];\n\t\t\t\tflipx >>>= 3;\n\t\t\t\tvar idx = twistx * 2688 + (flipx << 3 | fsymx);\n\t\t\t\tif (TwistFlipPrun[idx] == check) {\n\t\t\t\t\tdone++;\n\t\t\t\t\tif (inv) {\n\t\t\t\t\t\tTwistFlipPrun[i] = depth;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tTwistFlipPrun[idx] = depth;\n\t\t\t\t\t\tvar sym = SymState[twistx];\n\t\t\t\t\t\tvar symF = SymStateF[flipx];\n\t\t\t\t\t\tif (sym != 1 || symF != 1) {\n\t\t\t\t\t\t\tfor (var j=0; j<8; j++, symF >>= 1) {\n\t\t\t\t\t\t\t\tif ((symF & 1) == 1) {\n\t\t\t\t\t\t\t\t\tvar fsymxx = Sym8MultInv[fsymx][j];\n\t\t\t\t\t\t\t\t\tfor (var k=0; k<8; k++) {\n\t\t\t\t\t\t\t\t\t\tif ((sym & (1 << k)) != 0) {\n\t\t\t\t\t\t\t\t\t\t\tvar idxx = twistx * 2688 + (flipx << 3 | Sym8MultInv[fsymxx][k]);\n\t\t\t\t\t\t\t\t\t\t\tif (TwistFlipPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\t\tTwistFlipPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\n\tfor (i=0; i<495*324; i++) {\n\t\tUDSliceTwistPrun[i] = -1;\n\t}\n\tUDSliceTwistPrun[0] = 0;\n\tdepth = 0;\n\tdone = 1;\n\twhile (done < 495 * 324) {\n\t\tinv = depth > 6;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<495*324; i++) {\n\t\t\tif (UDSliceTwistPrun[i] == select) {\n\t\t\t\tvar slice = i % 495;\n\t\t\t\tvar twist = ~~(i / 495);\n\t\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\t\tvar twistx = TwistMove[twist][m];\n\t\t\t\t\tvar symx = twistx & 7;\n\t\t\t\t\tvar slicex = UDSliceConj[UDSliceMove[slice][m]][symx];\n\t\t\t\t\ttwistx >>>= 3;\n\t\t\t\t\tvar idx = twistx * 495 + slicex;\n\t\t\t\t\tif (UDSliceTwistPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tUDSliceTwistPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tUDSliceTwistPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymState[twistx];\n\t\t\t\t\t\t\tif (sym != 1) {\n\t\t\t\t\t\t\t\tfor (var j=1; j<8; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = twistx * 495 + UDSliceConj[slicex][j];\n\t\t\t\t\t\t\t\t\t\tif (UDSliceTwistPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tUDSliceTwistPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\t\t\n\n\tfor (i=0; i<495*336; i++) {\n\t\tUDSliceFlipPrun[i] = -1;\n\t}\n\tUDSliceFlipPrun[0] = 0;\n\tdepth = 0;\n\tdone = 1;\n\twhile (done < 495 * 336) {\n\t\tinv = depth > 6;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<495*336; i++) {\n\t\t\tif (UDSliceFlipPrun[i] == select) {\n\t\t\t\tvar slice = i % 495;\n\t\t\t\tvar flip = ~~(i / 495);\n\t\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\t\tvar flipx = FlipMove[flip][m];\n\t\t\t\t\tvar symx = flipx & 7;\n\t\t\t\t\tvar slicex = UDSliceConj[UDSliceMove[slice][m]][symx];\n\t\t\t\t\tflipx >>>= 3;\n\t\t\t\t\tvar idx = flipx * 495 + slicex;\n\t\t\t\t\tif (UDSliceFlipPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tUDSliceFlipPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tUDSliceFlipPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymStateF[flipx];\n\t\t\t\t\t\t\tif (sym != 1) {\n\t\t\t\t\t\t\t\tfor (var j=1; j<8; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = flipx * 495 + UDSliceConj[slicex][j];\n\t\t\t\t\t\t\t\t\t\tif (UDSliceFlipPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tUDSliceFlipPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tdepth++;\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\t\n\t\n\tSymState = Array(2768);\n\tfor (i=0; i<2768; i++) {\n\t\tset8Perm(c.ep, EPermS2R[i]);\n\t\tfor (j=1; j<16; j++) {\n\t\t\tEdgeConjugate(c, j, d);\n\t\t\tif (binarySearch(EPermS2R, get8Perm(d.ep)) != 0xffff) {\n\t\t\t\tSymState[i] |= (1 << j);\n\t\t\t}\n\t\t}\n\t}\n\tfor (i=0; i<24*2768; i++) {\n\t\tMEPermPrun[i] = -1;\n\t}\n\tMEPermPrun[0] = 0;\n\twhile (done < 24*2768) {\n\t\tinv = depth > 7;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<24*2768; i++) {\n\t\t\tif (MEPermPrun[i] == select) {\n\t\t\t\tvar mid = i % 24;\n\t\t\t\tvar edge = ~~(i / 24);\n\t\t\t\tfor (var m=0; m<10; m++) {\n\t\t\t\t\tvar edgex = EPermMove[edge][m];\n\t\t\t\t\tvar symx = edgex & 15;\n\t\t\t\t\tvar midx = MPermConj[MPermMove[mid][m]][symx];\n\t\t\t\t\tedgex >>>= 4;\n\t\t\t\t\tvar idx = edgex * 24 + midx;\n\t\t\t\t\tif (MEPermPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tMEPermPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tMEPermPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymState[edgex];\n\t\t\t\t\t\t\tif (sym != 0) {\n\t\t\t\t\t\t\t\tfor (j=1; j<16; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = edgex * 24 + MPermConj[midx][j];\n\t\t\t\t\t\t\t\t\t\tif (MEPermPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tMEPermPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\t\t\n\t\t\n\tfor (i=0; i<24*2768; i++) {\n\t\tMCPermPrun[i] = -1;\n\t}\n\tMCPermPrun[0] = 0;\n\tdepth = 0;\n\tdone = 1;\n\twhile (done < 24*2768) {\n\t\tinv = depth > 7;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<24*2768; i++) {\n\t\t\tif (MCPermPrun[i] == select) {\n\t\t\t\tvar mid = i % 24;\n\t\t\t\tvar corn = ~~(i / 24);\n\t\t\t\tfor (var m=0; m<10; m++) {\n\t\t\t\t\tvar cornx = CPermMove[corn][ud2std[m]];\n\t\t\t\t\tvar symx = (cornx & 15);\n\t\t\t\t\tvar midx = MPermConj[MPermMove[mid][m]][symx];\n\t\t\t\t\tcornx >>>= 4;\n\t\t\t\t\tvar idx = cornx * 24 + midx;\n\t\t\t\t\tif (MCPermPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tMCPermPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tMCPermPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymState[cornx];\n\t\t\t\t\t\t\tif (sym != 0) {\n\t\t\t\t\t\t\t\tfor (j=1; j<16; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = cornx * 24 + MPermConj[midx][j ^ e2c[j]];\n\t\t\t\t\t\t\t\t\t\tif (MCPermPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tMCPermPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\n}\t\t\t\t\t\n\nfunction randomCube() {\n\tvar eperm;\n\tvar cperm;\n\tdo {\n\t\teperm = ~~(Math.random() * 479001600);\n\t\tcperm = ~~(Math.random() * 40320);\n\t} while (((get8Parity(cperm) ^ get12Parity(eperm))) != 0);\n\tvar c = new CubieCube();\n\tc.init(cperm, ~~(Math.random() * 2187), eperm, ~~(Math.random() * 2048));\n\treturn c;\n}\n\nvar move = Array(31);\n\nvar corn = Array(20);\nvar csym = Array(20);\nvar mid3 = Array(20);\nvar e1 = Array(20);\nvar e2 = Array(20);\nvar urfidx;\n\nvar twist = Array(6);\nvar tsym = Array(6);\nvar flip = Array(6);\nvar fsym = Array(6);\nvar slice = Array(6);\nvar corn0 = Array(6);\nvar csym0 = Array(6);\nvar mid30 = Array(6);\nvar e10 = Array(6);\nvar e20 = Array(6);\nvar prun = Array(6);\n\nvar length1 = 0;\nvar maxlength2 = 0;\nvar sol = 999;\nvar valid1 = 0;\nvar valid2 = 0;\nvar solution = \"\";\nvar useSeparator = false;\n\nfunction Solve(c) {\n\tc.temps = new CubieCube();\n\tfor (var i=0; i<6; i++) {\n\t\ttwist[i] = c.getTwistSym();\n\t\ttsym[i] = twist[i] & 7;\n\t\ttwist[i] >>>= 3;\n\t\tflip[i] = c.getFlipSym();\n\t\tfsym[i] = flip[i] & 7;\n\t\tflip[i] >>>= 3;\n\t\tslice[i] = c.getUDSlice();\n\t\tcorn0[i] = c.getCPermSym();\n\t\tcsym0[i] = corn0[i] & 15;\n\t\tcorn0[i] >>>= 4;\n\t\tmid30[i] = c.getMid3();\n\t\te10[i] = c.getURtoUL();\n\t\te20[i] = c.getDRtoDL();\n\t\tprun[i] = Math.max(Math.max(UDSliceTwistPrun[twist[i] * 495 + UDSliceConj[slice[i]][tsym[i]]],\n\t\t\t\t\t\tUDSliceFlipPrun[flip[i] * 495 + UDSliceConj[slice[i]][fsym[i]]]),\n\t\t\t\t\t\tTwistFlipPrun[twist[i] * 2688 + (flip[i] << 3 | Sym8MultInv[fsym[i]][tsym[i]])]);\n\t\tc.URFConjugate();\n\t\tif (i==2) {\n\t\t\tc.invCubieCube();\n\t\t}\n\t}\n\tsolution = null;\n\tsol = 22;\n\tfor (length1=0; length1<sol; length1++) {\n\t\tmaxlength2 = Math.min(sol/2+1, sol-length1);\n\t\tfor (urfidx=0; urfidx<6; urfidx++) {\n\t\t\tcorn[0] = corn0[urfidx];\n\t\t\tcsym[0] = csym0[urfidx];\n\t\t\tmid3[0] = mid30[urfidx];\n\t\t\te1[0] = e10[urfidx];\n\t\t\te2[0] = e20[urfidx];\n\t\t\tif ((prun[urfidx] <= length1)\n\t\t\t\t\t&& phase1(twist[urfidx], tsym[urfidx], flip[urfidx], fsym[urfidx],\n\t\t\t\t\t\t\t\tslice[urfidx], length1, 18)) {\n\t\t\t\tif (solution == null) {\n\t\t\t\t\treturn \"Error 8\";\n\t\t\t\t} else {\n\t\t\t\t\treturn solution;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn \"Error 7\";\n}\n\nfunction phase1(twist, tsym, flip, fsym, slice, maxl, lm) {\n\tif (twist==0 && flip==0 && slice==0 && maxl < 5) {\n\t\treturn maxl == 0 && init2();\n\t}\n\tfor (var m=0; m<18; m++) {\n\t\tif (ckmv[lm][m]) {\n\t\t\tm+=2;\n\t\t\tcontinue;\n\t\t}\n\t\tvar slicex = UDSliceMove[slice][m];\n\t\tvar twistx = TwistMove[twist][Sym8Move[tsym][m]];\n\t\tvar tsymx = Sym8Mult[twistx & 7][tsym];\n\t\ttwistx >>>= 3;\n\t\tif (UDSliceTwistPrun[twistx * 495 + UDSliceConj[slicex][tsymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar flipx = FlipMove[flip][Sym8Move[fsym][m]];\n\t\tvar fsymx = Sym8Mult[flipx & 7][fsym];\n\t\tflipx >>>= 3;\n\t\tif (TwistFlipPrun[twistx * 2688 + (flipx << 3 | Sym8MultInv[fsymx][tsymx])] >= maxl\n\t\t\t\t||UDSliceFlipPrun[flipx * 495 + UDSliceConj[slicex][fsymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tmove[length1-maxl] = m;\n\t\tvalid1 = Math.min(valid1, length1-maxl);\n\t\tif (phase1(twistx, tsymx, flipx, fsymx, slicex, maxl-1, m)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction init2() {\n//\tif (System.currentTimeMillis() > timeOut) {\n//\t\treturn true;\n//\t}\n\tvalid2 = Math.min(valid2, valid1);\n\tfor (var i=valid1; i<length1; i++) {\n\t\tvar m = move[i];\n\t\tcorn[i+1] = CPermMove[corn[i]][SymMove[csym[i]][m]];\n\t\tcsym[i+1] = SymMult[corn[i+1] & 15][csym[i]];\n\t\tcorn[i+1] >>>= 4;\n\t\tmid3[i+1] = Mid3Move[mid3[i]][m];\n\t}\n\tvalid1 = length1;\n\tvar mid = Mid32MPerm[mid3[length1] % 24];\n\tvar prun = MCPermPrun[corn[length1] * 24 + MPermConj[mid][csym[length1]]];\n\tif (prun >= maxlength2) {\n\t\treturn false;\n\t}\n\tfor (var i=valid2; i<length1; i++) {\n\t\te1[i+1] = Mid3Move[e1[i]][move[i]];\n\t\te2[i+1] = Mid3Move[e2[i]][move[i]];\n\t}\n\tvalid2 = length1;\n\tvar cornx = corn[length1];\n\tvar ex = merge[~~(e1[length1]/6)][~~(e2[length1]/6)] * 4032\n\t\t\t\t + e1[length1] * 12 + e2[length1] % 6 * 2 + (((CParity[cornx>>>3]>>>(cornx&7))&1) ^ get4Parity(mid));\n\tvar edge = MtoEPerm[ex];\n\tvar esym = edge & 15;\n\tedge >>>= 4;\n\t\tprun = Math.max(MEPermPrun[edge * 24 + MPermConj[mid][esym]], prun);\n\tif (prun >= maxlength2) {\n\t\treturn false;\n\t}\n\t\tvar lm = length1==0 ? 10 : std2ud[~~(move[length1-1]/3)*3+1];\n\tfor (var i=prun; i<maxlength2; i++) {\n\t\tif (phase2(edge, esym, corn[length1], csym[length1], mid, i, length1, lm)) {\n\t\t\tsol = length1 + i;\n\t\t\tvar sb = \"\";\n\t\t\tvar urf = urfidx;\n//\t\t\tif (inverse) {\n\t\t\t\turf = (urf + 3) % 6;\n//\t\t\t}\n\t\t\tif (urf < 3) {\n\t\t\t\tfor (var s=0; s<length1; s++) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t\tfor (var s=length1; s<sol; s++) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (var s=sol-1; s>=length1; s--) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t\tfor (var s=length1-1; s>=0; s--) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t}\n\t\t\t// sb += \"(\" + sol + \"f)\";\n\t\t\tsolution = sb;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction phase2(edge, esym, corn, csym, mid, maxl, depth, lm) {\n\tif (edge==0 && corn==0 && mid==0) {\n\t\treturn true;\n\t}\n\tfor (var m=0; m<10; m++) {\n\t\tif (ckmv2[lm][m]) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar midx = MPermMove[mid][m];\n\t\tvar edgex = EPermMove[edge][SymMoveUD[esym][m]];\n\t\tvar esymx = SymMult[edgex & 15][esym];\n\t\tedgex >>>= 4;\n\t\tif (MEPermPrun[edgex * 24 + MPermConj[midx][esymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar cornx = CPermMove[corn][SymMove[csym][ud2std[m]]];\n\t\tvar csymx = SymMult[cornx & 15][csym];\n\t\tcornx >>>= 4;\n\t\tif (MCPermPrun[cornx * 24 + MPermConj[midx][csymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tmove[depth] = ud2std[m];\n\t\tif (phase2(edgex, esymx, cornx, csymx, midx, maxl-1, depth+1, m)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nvar initialized = false;\n\nfunction initialize() {\n\tif (initialized) {\n\t\treturn;\n\t}\n\tCubieInit();\n\tCoordInit();\n\tinitialized = true;\n}\n\nfunction solve(c) {\n\tinitialize();\n\tconst cc = new CubieCube();\n\tcc.cp = c.cp;\n\tcc.co = c.co;\n\tcc.ep = c.ep;\n\tcc.eo = c.eo;\n\treturn Solve(cc);\n};\n\nmodule.exports.initialize = initialize;\nmodule.exports.solve = solve;\nmodule.exports.randomCube = randomCube;\n"],"sourceRoot":""}