{"version":3,"sources":["lib/Defs.tsx","lib/Math.ts","components/CubeSim.tsx","lib/CubeLib.tsx","components/SelectorViews.tsx","components/Input.tsx","components/CaseVisualizer.tsx","components/Dialog.tsx","theme.js","components/CaseSelectView.tsx","lib/Algs.tsx","components/CmllTrainerView.tsx","components/ScrambleInputView.tsx","components/BlockTrainerView.tsx","components/PanoramaView.tsx","lib/Pruner.tsx","lib/min2phase/min2phase-wrapper.ts","lib/Solver.tsx","lib/CachedSolver.tsx","components/FavListView.tsx","components/TopBarView.tsx","lib/Evaluator.tsx","lib/Analyzer.ts","components/AnalyzerView.tsx","lib/Worker.ts","components/TrackerView.tsx","components/AppView.tsx","Version.tsx","lib/Selector.tsx","InitialConfig.tsx","lib/LocalStorage.tsx","reducers/AbstractStateM.tsx","reducers/BlockTrainerStateM.tsx","reducers/LSETrainerStateM.tsx","reducers/CmllStateM.tsx","reducers/StateFactory.tsx","KeyMapping.tsx","reducers/InitialState.tsx","reducers/Reducer.tsx","app/App.tsx","serviceWorker.js","index.js","lib/min2phase/min2phase.js"],"names":["Face","Typ","U","D","F","B","L","R","C","E","T","corners_coord","edges_coord","centers_coord","cstimer_corners_coord","cstimer_edges_coord","u","cpc","coc","epc","eoc","tpc","name","f","r","l","d","b","m","e","s","u_face","f_face","FBpairPos","color_map","rand_int","Math","floor","random","rand_incl","rand_choice","arr","length","rand_shuffle","i","j","tmp","cartesianProduct","allEntries","reduce","results","entries","map","result","entry","concat","subResults","getParity","perm","visited","Array","fill","follow","cnt","res","arrayEqual","arr1","arr2","Vector3","THREE","TAU","PI","axesInfo","roundedFace","rounded","cornerRadius","geo","cornerVertices","cornerCenter","squareCorner","degree","push","clone","add","cos","sin","multiplyScalar","vertices","x","applyAxisAngle","vertices_float32","Float32Array","faces","copyVector3sArray","i1","setFromPoints","redraw_cube","cube","config","width","height","colorScheme","mode","theme","hintDistance","enableControl","bgColor","facesToReveal","scene","camera","renderer","antialias","setSize","setClearColor","setPixelRatio","window","devicePixelRatio","controls","OrbitControls","domElement","enabled","stickers_tmpl","stickerwrap_tmpl","angleScale","scale","cameraPosition","position","copy","aspect","lookAt","geos","geo_border","materials_border","color","side","mesh","setRotationFromEuler","sticker_scale","hint_scale","rounded_patterns","drawCube","materials","_","mat","alphaTest","pattern","set","flat","hint_mesh","chroma","hex","cubie","rot","makeRotationFromEuler","rot1","setRotationFromMatrix","multiply","z","idx","sticker","stickerwrap","indexOf","stickerhint","cubeG","render","update","frameID","animate","requestAnimationFrame","updateCubeAndColor","remove","getRenderer","cleanupFunc","forEach","g","dispose","cancelAnimationFrame","renderControls","config_cache","painter","CubeSim","props","mount","React","useRef","cubePainter","useMemo","useMediaQuery","useTheme","breakpoints","up","useEffect","dom","current","appendChild","removeChild","ref","style","zIndex","CubieCube","value","cp","co","ep","eo","tp","this","Id","obj","JSON","parse","stringify","o","p","oc","pc","mod","o_new","p_new","console","assert","src","dst","move","_apply_partial","toc","isArray","MoveSeq","moves","apply_one","apply","facelet_mapping","pos","piece","_rotate_coord","fm","custom_corners_coord","custom_edges_coord","custom_centers_coord","match_pos_piece","coord","parity","expected","Map","toString","ori","has","_backward_rotate_coord","warn","get","coord_pair","newOri","newpos","newPerm","_to_facelet_mapping","_from_facelet_mapping","perm_correct","ori_correct","y","transformed_mapping","mapping","face_mapping","Object","fromEntries","face_pos","face_target","fs","last_face","first_face","Move","arg","from_moves","from_cube","get_change","acc_p","acc_o","slice","all","generate_base_moves","make_rot_set","us","rs","ls","ds","bs","ms","es","ss","rws","lws","uws","xs","ys","zs","moves_dict","create","nm","k","quarterMap","rotset","Set","shift","str","tokens","token","comment_idx","search","ch","ord","charCodeAt","split","parse_line","newMoves","nextMove","pop","combined","_combine","reverse","inv","n","useMetric","join","move1","move2","getCnt","getStr","auf_moves","auf_move","FaceletCube","mult_move","face","face_new","work","typ","mod_for_typ","p1","p2","p_curr","o_curr","color_of_c","o1","o2","color_of_e","color_of_t","color_of_sticker","Error","d_face","l_face","r_face","b_face","from_cubie","mask","facelet","X","from_cubie_partial_masked","from_cubie_partial","to_unfolded_cube_str","faceletCube","face_count","str_face_map","color_cube","face_char","hasOwnProperty","count","lse_mask","CubeUtil","ext","stickers","find_pairs","edge_stickers","filter","corner_stickers","ep_stickers","cp_stickers","epcp_pairs","c","efs","cfs","match","get_color","connected_pairs","u_premove","m2_premove","get_random_with_mask","cp_rand","ep_rand","par","random_ori","ori_mask","sum","random_perm","perm_mask","undecided","is_cmll_solved","premove","cube1","solved","is_mask_solved2","is_solved","co_","eo_","tp_","every","get_random_lse","is_cube_solved","id","ColorScheme","suppressLoad","colors","load","newScheme","save","_setDefault","default_colors","valid_schemes_map","localStorage","setItem","serialize","item","getItem","deserialize","valid_schemes","Mask","fs_back_mask","fs_front_mask","fbdr_mask","fb_mask","sb_mask","cmll_mask","ss_front_mask","ss_back_mask","empty_mask","dl_solved_mask","bl_solved_mask","solved_mask","zhouheng_mask","lse_4c_mask","useStyles","makeStyles","container","paddingTop","spacing","paddingBottom","backgroundColor","palette","background","default","button","paper","padding","display","overflow","flexDirection","canvasPaper","infoColumn","scrambleColumn","paddingLeft","textColumn","minHeight","fixedHeight","title","flexGrow","select","text","primary","selectLabel","secondary","SingleSelect","state","dispatch","sel","classes","radioValue","names","flags","label","Box","FormLabel","component","className","RadioGroup","onChange","evt","new_flags","target","type","content","setFlags","row","FormControlLabel","control","Radio","labelPlacement","MultiSelectContent","options","handleChange","checked","useState","manipChecked","setManipChecked","manipulator_row","manipulators","FormGroup","manip","enableIdx","Checkbox","fillValue","makeManipulator","Fragment","makeBox","MultiSelect","open","setOpen","handleClose","noDialog","FormControl","Button","variant","borderWidth","onClick","fontSize","marginLeft","marginRight","Dialog","disableEscapeKeyDown","onClose","DialogTitle","DialogContent","DialogActions","ColorSetter","toUserInput","setText","TextField","helperText","event","fullWidth","size","ColorPanel","reason","Divider","CaseVisualizer","SRVisualizer","view","algorithm","alg","cubeOptions","innerHTML","defaultOptions","createTheme","main","error","red","A400","hint","themeDark","overrides","MuiDivider","root","caseBoxOn","groupBox","Component","CaseSelectDialog","settings","selector","groups","algs","algGroups","prefix","splitAlgIntoGroups","handleSelectGroup","groupname","newFlags","handleSelectAll","gt_sm","marginBottom","ButtonGroup","startIcon","Typography","gutterBottom","toUpperCase","substr","alignItems","flexWrap","caseIdx","border","borderColor","transition","maxWidth","createAlg","kind","setup","empty_alg","cmll_algs_raw","nmcll_to_cmll_mapping","nmcll_display_parity","cmll_algs","trigger_algs","u_auf_algs","ori_algs","lookup_algset","alg_generator_from_group","algSet","lookup","getActiveNames","alg_generator_from_cases","activeNames","activeNamesSet","fontWeight","borderBottom","prompt","cmll_name_to_alg","nmcll_display_algs","NMCLLSelect","CmllTrainerView","clsx","_getMask","cmllCubeMaskSelector","getActiveName","hyperori","hyperOriSelector","panel","setReveal","reveal","downHandler","keyMapping","handle","key","addEventListener","removeEventListener","case","desc","moves_c","collapse","Grid","Paper","margin","getColorsForOri","elevation","lineHeight","whiteSpace","onFocus","blur","sm","md","setupEdit","down","ScrambleInputView","editing","setEditing","scrambles","setValue","textField","onKeyPress","stopPropagation","trim","onKeyDown","onKeyUp","inputRef","multiline","maxRows","rows","InputProps","borderRadius","condGap","fgap","flexShrink","flexBasis","minWidth","sourceIcon","sourceIconWrap","fab","top","left","ConfigPanelGroup","LPEdgeManip","BlockTrainerView","fsSelector","getMask","spaceButtonText","algText","minMove","a","remove_setup","min","describe_hide","get_algs","describe_reveal","setFav","favSelected","canvas_wh","scrambleInput","case_","solver","action","endIcon","alignSelf","justifyContent","showCube","fontFamily","textAlign","gridList","VisualCube","stage","sch","template","alt","PanoramaTable","GridList","cellHeight","cols","GridListTile","PanoramaView","PrunerPiece","S","I","Pruner","dist","encode","solved_states","max_depth","moveset","initialized","init","Uint8Array","frontier","total_expanded","log","new_frontier","newState","query","equal","cube2","prunerFactory","def","corner","edge","center","O","def_to_idx","count_all","curr_idx","idx_arr","eosize","epsize","eisize","esize","pow","ep_idx","e_idx","cosize","cpsize","cisize","csize","cp_idx","c_idx","tosize","tpsize","tisize","tsize","tp_idx","t","to","fbdrPrunerConfig","c1","c2","enc_c","e1","e2","e3","e4","htm_rwm","fbPrunerConfig","sbPrunerConfig","lsePrunerConfig","edge_encode","enc","edge_enc","solve","min2phaseSolve","toMin2Phase","Solver","accum","min_depth","SState","MAX_STATE_COUNT","pruners","state_count","solve_depth","min_depth_","max_depth_","accum_","nextMoves","depth","solution","STOP","CONTINUE","solutions","capacity","flag","sol","try_push","max","availableMoves","seen_encodings","pruneSeenEncodings","new_cube","st","expand","getAvailableMove","base","generateNextMoveTable","depth_l","depth_r","getPruner","solverFactory","prunerConfig","pruner","SsSolver","is_front","v","ssPrunerConfig","FbssSolver","prunerConfigs","solverFactory2","fbssPrunerConfig","FsSolver","fsPrunerConfig","EOLRSolver","center_flag","barbie_mode","edge_idx","moves_ac","moves_mc","barb_moves","eolrPrunerConfig","all_solvers","CachedSolver","cache","min2phase_init","transformed_cube","to_cstimer_cube","is_solveable","min2phase_solve","table","FavListView","favList","dialogID","setDialogID","dialogDelete","autoFocus","addDialogOpen","setAddDialogOpen","addString","setAddString","handleAddClose","dialogAdd","DialogContentText","allSolvers","parseAddString","Table","TableHead","TableRow","TableCell","align","rowSpan","IconButton","TableBody","play","is_bright","page","icon","bar","description","TopBarView","toggleFav","toggleBright","handleInfoOpen","value_str_","find","value_str","boxShadow","Toolbar","Select","findIndex","tab_idx","MenuItem","Evaluator","SeqEvaluator","moveCost","moveCost_gen","QTMEvaluator","DefaultEvaluator","TwoGramEvaluator","moves_input","score","two_gram","curr_score","Number","parseFloat","meter","isNaN","getEvaluator","two_gram_meter","initialState","scramble","post_scramble","full_solution","orientation","pre_orientation","num_solution","show_mode","is_fb_solved","oris","changeBasis","get_oris","preori","paper2","title1","marginTop","configItem","paddingRight","stageText","textTransform","formControl","resetState","postScramble","ScrambleView","setState","ConfigView","fb_ori_str","display_mode_str","InputLabel","labelId","FormHelperText","parseInt","SolutionInputView","Date","now","defaultSolution","stages","current_moves","stage_idx","getMasksForStage","some","analyze_roux_solve","StageSolutionView","tags","Chip","StageSolutionListView","FullSolutionView","setStage","show","setShow","onMouseLeave","onMouseEnter","stageView","worker_raw","Worker","worker","Comlink","AnalyzerView","appState","setSolutions","cubieCube","solutions_to_display","sort","analyze","curr_solutions","effect","gt_md","moveSet","moveCount","axis","generateMoves","candidate","prev","prevprev","prevSolution","next","moveSeq","generateChallenge","cubeAfter","cubeBefore","progress","generateChallengeForFB","generateChallengeForFS","getInitialState","TrackerView","globalState","toQuarter","handleProgress","func","moveSetText","setMoveSetText","onMoveSetCommit","TabPanel","children","index","other","role","hidden","modes","_getInitialHashLocation","location","hash","Intro","AppView","useCallback","newValue","handleInfoClose","showFav","dividers","theme_flag","paddingY","Container","version","Selector","ans","initialFavList","cmll_alg_names","initialConfig","arr_ori_flag","evaluator","cmllSelector","nmcllSelector","cmllCaseSelector","cmllAufSelector","triggerSelector","orientationSelector","fbdrSelector","fbdrScrambleSelector","fbOnlySelector","fbPairSolvedSelector","fbdrPosSelector1","fbdrPosSelector2","fbdrPosSelector3","ssSelector","ssEOSelector","ssPosSelector","ssPairOnlySelector","solutionNumSelector","fbPieceSolvedSelector","fbssLpSelector","fbssSsSelector","lseMCSelector","lseBarSelector","lseStageSelector","lseEOSelector","lseEOLRMCSelector","lseBarbieSelector","lseEOLRScrambleSelector","favListManager","getFavList","setFavList","item1","serializeConfig","configManager","versionKey","getConfig","vers","deserializeConfig","undefined","keys","item2","setConfig","partial","newConfig","assign","AbstractStateM","StateFactory","BlockTrainerStateM","solverL","solverR","scrambleMargin","scrambleCount","algDescWithMoveCount","expansionFactor","premoves","orientations","evalName","solverNames","totalSolutionCap","selectedSolutionCap","solverName","pm","pre","evaluate","algDescs","_solve_with_solvers","updateSolutionOnly","scrambleSolver","solutionLength","algDesc","getRandom","inputScramble","_solve","state1","_updateCase","movestr","conf","_updateCap","FbdrStateM","edgePositionMap","allowed_pedge","allowed_dr","dr_ep","dr_eo","_edge_piece_in_pattern","fbOnly","pairSolved","startsWith","active","_get_pair_solved_front","_get_random_fs_back","_get_random_fs_front","SsStateM","allowed_dr_eo_ep","ep_","drPositionMap","allowed_dr_eo_ep_patterns","_get_random_fb","FbStateM","is_l_only","centers","includes","hard_str","g_hard_str","pairs","cc_edges","_find_center_connected_edges","_get_random","FsStateM","FbssStateM","active_lp","active_ss","LSEStateM","bars","lse_premove","lseEODef","lseEODefLookup","EOLRStateM","eo_arr","targetEO","eolrMCMode","compare","useBarbie","useFullScramble","_getEOType","acSolver","mcSolver","acLength","mcLength","CmllStateM","m2_away","lse_cube","generator","trig_generator","u_auf_generator","ori_generator","trigger_alg","cmll_alg","u_auf_alg","alg_str","_get2PhaseSolution","history","_generateCase","SolvingStateM","SolvedStateM","defaultKeyMapping","lseKeyMapping","DefaultKeyMapping","altKey","ctrlKey","metaKey","LSEKeyMapping","initialStateName","reducer","code","stateM","onControl","onMove","reduceByKey","onConfig","reduceByConfig","rem","onReplay","reduceByFavlist","keyCode","document","body","preventDefault","App","useReducer","appTheme","ThemeProvider","CssBaseline","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","createArray","bitCount","get8Parity","get12Parity","binarySearch","mid","val","fact","perm3","ud2std","std2ud","Cnk","length1","length2","createArrays","move2str","urfMove","ckmv","ckmv2","getFlip","getFlipSym","FlipR2S","EdgeConjugate","SymInv","temps","FlipS2R","setFlip","bitOdd","getTwist","getTwistSym","TwistR2S","CornConjugate","TwistS2R","setTwist","twst","getUDSlice","setUDSlice","getMPerm","setMPerm","getMid3","idxA","idxB","setMid3","getURtoUL","getDRtoDL","setEdgePerm","getEdgePerm","getCPermSym","EPermR2S","get8Perm","e2c","CPermS2R","getEPermSym","EPermS2R","URFConjugate","CornMult","urf2","urf1","EdgeMult","invCubieCube","corn","cperm","twist","eperm","flip","set8Perm","cctemp","prod","oriA","oriB","ed","CubeSym","moveCube","SymMult","SymMove","Sym8Mult","Sym8Move","Sym8MultInv","SymMoveUD","MtoEPerm","merge","UDSliceMove","TwistMove","FlipMove","UDSliceConj","UDSliceTwistPrun","UDSliceFlipPrun","TwistFlipPrun","Mid3Move","Mid32MPerm","CParity","CPermMove","EPermMove","MPermMove","MPermConj","MCPermPrun","MEPermPrun","urfidx","csym","mid3","tsym","fsym","corn0","csym0","mid30","e10","e20","prun","maxlength2","valid1","valid2","phase1","maxl","lm","cornx","ex","get4Parity","esym","phase2","sb","urf","init2","slicex","twistx","tsymx","flipx","fsymx","midx","edgex","esymx","csymx","initialize","mc","temp","f2","u4","lr2","found","occ","CubieInit","SymState","SymStateF","check","done","sym","symF","fsymxx","idxx","symx","CoordInit","module","exports","cc","Solve","randomCube"],"mappings":"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","file":"static/js/main.c3ce1900.chunk.js","sourcesContent":["export enum Face {\n    U = 0, D, F, B, L, R, X\n}\n\nconst U = Face.U;\nconst D = Face.D;\nconst F = Face.F;\nconst B = Face.B;\nconst L = Face.L;\nconst R = Face.R;\nexport {U, D, F, B, L, R};\n\nexport enum Typ {\n    C = 0, E, T\n}\nconst C = Typ.C;\nconst E = Typ.E;\nconst T = Typ.T;\nexport {C, E, T}\n\nexport type CubieT = {\n    co: Array<number>,\n    cp: Array<number>,\n    eo: Array<number>,\n    ep: Array<number>,\n    tp: Array<number>\n}\n\nexport type FaceletCube = Array<string>\n\nexport type CornerCoord = [Face, Face, Face]\nlet corners_coord : Array<CornerCoord> = [\n    [U,F,L], [U,L,B], [U,B,R], [U,R,F],\n    [D,L,F], [D,B,L], [D,R,B], [D,F,R]\n]\n\nexport type EdgeCoord = [Face, Face]\nlet edges_coord : Array<EdgeCoord> = [\n    [U,F], [U,L], [U,B], [U,R],\n    [D,F], [D,L], [D,B], [D,R],\n    [F,L], [B,L], [B,R], [F,R],\n]\nexport type CenterCoord = [Face]\nlet centers_coord : Array<CenterCoord> = [\n    [U], [D], [F], [B], [L], [R]\n]\n\nlet cstimer_corners_coord : Array<CornerCoord> = [\n    [U,R,F],[U,F,L], [U,L,B], [U,B,R],\n    [D,F,R],[D,L,F], [D,B,L], [D,R,B]\n]\n\nlet cstimer_edges_coord : Array<EdgeCoord> = [\n    [U, R], [U,F], [U,L], [U,B],\n    [D, R], [D,F], [D,L], [D,B],\n    [F, R], [F,L], [B,L], [B,R]\n]\n\nexport {corners_coord, edges_coord, centers_coord, cstimer_corners_coord, cstimer_edges_coord }\n\nexport type FaceletMapping = [Face[], Face[]][]\n\nexport type PermChg = [number, number]\nexport type OriChg = number\n\nexport type MoveT = {\n    cpc: Array<PermChg>,\n    coc: Array<OriChg>,\n    epc: Array<PermChg>,\n    eoc: Array<OriChg>,\n    tpc: Array<PermChg>,\n    name: string\n}\n\nlet u : MoveT = {\n    cpc: [[0, 1], [1, 2], [2, 3], [3, 0]],\n    coc: [0, 0, 0, 0],\n    epc: [[0, 1], [1, 2], [2, 3], [3, 0]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"U\"\n}\n\nlet f : MoveT = {\n    cpc: [[0, 3], [3, 7], [7, 4], [4, 0]],\n    coc: [1, 2, 1, 2],\n    epc: [[0, 11], [11, 4], [4, 8], [8, 0]],\n    eoc: [1, 1, 1, 1],\n    tpc: [],\n    name: \"F\",\n}\n\nlet r : MoveT = {\n    cpc: [[3, 2], [2, 6], [6, 7], [7, 3]],\n    coc: [1, 2, 1, 2],\n    epc: [[3, 10], [10, 7], [7, 11], [11, 3]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"R\",\n}\n\nlet l : MoveT = {\n    cpc: [[0, 4], [4, 5], [5, 1], [1, 0]],\n    coc: [2, 1, 2, 1],\n    epc: [[1, 8], [8, 5], [5, 9], [9, 1]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"L\",\n}\n\nlet d : MoveT = {\n    cpc: [[4, 7], [7, 6], [6, 5], [5, 4]],\n    coc: [0, 0, 0, 0],\n    epc: [[4, 7], [7, 6], [6, 5], [5, 4]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"D\",\n}\n\nlet b : MoveT = {\n    cpc: [[1, 5], [5, 6], [6, 2], [2, 1]],\n    coc: [2, 1, 2, 1],\n    epc: [[2, 9], [9, 6], [6, 10], [10, 2]],\n    eoc: [1, 1, 1, 1],\n    tpc: [],\n    name: \"B\",\n}\n\nlet m : MoveT = {\n    cpc: [],\n    coc: [],\n    epc: [[0, 4], [4, 6], [6, 2], [2, 0]],\n    eoc: [1, 1, 1, 1],\n    tpc: [[0, 2], [2, 1], [1, 3], [3, 0]],\n    name: \"M\",\n}\n\nlet e : MoveT = {\n    cpc: [],\n    coc: [],\n    epc: [[8, 9], [9, 10], [10, 11], [11, 8]],\n    eoc: [1, 1, 1, 1],\n    tpc: [[2, 4], [4, 3], [3, 5], [5, 2]],\n    name: \"E\",\n}\n\nlet s : MoveT = {\n    cpc: [],\n    coc: [],\n    epc: [[1, 3], [3, 7], [7, 5], [5, 1]],\n    eoc: [1, 1, 1, 1],\n    tpc: [[0, 5], [5, 1], [1, 4], [4, 0] ],\n    name: \"S\",\n}\n\nexport {u, d, f, b, l, r, m, e, s}\n\nexport type StickerT = [number, number, Typ]\nexport type StickerExtT = [number, number, Typ, Face]\nexport type FaceletT = Array<StickerT>\n\nlet u_face : FaceletT = [\n    [1, 0, C], [2, 0, E], [2, 0, C],\n    [1, 0, E], [0, 0, T], [3, 0, E],\n    [0, 0, C], [0, 0, E], [3, 0, C]\n  ]\n\nlet f_face : FaceletT = [\n    [0, 1, C], [0, 1, E], [3, 2, C],\n    [8, 0, E], [2, 0, T], [11,0, E],\n    [4, 2, C], [4, 1, E], [7, 1, C]\n]\n\nexport {u_face, f_face}\n\nconst FBpairPos : [number, number, number, number][] = [\n    [0, 0, 8, 1], [0, 1, 1, 0], [ 0, 2 , 0, 1],\n    [1, 1, 2, 0], [1, 2, 1, 1],\n    [2, 0, 10, 1], [2, 1, 3, 0], [2, 2, 2, 1],\n    [3, 0, 11, 0], [3, 1, 0, 0], [3, 2, 3, 1],\n    [4, 0, 8, 0], [4, 1, 4, 0],\n    [6, 0, 10, 0], [6, 1, 6, 0], [6, 2, 7, 1],\n    [7, 0, 11, 1], [7, 1, 7, 0], [7, 2, 4, 1]\n]\n\nexport {FBpairPos}\n\nexport type FaceletCubeT = Array<Array<Face>>\n\n// A Cube can be in two representations: cubieCube or faceletCube\n\nlet color_map =`\\\n   UUU\n   UUU\n   UUU\nLLLFFFRRRBBB\nLLLFFFRRRBBB\nLLLFFFRRRBBB\n   DDD\n   DDD\n   DDD`\n\nexport {color_map}\n","let rand_int = (r: number) => {\n    return Math.floor(Math.random() * r)\n}\n\nlet rand_incl = (l: number, r: number) => {\n    return rand_int(r - l + 1) + l;\n}\nlet rand_choice = function<T>(arr: T[]) {\n    return arr[rand_int(arr.length)]\n}\n\nlet rand_shuffle = function<T>(arr: T[]) {\n    for (let i = 0, l = arr.length; i < l - 1; i++) {\n        let j = rand_incl(i, l - 1)\n        let tmp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = tmp\n    }\n    return arr\n}\n\nfunction cartesianProduct<T>(...allEntries: T[][]): T[][] {\n    return allEntries.reduce<T[][]>(\n      (results, entries) =>\n        results\n          .map(result => entries.map(entry => result.concat([entry])))\n          .reduce((subResults, result) => subResults.concat(result), []),\n      [[]]\n    )\n  }\n\nlet getParity = (perm: number[]) => {\n    let visited = Array(perm.length).fill(false)\n    let follow = (i: number, cnt: number) : number => {\n        if (visited[i]) {\n            return 0\n        } else {\n            visited[i] = 1\n            if (visited[perm[i]]) {\n                return cnt;\n            } else\n                return follow(perm[i], cnt + 1)\n        }\n    }\n    let res = 0\n    for (let x of perm) {\n        res += follow(x, 0)\n    }\n    return res\n}\n\nlet arrayEqual = function<T>(arr1: T[], arr2: T[]) {\n    if (arr1.length !== arr2.length) return false;\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) return false;\n    }\n    return true;\n}\n\nlet encodeArr = function(base: number, rarr: number[]) {\n    let int = 0\n    for (let i = rarr.length - 1; i >= 0; i--)\n        int = rarr[i] + int * base\n    return int\n}\n\nexport {rand_int, rand_choice, rand_shuffle, getParity, arrayEqual, encodeArr, cartesianProduct}","import React, { useEffect } from 'react'\n\nimport { FaceletCubeT, Face } from \"../lib/Defs\";\nimport * as THREE from 'three';\nimport { arrayEqual } from '../lib/Math';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\nimport * as chroma from 'chroma-js';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\ntype Config = {\n    cube: FaceletCubeT, width: number, height: number, colorScheme: Array<string>, facesToReveal: Face[],\n    theme: string,\n    hintDistance?: number,\n    enableControl? : boolean\n}\nlet { Vector3 } = THREE\n\n/*\nHow to propagate control of keypress ..? maybe not here, in the app.\n\nLet's look at click analogy: if a user click on sub-component,\nthat message should be propagated upwards to the parent.\n\nThat is, \"keydown\" should transform to some kind of message, e.g. the resulting cube state\nto be passed to the App, which then decides whether to trigger state change or let the cube keep being solved\n\n*/\n\n\ntype AxesInfo = [THREE.Vector3, THREE.Euler]\nconst TAU = Math.PI * 2;\nconst axesInfo: [THREE.Vector3, THREE.Euler][] = [\n    // UDFBLR\n    [new THREE.Vector3(0, 1, 0), new THREE.Euler(-TAU / 4, 0, 0)],\n    [new THREE.Vector3(0, -1, 0), new THREE.Euler(TAU / 4, 0, 0)],\n    [new THREE.Vector3(0, 0, 1), new THREE.Euler(0, 0, 0)],\n    [new THREE.Vector3(0, 0, -1), new THREE.Euler(0, TAU / 2, 0)],\n    [new THREE.Vector3(-1, 0, 0), new THREE.Euler(0, -TAU / 4, 0)],\n    [new THREE.Vector3(1, 0, 0), new THREE.Euler(0, TAU / 4, 0)],\n];\n\n\ntype ConfigT = {width: number, height: number, colorScheme: Array<string>, mode?: string,\n    faces?: Face[], theme?: string, hintDistance?: number,     enableControl? : boolean\n}\n\nconst roundedFace = ((rounded?: number[], cornerRadius?: number, ) => {\n    cornerRadius = cornerRadius || 0.1\n    rounded = rounded || [1, 1, 1, 1]\n    let geo = new THREE.BufferGeometry()\n    let cornerVertices = []\n    let cornerCenter = new THREE.Vector3(1 - cornerRadius, 1 - cornerRadius, 0)\n    let squareCorner = new THREE.Vector3(1, 1, 0)\n    for (let i = 0; i <= 90; i += 10) {\n        let degree = (i * Math.PI) / 180\n        cornerVertices.push( \n            cornerCenter.clone().add(new THREE.Vector3(Math.cos(degree), Math.sin(degree), 0).multiplyScalar(cornerRadius))\n        )\n    }\n    let vertices = []\n    for (let i = 0; i < 4; i++) {\n        if (rounded[i]) {\n            vertices.push(...cornerVertices)\n        } else {\n            vertices.push(squareCorner.clone())\n        }\n        cornerVertices = cornerVertices.map(x => x.clone().applyAxisAngle(new Vector3(0, 0, 1), 0.5 * Math.PI))\n        squareCorner.applyAxisAngle(new Vector3(0, 0, 1), 0.5 * Math.PI)\n    }\n    //vertices.push(new Vector3(0, 0, 0))\n\n    let vertices_float32 = new Float32Array( vertices.length * 3)\n    let vertices_attr = new THREE.BufferAttribute(vertices_float32, 3).copyVector3sArray( vertices)\n    // console.log(vertices_attr)\n    let faces = []\n    for (let i = 0; i< vertices.length; i++) {\n        let i1 = (i + 1) % vertices.length;\n        faces.push(vertices[vertices.length - 1])\n        faces.push(vertices[i])\n        faces.push(vertices[i1])\n    }\n    geo.setFromPoints(faces)\n\n    return geo\n})\n\n\n\nconst redraw_cube = function (cube: FaceletCubeT, config: ConfigT ) {\n    let { width, height, colorScheme, mode, faces, theme, enableControl} = config\n    let hintDistance = config.hintDistance || 3\n    const bgColor = theme === \"bright\" ? \"#eeeeef\" : '#252525' \n\n    mode = mode || \"FRU\"\n    let facesToReveal = faces || [Face.L, Face.B, Face.D]\n\n    const scene = new THREE.Scene()\n    const angle = 50\n    const camera = new THREE.PerspectiveCamera(angle, width / height, 0.1, 1000)\n\n    const mag = 1.0\n    const alpha = 0.5\n    const enableBorder = true\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true })\n    renderer.setSize(width, height, true);\n    //renderer.setViewport( 0, 0, width * window.devicePixelRatio, height * window.devicePixelRatio);\n    renderer.setClearColor(bgColor) // #70788a') //#5a606e') // '#373B43') // '#eeeeee')\n    renderer.setPixelRatio(window.devicePixelRatio)\n\n    const controls = new OrbitControls( camera, renderer.domElement );\n    controls.enabled = !!config.enableControl\n\n    const angleScale = Math.sin(70 / 180 * Math.PI)  /  Math.sin(angle / 180 * Math.PI)\n    const scale = (hintDistance > 5) ? .96 * angleScale : .9 * angleScale\n    const cameraPosition = (mode === \"FRU\") ? new THREE.Vector3(2.5 * scale, 3.5 * scale, 3 * scale) : new THREE.Vector3(0 / 1.1, 3 / 1.1, 3 / 1.1)\n    camera.position.copy(cameraPosition)\n    camera.aspect = width / height;\n    camera.lookAt(new THREE.Vector3(0, 0, 0))\n\n    let stickers_tmpl: THREE.Mesh[], stickerwrap_tmpl: THREE.Mesh\n\n    const geos : THREE.BufferGeometry[] = []; // new THREE.PlaneGeometry(0.89 * mag * 2, 0.89 * mag * 2)\n    const geo_border = new THREE.PlaneGeometry(2.0, 2.0)//1.0 * mag * 2, 1.0 * mag * 2)\n\n    let materials_border = new THREE.MeshBasicMaterial({ color: 0x000000, side: THREE.FrontSide })\n    stickerwrap_tmpl = (() => {\n        let mesh = new THREE.Mesh(geo_border, materials_border)\n        mesh.setRotationFromEuler(axesInfo[0][1])\n        return mesh\n    })()\n\n    const sticker_scale = 0.88\n    const corner_radius = 0.4\n    const hint_scale = 0.95\n    const rounded_patterns = [\n        [0, 0, 0, 1],\n        [0, 0, 1, 1],\n        [0, 0, 1, 0],\n        [1, 0, 0, 1],\n        [1, 1, 1, 1],\n        [0, 1, 1, 0],\n        [1, 0, 0, 0],\n        [1, 1, 0, 0],\n        [0, 1, 0, 0]\n    ];\n\n    function drawCube(faces: FaceletCubeT, colorScheme: Array<string>): THREE.Group {\n        //console.log(\"update color scheme \", colorScheme_)\n        let materials = Array(7).fill(0).map((_, i) => {\n            let mat = new THREE.MeshBasicMaterial({ color: colorScheme[i], side: THREE.DoubleSide });\n            mat.alphaTest = alpha;\n            return mat\n        })\n\n        stickers_tmpl = materials.map((mat) => {\n            return rounded_patterns.map(pattern => {\n                let geo = roundedFace(pattern, corner_radius)\n                geos.push(geo)\n                let mesh = new THREE.Mesh(geo, mat)\n                mesh.scale.set(sticker_scale, sticker_scale, sticker_scale)\n                mesh.setRotationFromEuler(axesInfo[0][1])\n                return mesh\n            })\n        }).flat()\n\n        let hint_mesh = Array(7).fill(0).map((_, i) => {\n            let color = (theme === \"bright\") \n                ? chroma.mix(colorScheme[i], 'white', 0.18).hex()\n               :  chroma.mix(colorScheme[i], 'black', 0.35).hex()\n \n               // \n            //chroma.default(colorScheme[i]).brighten(0.7).hex()\n                  //desaturate(2).hex() //darken(0.5).hex()\n            let mat = new THREE.MeshBasicMaterial({ color, side: THREE.DoubleSide });\n\n            let geo = roundedFace([1,1,1,1], corner_radius)\n            geos.push(geo)\n            let mesh = new THREE.Mesh(geo, mat)\n            mesh.scale.set(hint_scale, hint_scale, hint_scale)\n            mesh.setRotationFromEuler(axesInfo[0][1])\n            return mesh\n        })\n\n\n        const cube = new THREE.Group();\n        for (let i = 0; i < 6; i++) {\n            const cubie = new THREE.Group();\n            const rot = new THREE.Matrix4().makeRotationFromEuler(axesInfo[i][1]);\n            const rot1 = new THREE.Matrix4().makeRotationFromEuler(axesInfo[1][1]);\n            cubie.setRotationFromMatrix(rot.multiply(rot1))\n            for (let z = -1; z <= 1; z++) {\n                for (let x = -1; x <= 1; x++) {\n                    let idx = (z + 1) * 3 + (x + 1)\n\n                    const curr_tmpl = stickers_tmpl[faces[i][idx] * 9 + idx]\n                    const sticker = curr_tmpl.clone()\n                    const stickerwrap = stickerwrap_tmpl.clone()\n\n                    const eps = 0.05\n                    sticker.position.copy(new THREE.Vector3(x * 2, 3, z * 2))\n                    stickerwrap.position.copy(new THREE.Vector3(x * 2, 3 - eps, z * 2))\n\n                    if (facesToReveal.indexOf(i) > -1) { // (i === 5 && mode === \"UF\")) {\n                        const stickerhint = hint_mesh[faces[i][idx]].clone()\n                        stickerhint.position.copy(new THREE.Vector3(x * 2, 3 + hintDistance, z * 2))\n                        cubie.add(stickerhint)\n                    }\n                    if (enableBorder)\n                        cubie.add(stickerwrap)\n\n                    cubie.add(sticker)\n                }\n\n            }\n            cube.add(cubie)\n        }\n        cube.scale.set(1 / 3, 1 / 3, 1 / 3)\n        return cube\n    }\n\n    let cubeG = drawCube(cube, colorScheme)\n    scene.add(cubeG)\n\n    const render = () => {\n        controls.update();\n        renderer.render(scene, camera)\n    }\n    render()\n\n    let frameID = -1\n    const animate = () => {\n        frameID = requestAnimationFrame(animate)\n        renderer.render(scene, camera)\n    }\n    animate()\n\n    const updateCubeAndColor = (cube: FaceletCubeT, colorScheme: Array<string>) => {\n        scene.remove(cubeG)\n        cubeG = drawCube(cube, colorScheme)\n        scene.add(cubeG)\n        renderer.render(scene, camera)\n        return renderer\n    }\n\n    const cleanup = () => {\n        geos.forEach(g => g.dispose())\n        materials_border.dispose()\n        geo_border.dispose()\n        scene.remove(cubeG)\n        cancelAnimationFrame(frameID)\n    }\n    return {\n        updateCubeAndColor,\n        getRenderer: () => renderer,\n        cleanupFunc: cleanup,\n        renderControls: render\n    }\n    //let defaultColorScheme = [ 0x00ff00, 0x0000ff, 0xff0000,0xff8800,0xffff00, 0xffffff]\n}\n\nlet drawCube = (function(){\n    let config_cache : ConfigT | null = null\n    let painter : Painter | null = null\n    let func = (cube: FaceletCubeT, config: ConfigT) => {\n        if (config_cache === null) {\n            painter?.cleanupFunc()\n\n            painter = redraw_cube(cube, config)\n            config_cache = config\n            return painter\n        }\n        else if (config.width === config_cache.width && config.height === config_cache.height &&\n            arrayEqual(config.faces || [], config_cache.faces || []) && config.theme === config_cache.theme &&\n            config.hintDistance === config_cache.hintDistance && config.enableControl === config_cache.enableControl) {\n\n            painter?.updateCubeAndColor(cube, config.colorScheme)\n            config_cache = config\n            return painter!\n        } else {\n            painter?.cleanupFunc()\n            painter = redraw_cube(cube, config)\n            config_cache = config\n            return painter!\n        }\n    }\n    return func\n})\n\ntype Painter = {\n    updateCubeAndColor: (cube: FaceletCubeT, scheme: Array<string>) => THREE.WebGLRenderer,\n    getRenderer: () => THREE.WebGLRenderer,\n    cleanupFunc: () => void,\n    renderControls: () => void\n\n}\n\nfunction CubeSim(props: Config) {\n    const mount = React.useRef<HTMLDivElement | null>(null)\n    let { width, height, colorScheme, facesToReveal, hintDistance, theme} = props\n    let cubePainter = React.useMemo(drawCube, [])\n\n\n    const gt_xs = useMediaQuery(useTheme().breakpoints.up('sm'));\n    const enableControl = gt_xs\n\n    let painter = cubePainter(props.cube, {\n            width, height, colorScheme, faces: facesToReveal, theme, hintDistance, enableControl })\n\n    useEffect( () => {\n        let dom = mount.current!\n        dom.appendChild(painter.getRenderer().domElement) //renderer.domElement)\n        return () => {\n            dom.removeChild(painter.getRenderer().domElement)\n        }\n    })\n\n    return <div\n        ref={mount}\n        style={{ width: props.width, height: props.height, zIndex: 1 }}\n    />;\n}\n\nexport default CubeSim","import { MoveT, OriChg, PermChg, StickerT, StickerExtT, CornerCoord, EdgeCoord, cstimer_corners_coord, cstimer_edges_coord, CenterCoord, centers_coord } from \"./Defs\";\nimport { u, d, f, b, l, r, m, e, s} from \"./Defs\";\nimport { FaceletT, FaceletCubeT, corners_coord, edges_coord, u_face, f_face, color_map } from \"./Defs\";\nimport { Typ, Face, C, E, T, U, D, F, B, L, R } from \"./Defs\";\nimport { rand_int, rand_shuffle, getParity, rand_choice, arrayEqual } from \"./Math\";\n\nconst C_MOD = 3;\nconst E_MOD = 2;\nconst T_MOD = 1;\n\nexport class CubieCube {\n    cp: number[] = [];\n    co: number[] = [];\n    ep: number[] = [];\n    eo: number[] = [];\n    tp: number[] = [];\n    // The addition of tp is not necessary, but helps us deal with slice moves in Roux during search and simcube.\n    deserialize(s: string) {\n        let obj = JSON.parse(s)\n        this.set(obj);\n        return this\n    }\n    serialize() {\n        let {cp, co, ep, eo, tp} = this\n        return JSON.stringify({cp, co, ep, eo, tp});\n    }\n\n    Id() : CubieCube {\n        this.set({\n            cp: [0, 1, 2, 3, 4, 5, 6, 7],\n            co: [0, 0, 0, 0, 0, 0, 0, 0],\n            ep: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\n            eo: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            tp: [0, 1, 2, 3, 4, 5]\n        })\n        return this\n    }\n    clone() : CubieCube {\n        return new CubieCube({\n            cp: [...this.cp],\n            co: [...this.co],\n            ep: [...this.ep],\n            eo: [...this.eo],\n            tp: [...this.tp]\n        })\n    }\n    constructor(value?: {cp: number[], co: number[], ep: number[], eo: number[], tp?: number[]} | CubieCube) {\n        if (value instanceof CubieCube) {\n            this.set({\n                cp: value.cp, co: value.co, ep: value.ep, eo: value.eo, tp: value.tp\n            })\n        }\n        else if (value) {\n            this.cp = value.cp\n            this.co = value.co\n            this.ep = value.ep\n            this.eo = value.eo\n            this.tp = value.tp || [0, 1, 2, 3, 4, 5] // UD FB LR\n        } else {\n            this.Id()\n        }\n    }\n    set(value: {cp?: number[], co?: number[], ep?: number[], eo?: number[], tp?: number[]} | CubieCube) {\n        this.cp = value.cp || this.cp\n        this.co = value.co || this.co\n        this.ep = value.ep || this.ep\n        this.eo = value.eo || this.eo\n        this.tp = value.tp || this.tp\n    }\n    _apply_partial(o: Array<number>, p: Array<number>, oc: Array<OriChg>, pc: Array<PermChg>, mod: number) {\n        let o_new = [...o];\n        let p_new = [...p];\n        console.assert(oc.length === pc.length)\n\n        for (let i = 0; i < oc.length; i++) {\n            //let [src, dst] = pc[i];\n            let src = pc[i][0], dst = pc[i][1];\n            p_new[dst] = p[src];\n            o_new[dst] = (o[src] + oc[i]) % mod;\n        }\n        return [o_new, p_new]\n    }\n\n    // all side-effect-less\n    apply_one(move: Move) {\n        let [co, cp] = this._apply_partial(this.co, this.cp, move.coc, move.cpc, C_MOD)\n        let [eo, ep] = this._apply_partial(this.eo, this.ep, move.eoc, move.epc, E_MOD)\n        let toc = Array(move.tpc.length).fill(0)\n        let [, tp] = this._apply_partial([0, 0, 0, 0, 0, 0], this.tp, toc, move.tpc, T_MOD)\n        return new CubieCube({ co, cp, eo, ep, tp })\n    }\n\n    apply(move: Move | Array<Move> | MoveSeq | string): CubieCube {\n        if (Array.isArray(move) || move instanceof MoveSeq) {\n            let moves = Array.isArray(move) ? move : move.moves\n            let cube = this.clone()\n            for (let i = 0; i < moves.length; i++) {\n                cube = cube.apply_one(moves[i])\n            }\n            return cube\n        } else if (typeof move === \"string\") {\n            return this.apply(new MoveSeq(move))\n        }\n        else {\n            return this.apply_one(move)\n        }\n    }\n\n    static _rotate_coord(fs: Face[]) {\n        let faces = [...fs] as Face[]\n        let last_face = faces[faces.length - 1];\n        for (let i = faces.length - 1; i > 0; i--) {\n            faces[i] = faces[i - 1];\n        }\n        faces[0] = last_face\n        return faces\n    }\n    static _backward_rotate_coord(fs: Face[]){\n        let faces = [...fs] as Face[]\n        let first_face = faces[0]\n        for (let i = 0; i < faces.length - 1; i++) {\n            faces[i] = faces[i + 1];\n        }\n        faces[faces.length - 1] = first_face\n        return faces\n    }\n\n    // facelet mapping: from position to piece\n    _to_facelet_mapping(corners_coord: CornerCoord[], edges_coord: EdgeCoord[], centers_coord: CenterCoord[]) {\n        let facelet_mapping : [Face[], Face[]][]= []\n\n        for (let i = 0; i < 8; i++) {\n            let pos = corners_coord[i] as Face[]\n            let piece = corners_coord[this.cp[i]] as Face[]\n\n            for (let j = 0; j < this.co[i];j++) {\n                piece = CubieCube._rotate_coord(piece)\n            }\n            facelet_mapping.push([pos, piece])\n        }\n        for (let i = 0; i < 12; i++) {\n            let pos = edges_coord[i] as Face[]\n            let piece = edges_coord[this.ep[i]] as Face[]\n            for (let j = 0; j < this.eo[i];j++) {\n                piece = CubieCube._rotate_coord(piece)\n            }\n            facelet_mapping.push([pos, piece])\n        }\n        for (let i = 0; i<6;i++) {\n            let pos = centers_coord[i]\n            let piece = centers_coord[this.tp[i]] as Face[]\n            facelet_mapping.push([ pos, piece])\n        }\n        return facelet_mapping\n    }\n\n    _from_facelet_mapping (fm: [Face[], Face[]][], custom_corners_coord: CornerCoord[], custom_edges_coord: EdgeCoord[], custom_centers_coord: CenterCoord[] ) {\n        let cube = new CubieCube()\n\n        let match_pos_piece = (pos: Face[], piece: Face[], coord: Face[][], parity: number) : [number, number, number]=> {\n            let expected = new Map(coord.map( (x, i) => [x.toString(), i]))\n            let ori = 0\n            while (!expected.has(pos.toString())) {\n                pos = CubieCube._backward_rotate_coord(pos)\n                ori--;\n                if (ori <= -parity) break;\n            }\n            while (!expected.has(piece.toString())) {\n                piece = CubieCube._backward_rotate_coord(piece)\n     \n                ori++;\n                if (ori >= 10) {\n                    console.warn(\"can't match piece\", piece, expected)\n                    break\n                }\n            }\n\n            ori = (ori + parity) % parity;\n            return [ori, expected.get(pos.toString())!, expected.get(piece.toString())! ]\n        }\n\n        for (let coord_pair of fm) {\n            let pos = coord_pair[0], piece = coord_pair[1]\n            let coord : Face[][] = (pos.length === 2) ? custom_edges_coord : \n                        (pos.length === 3) ? custom_corners_coord :\n                         custom_centers_coord ;\n            let [newOri,newpos,newPerm] = match_pos_piece(pos, piece, coord, pos.length);\n\n            //console.log( pp([pos, piece]), [newOri, newpos,newPerm])\n            if (pos.length === 2) {\n                cube.eo[newpos] = newOri;\n                cube.ep[newpos] = newPerm;\n            } else if (pos.length === 3){\n                cube.co[newpos] = newOri;\n                cube.cp[newpos] = newPerm;\n            } else {\n                cube.tp[newpos] = newPerm;\n            }\n        }\n        return cube\n    }\n\n    to_cstimer_cube() {\n        let facelet_mapping = this._to_facelet_mapping(corners_coord, edges_coord, centers_coord)\n        let cube = this._from_facelet_mapping(facelet_mapping, cstimer_corners_coord, cstimer_edges_coord, centers_coord)\n        return cube\n    }\n\n    is_solveable() {\n        if (this.tp[0] !== 0) {\n            this.apply(new MoveSeq(\"M2\")) // assuming lse\n        }\n        let perm_correct = (getParity(this.cp) + getParity(this.ep)) % 2 === 0\n        let ori_correct = (this.co.reduce((x, y) => x + y, 0) % 3 === 0) && (this.eo.reduce((x, y) => x + y, 0) % 2 === 0)\n        return perm_correct && ori_correct\n    }\n\n    changeBasis(s: MoveSeq) {\n        // only take x and y for now\n        let facelet_mapping = this._to_facelet_mapping(corners_coord, edges_coord, centers_coord)\n\n        let transformed_mapping = s.moves.reduce( (mapping, move) : [Face[], Face[]][] => {\n            let face_mapping = Object.fromEntries(move.tpc)\n            //console.log(\"applying face mapping for \", move.name, face_mapping)\n            //console.log(\"before\", pp(mapping))\n            let result = mapping.map( ([face_pos, face_target]) => \n                [face_pos.map(f => face_mapping[f] ?? f ),\n                 face_target.map(f => face_mapping[f] ?? f) ]\n            )\n            //console.log('after', pp(result))\n            return result as any \n        } , facelet_mapping)\n        //console.log(s.toString(), facelet_mapping, transformed_mapping)\n        let cube = this._from_facelet_mapping(transformed_mapping, corners_coord, edges_coord, centers_coord)\n        return cube\n        //let cube = this._from_facelet_mapping(facelet_mapping, corners_coord, edges_coord, centers_coord)\n    }\n}\n\n\n/* Moves */\n/* We will generate all the moves based on the base moves and rotations, and return them in an array */\nexport class Move {\n    cpc: Array<PermChg> = [];\n    coc: Array<OriChg> = [];\n    epc: Array<PermChg> = [];\n    eoc: Array<OriChg> = [];\n    tpc: Array<PermChg> = [];\n    name: string = \"\";\n    constructor(arg?: Array<Move> | CubieCube | Move | MoveT, name?: string) {\n        if (Array.isArray(arg)) {\n            this.from_moves(arg, name!)\n        } else if (arg instanceof Move){\n            this.cpc = [...arg.cpc]\n            this.coc = [...arg.coc]\n            this.epc = [...arg.epc]\n            this.eoc = [...arg.eoc]\n            this.tpc = [...arg.tpc]\n            this.name = name!\n        } else if (arg instanceof CubieCube) {\n            this.from_cube(arg, name!)\n        } else if (arg) {\n            this.set(arg)\n        }\n    }\n    set(move: Move | MoveT) {\n        this.cpc = move.cpc\n        this.coc = move.coc\n        this.epc = move.epc\n        this.eoc = move.eoc\n        this.tpc = move.tpc\n        this.name = move.name\n    }\n    from_cube(cube: CubieCube, name: string) {\n        let get_change = (p: Array<number>, o: Array<number>, acc_p: Array<PermChg>, acc_o: Array<OriChg>) => {\n            for (let i = 0; i < p.length; i++) {\n                if (i === p[i] && o[i] === 0) {\n                } else {\n                    acc_p.push([p[i], i]);\n                    acc_o.push(o[i]);\n                }\n            }\n        }\n        get_change(cube.cp, cube.co, this.cpc, this.coc);\n        get_change(cube.ep, cube.eo, this.epc, this.eoc);\n        get_change(cube.tp, [0, 0, 0, 0, 0, 0], this.tpc, []);\n        this.name = name\n        return this\n    }\n    from_moves (moves: Move[], name: string) {\n        this.from_cube(new CubieCube().apply(moves), name)\n        return this\n    }\n    clone() {\n        return new Move(this, this.name)\n    }\n    static make_rot_set(move: Move): Array<Move> {\n        return [move,\n            new Move().from_moves([move, move], move.name + \"2\"),\n            new Move().from_moves([move, move, move], move.name + \"'\"),\n        ]\n    }\n\n    static generate_base_moves = () => {\n        let make_rot_set = Move.make_rot_set\n        let us = make_rot_set(new Move(u));\n        let fs = make_rot_set(new Move(f));\n        let rs = make_rot_set(new Move(r));\n        let ls = make_rot_set(new Move(l));\n        let ds = make_rot_set(new Move(d));\n        let bs = make_rot_set(new Move(b));\n        let ms = make_rot_set(new Move(m));\n        let es = make_rot_set(new Move(e));\n        let ss = make_rot_set(new Move(s));\n\n        let rw = new Move([new Move(r), ms[2]], \"r\")\n        let rws = make_rot_set(rw)\n        let lw = new Move([new Move(l), new Move(m)], \"l\")\n        let lws = make_rot_set(lw)\n        let uw = new Move([new Move(u), new Move(e)], \"u\")\n        let uws = make_rot_set(uw)\n\n        let x = new Move([new Move(r), ls[2], ms[2]], \"x\")\n        let xs = make_rot_set(x)\n        let y = new Move([new Move(u), new Move(e), ds[2]], \"y\")\n        let ys = make_rot_set(y)\n        let z = new Move([x, y, x, x, x], \"z\")\n        let zs = make_rot_set(z)\n\n        let id = new Move(new CubieCube(), \"id\")\n        let moves = [\n            id,\n            us, fs, rs, ls, ds, bs, ms, es, ss,\n            xs, ys, zs,\n            rws, lws, uws\n        ].flat()\n        let moves_dict: { [key: string]: Move } = Object.create({})\n        moves.forEach(m => moves_dict[m.name] = m)\n        return moves_dict\n    }\n    static all: {[key: string]: Move} = Move.generate_base_moves();\n\n    inv(): Move {\n        let name: string\n        switch (this.name[this.name.length - 1]) {\n            case \"'\": name = this.name.slice(0, this.name.length - 1); break\n            case \"2\": name = this.name; break\n            default: name = this.name + \"'\"\n        }\n        return Move.all[name]\n    }\n\n    toString() {\n        return this.name\n    }\n}\n\n\nexport class MoveSeq {\n    moves: Move[] = [];\n\n    constructor(moves: Move[] | string) {\n        if (typeof moves === \"string\") {\n            this.parse(moves);\n        } else {\n            this.moves = moves\n        }\n    }\n\n    static quarterMap : {[key: string]: string} = ({\n        \"U2\": \"U'\",\n        \"R2\": \"R'\",\n        \"r2\": \"r'\",\n        \"M2\": \"M'\",\n        \"L2\": \"L\",\n    });\n    toQuarter() {\n        let nm : Move[] = []\n        for (let i = 0 ; i < this.moves.length; i++) {\n            let m = this.moves[i]\n            if (m.name[1] === \"2\") {\n                let k = MoveSeq.quarterMap[m.name] || m.name[0]\n                nm.push(Move.all[ k ])\n                nm.push(Move.all[ k ])\n            } else {\n                nm.push(m)\n            }\n        }\n        return new MoveSeq(nm)\n    }\n\n    static _combine(move1: Move, move2: Move) : MoveSeq {\n        const getCnt = (name : string) => {\n            if (name.length === 1) return 1\n            return name[1] === \"2\" ? 2 : 3\n        }\n        const getStr = (cnt : number) => {\n            return (cnt === 1) ? \"\" : (cnt === 2 ? \"2\" : \"'\")\n        }\n        if (move1.name[0] === move2.name[0]) {\n            let cnt = (getCnt(move1.name) + getCnt(move2.name)) % 4\n            if (cnt === 0) return new MoveSeq([])\n            else return new MoveSeq([ Move.all[move1.name[0] + getStr(cnt)] ])\n        } else {\n            return new MoveSeq([move1, move2])\n        }\n    }\n\n    remove_setup() {\n        let rotset = new Set([\"x\", \"x'\", \"x2\", \"y\", \"y'\", \"y2\", \"z\", \"z'\", \"z2\"]);\n        while (this.moves.length > 0 && rotset.has(this.moves[0].name)) {\n            this.moves.shift()\n        }\n        return this\n    }\n\n    parse_line(str: string) {\n        let tokens = []\n        let token = \"\"\n        let comment_idx = str.search(/\\/\\//)\n        if (comment_idx > -1) str = str.slice(0, comment_idx)\n        for (let i = 0; i < str.length; i++) {\n            let ch = str[i]\n            if (ch === '2' || ch === '\\'') {\n                if (token.length === 1) {\n                    token += str[i];\n                    tokens.push(token)\n                    token = \"\"\n                }\n            } else if (ch === ' ') {\n                if (token.length > 0) {\n                    tokens.push(token); token = \"\";\n                }\n            } else {\n                const ord = ch.charCodeAt(0)\n                if ( (65 <= ord && ord < 65 + 26) || (97 <= ord && ord < 97 + 26)) {\n                    if (token.length > 0) {\n                        tokens.push(token)\n                        token = \"\"\n                    }\n                    token += str[i]\n                }\n            }\n        }\n        let moves = []\n        if (token.length > 0) tokens.push(token);\n        for (let token of tokens) {\n            let move = Move.all[token]\n            if (move) {\n                moves.push(move)\n            }\n        }\n        return moves\n    }\n    parse(str: string) {\n        this.moves = str.split(\"\\n\").map(x => this.parse_line(x)).flat()\n        return this\n    }\n\n    collapse() : MoveSeq {\n        let newMoves : Move[] = []\n        let moves = this.moves\n        while (moves.length > 0) {\n            const nextMove = moves.shift()!\n            if (newMoves.length === 0) {\n                newMoves.push(nextMove)\n            } else {\n                const move = newMoves.pop()!\n                const combined = MoveSeq._combine(move, nextMove)\n                for (let m of combined.moves)\n                    newMoves.push(m)\n            }\n        }\n        return new MoveSeq(newMoves);\n    }\n\n    inv() {\n        let moves: Move[] = this.moves.slice(0).reverse().map(x => x.inv()).flat()\n        return new MoveSeq(moves)\n    }\n\n    slice(n: number) {\n        let moves: Move[] = this.moves.slice(0, n)\n        return new MoveSeq(moves)\n    }\n\n    static add_auf(moves: Array<Move>, auf_moves?: Array<Move | MoveSeq>) {\n        auf_moves = auf_moves || [ Move.all[\"id\"], Move.all[\"U\"], Move.all[\"U'\"], Move.all[\"U2\"]]\n        let auf_move = rand_choice(auf_moves)\n        if (auf_move instanceof MoveSeq) {\n            moves.concat(auf_move.moves)\n        } else {\n            moves.push(auf_move)\n        }\n    }\n\n    toString(useMetric?: string) {\n        return this.moves.map(m => m.toString()).join(\" \") + \" \" + (useMetric ? \"(\" + this.moves.length + \")\" : \"\")\n    }\n}\n\n/* Faces */\nlet FaceletCube = function () {\n    let mult_move = (face: FaceletT, move: Move): FaceletT => {\n        let face_new: FaceletT = [...face]\n        let mod_for_typ = (typ: Typ) => {\n            switch (typ) {\n                case C: return 3;\n                case E: return 2;\n                case T: return 1\n            }\n        }\n        let work = (p: PermChg, o: number, typ: Typ) => {\n            let mod = mod_for_typ(typ)\n            let [p1, p2] = p\n            for (let i = 0; i < face.length; i++) {\n                let [p_curr, o_curr, typ_curr] = face[i];\n                if (typ_curr === typ && p_curr === p1) {\n                    face_new[i] = [p2, (o_curr + o) % mod, typ]\n                }\n            }\n        }\n        for (let i = 0; i < move.cpc.length; i++) {\n            work(move.cpc[i], move.coc[i], C)\n        }\n        for (let i = 0; i < move.epc.length; i++) {\n            work(move.epc[i], move.eoc[i], E)\n        }\n        for (let i = 0; i < move.tpc.length; i++) {\n            work(move.tpc[i], 0, T)\n        }\n        return face_new\n    }\n    let color_of_c = (p: number, o1: number, o2: number) =>\n    corners_coord[p][(3 - o1 + o2) % 3];\n    let color_of_e = (p: number, o1: number, o2: number) =>\n        edges_coord[p][(2 - o1 + o2) % 2];\n    let color_of_t = (p: number) => [U, D, F, B, L, R][p]\n\n    let color_of_sticker = (cube: CubieCube, sticker: StickerT) => {\n        let [p, o, typ] = sticker\n        if (typ === C) {\n            return color_of_c(cube.cp[p], cube.co[p], o)\n        } else if (typ === E) {\n            return color_of_e(cube.ep[p], cube.eo[p], o)\n        } else if (typ === T) {\n            return color_of_t(cube.tp[p])\n        } else {\n            throw Error(\"unidentified type \" + typ)\n        }\n    }\n\n    let from_cubie_partial = (cube: CubieCube, facelet: FaceletT) => {\n        return facelet.map(s => color_of_sticker(cube, s))\n    }\n    let from_cubie_partial_masked = (cube: CubieCube, facelet: FaceletT, mask: Mask) => {\n        return facelet.map(([p, o, typ]) => {\n            if (typ === C) {\n                if (mask.cp[cube.cp[p]] === 1)\n                    return color_of_c(cube.cp[p], cube.co[p], o)\n                else\n                    return Face.X\n            } else if (typ === E) {\n                if (mask.ep[cube.ep[p]] === 1)\n                    return color_of_e(cube.ep[p], cube.eo[p], o)\n                else\n                    return Face.X\n            } else if (typ === T) {\n                if (mask.tp && mask.tp[cube.tp[p]] === 0)\n                    return Face.X\n                else\n                    return color_of_t(cube.tp[p])\n            } else {\n                throw Error(\"unidentified type \" + typ)\n            }\n        })\n    }\n\n    let moves = Move.all\n    let generate_base_facelets = () => {\n        let d_face = mult_move(f_face, moves[\"x'\"])\n        let l_face = mult_move(f_face, moves[\"y\"])\n        let r_face = mult_move(f_face, moves[\"y'\"])\n        let b_face = mult_move(f_face, moves[\"y2\"])\n        return {\n            d_face, l_face, r_face, b_face\n        }\n    }\n    let { d_face, l_face, r_face, b_face } = generate_base_facelets()\n\n    let from_cubie = (cube: CubieCube, mask?: Mask): FaceletCubeT => {\n        //console.log(\"converting from cube\", cube)\n        let faces = [u_face, d_face, f_face, b_face, l_face, r_face]\n        if (mask)\n            return faces.map((facelet) => from_cubie_partial_masked(cube, facelet, mask))\n        else\n            return faces.map((facelet) => from_cubie_partial(cube, facelet))\n    }\n\n    let to_unfolded_cube_str = (faceletCube: FaceletCubeT): String => {\n        let face_count = [0, 0, 0, 0, 0, 0];\n        let str_face_map: { [key: string]: Face } = {\n            \"U\": U, \"D\": D, \"F\": F, \"B\": B, \"L\": L, \"R\": R\n        }\n        let face_str_map = \"UDFBLR\"\n        let color_cube = \"\"\n        for (let i = 0; i < color_map.length; i++) {\n            let face_char = color_map[i];\n            if (str_face_map.hasOwnProperty(face_char)) {\n                let face: number = str_face_map[face_char] as number;\n                let count = face_count[face];\n                let color = faceletCube[face][count]\n                color_cube += face_str_map[color]\n                face_count[face] += 1;\n            } else {\n                color_cube += color_map[i];\n            }\n        }\n        return color_cube;\n    }\n\n\n    return {\n        from_cubie,\n        to_unfolded_cube_str,\n        color_of_sticker,\n        faces: {\n            u_face, d_face, l_face, r_face, f_face, b_face\n        }\n    }\n}()\n\ntype Mask = {\n    co?: number[],\n    eo?: number[],\n    tp?: number[],\n    cp: number[],\n    ep: number[],\n}\nexport type MaskT = Mask;\nfunction mask_copy (m: Mask) {\n    return {\n        co: m.co && [...m.co],\n        eo: m.eo && [...m.eo],\n        tp: m.tp && [...m.tp],\n        cp: [...m.cp],\n        ep: [...m.ep]\n    }\n}\n\nconst lse_mask: Mask = {\n    cp: [1, 1, 1, 1, 1, 1, 1, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1],\n}\n\nconst lse_4c_mask: Mask = {\n    cp: [1, 1, 1, 1, 1, 1, 1, 1],\n    ep: [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1],\n    eo: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n}\n\nconst solved_mask : Mask = {\n    cp: [1, 1, 1, 1,  1, 1, 1, 1],\n    ep:[1, 1, 1, 1,  1, 1, 1, 1, 1, 1, 1, 1],\n}\nconst empty_mask : Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n}\nconst dl_solved_mask : Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]\n}\nconst bl_solved_mask : Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]\n}\nconst fs_back_mask: Mask = {\n    cp: [0, 0, 0, 0, 0, 1, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\n\nconst fs_front_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\n\nconst fb_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst zhouheng_mask: Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst fbdr_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst ss_front_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 0, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst ss_back_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 1, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst sb_mask : Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 1, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst cmll_mask : Mask = {\n    cp: [1, 1, 1, 1, 1, 1, 1, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1],\n    tp: [0, 0, 0, 0, 1, 1]\n}\n\nlet CubeUtil = (() => {\n    let is_cube_solved = (cube: CubieCube) => {\n        let id = new CubieCube()\n        return arrayEqual(cube.co, id.co) &&\n               arrayEqual(cube.eo, id.eo) &&\n               arrayEqual(cube.cp, id.cp) &&\n               arrayEqual(cube.ep, id.ep)\n    }\n\n    let is_solved = (cube: CubieCube, mask: Mask) => {\n        let {co: co_, cp, eo: eo_, ep, tp: tp_} = mask\n        let co = co_ || cp\n        let eo = eo_ || ep\n        let tp = tp_ || Array(6).fill(1)\n        let c_true = co.every( (_, i) =>  (cp[i] === 0 || cube.cp[i] === i) \n                        && (co[i] === 0 || cube.co[i] === 0) )\n        if (!c_true) return false\n        let e_true = eo.every( (_, i) =>  (ep[i] === 0 || cube.ep[i] === i) \n        && (eo[i] === 0 || cube.eo[i] === 0) )\n        if (!e_true) return false\n        let t_true = tp.every( (_, i) =>  (tp[i] === 0 || cube.tp[i] === i) )\n        return t_true\n    }\n\n    function ext(stickers: StickerT[], f: Face) : StickerExtT[] {\n        return stickers.map(x => {\n            let [a, b, c] = x;\n            return [a,b,c,f]\n        })\n    }\n\n    let { u_face, d_face, l_face, r_face, f_face, b_face } = FaceletCube.faces\n    let stickers = [ ...ext(u_face, U), ...ext(d_face, D),\n        ...ext(l_face, L), ...ext(r_face, R), ...ext(f_face,F),  ...ext(b_face, B)]\n\n    let find_pairs = function() {\n        // enumerate each sticker\n        let edge_stickers = stickers.filter(s => s[2] === Typ.E)\n        let corner_stickers = stickers.filter(s => s[2] === Typ.C)\n\n        let ep_stickers : StickerExtT[][] = Array(12).fill(0).map(_ => Array(0))\n        edge_stickers.map(s => ep_stickers[s[0]].push(s) )\n\n        let cp_stickers : StickerExtT[][] = Array(8).fill(0).map(_ => Array(0))\n        corner_stickers.map(s => cp_stickers[s[0]].push(s))\n\n        const epcp_pairs : [number, number][] = []\n        for (let e = 0; e < 12; e++) {\n            for (let c = 0; c < 8; c++) {\n                let efs = ep_stickers[e]\n                let cfs = cp_stickers[c]\n\n                let match = 0;\n                efs.forEach( (e) => {\n                    cfs.forEach( (c) => { if (e[3] === c[3]) match++ })\n                })\n                if (match === 2) {\n                    epcp_pairs.push( [e, c] )\n                }\n            }\n        }\n\n\n        let get_color = (cube: CubieCube, s: StickerExtT) => {\n            return FaceletCube.color_of_sticker(cube, [s[0], s[1], s[2]] )\n        }\n        let func = (cube: CubieCube) => {\n            // now we process the cube\n            let connected_pairs : [number, number][]= []\n            //console.log(\"All neighboring pairs \", epcp_pairs)\n            for (let [ep, cp] of epcp_pairs) {\n                let efs = ep_stickers[ep]\n                let cfs = cp_stickers[cp]\n                let cnt = 0;\n                efs.forEach( (e) => {\n                    const c = cfs.filter( (c) => e[3] === c[3])[0]\n                    if (get_color(cube, e) === get_color(cube, c)) cnt++;\n                })\n                if (cnt === 2) {\n                    connected_pairs.push([ep, cp])\n                }\n            }\n            return connected_pairs\n        }\n        return func\n    }()\n\n    let is_mask_solved2 = (cube: CubieCube, { co, eo, cp, ep }: Mask, premove: (Move | Move[])[]) => {\n        //let moves = [ [], Move.all[\"U\"], Move.all[\"U'\"], Move.all[\"U2\"] ]\n        co = co || cp\n        eo = eo || ep\n        for (let move of premove) {\n            let cube1 = cube.apply(move)\n            let solved = true\n            for (let i = 0; i < 8 && solved; i++) {\n                if ((co[i] && cube1.co[i] !== 0)\n                    || (cp[i] && cube1.cp[i] !== i)) {\n                    solved = false;\n                }\n            }\n            for (let i = 0; i < 12 && solved; i++) {\n                if ((eo[i] && cube1.eo[i] !== 0)\n                    || (ep[i] && cube1.ep[i] !== i)) {\n                    solved = false;\n                }\n            }\n            if (solved) return true;\n        }\n        return false;\n    }\n\n    const u_premove = [[], Move.all[\"U\"], Move.all[\"U'\"], Move.all[\"U2\"]]\n    const m2_premove = [[], Move.all[\"M2\"]]\n\n    let is_cmll_solved = (cube: CubieCube) => {\n        return is_mask_solved2(cube, lse_mask, u_premove)\n    }\n\n    let get_random_with_mask = ({ co, eo, cp, ep }: Mask): CubieCube => {\n        co = co || cp\n        eo = eo || ep\n        // get_random -- figure out which masks are 0, and assign random to these\n        let random_ori = (ori_mask: number[], typ: Typ) => {\n            let ori = Array(ori_mask.length).fill(0)\n            let mod = (typ === C) ? 3 : 2\n            let sum: number\n            do {\n                sum = 0\n                for (let i in ori_mask) {\n                    if (ori_mask[i] === 0) {\n                        ori[i] = rand_int(mod)\n                        sum += ori[i]\n                    }\n                }\n            } while (sum % mod > 0)\n            return ori\n        }\n        let random_perm = (perm_mask: number[]) => {\n            let perm: number[] = Array(perm_mask.length).fill(0)\n            let undecided: number[] = []\n            for (let i = 0; i < perm_mask.length; i++) {\n                if (perm_mask[i] === 0) {\n                    undecided.push(i)\n                } else {\n                    perm[i] = i\n                }\n            }\n            rand_shuffle(undecided)\n            for (let i = 0, cnt = 0; i < perm_mask.length; i++) {\n                if (perm_mask[i] === 0) {\n                    perm[i] = undecided[cnt]\n                    cnt += 1\n                }\n            }\n            return perm\n        }\n        let cp_rand, ep_rand, par\n        do {\n            [cp_rand, ep_rand] = [random_perm(cp), random_perm(ep)]\n            par = (getParity(cp_rand) + getParity(ep_rand)) & 1\n        } while (par > 0)\n\n        return new CubieCube({\n            co: random_ori(co, C),\n            cp: cp_rand,\n            eo: random_ori(eo, E),\n            ep: ep_rand,\n        })\n    }\n\n    let get_random_lse = (): CubieCube => {\n        let cube = get_random_with_mask(lse_mask)\n        return cube.apply(rand_choice(m2_premove))\n    }\n\n \n\n    return {\n        is_cmll_solved,\n        is_solved,\n        get_random_lse,\n        get_random_with_mask,\n        is_cube_solved,\n        find_pairs,\n        stickers\n    }\n})()\n\nexport abstract class Storage {\n    abstract name: string;\n    abstract serialize(): string;\n    abstract deserialize(x: string): void;\n    abstract _setDefault(): void;\n    save() {\n        window.localStorage.setItem(this.name, this.serialize());\n    }\n    load() {\n        const item = window.localStorage.getItem(this.name)\n        if (item) this.deserialize(item);\n        else this._setDefault();\n    }\n}\n\nexport class ColorScheme extends Storage {\n    // UDFBLR\n    // specify the colors for uf\n    // how to do this?\n    static default_colors = {\n        \"G\": \"#00b500\",\n        \"B\": \"#0000ff\",\n        \"R\": \"#ff0000\",\n        \"O\": \"#ff8800\",\n        \"Y\": \"#ffff00\",\n        \"W\": \"#ffffff\",\n        \"X\": \"#cccccc\"\n    }\n    name = \"colorscheme\";\n    colors: {[key:string]:string} = {};\n    // UDFBLR from UF\n    // INFERR UFR from UF?\n    static valid_schemes = [\n        \"WYGBOR\",\n        \"WYBGRO\",\n        \"WYROGB\",\n        \"WYORBG\",\n        \"YWGBRO\",\n        \"YWBGOR\",\n        \"YWROBG\",\n        \"YWORGB\",\n\n        \"GBWYRO\",\n        \"GBYWOR\",\n        \"GBROYW\",\n        \"GBORWY\",\n        \"BGWYOR\",\n        \"BGYWRO\",\n        \"BGROWY\",\n        \"BGORYW\",\n\n        \"ORWYGB\",\n        \"ORYWBG\",\n        \"ORGBYW\",\n        \"ORBGWY\",\n        \"ROWYBG\",\n        \"ROYWGB\",\n        \"ROGBWY\",\n        \"ROBGYW\",\n    ]\n    static valid_schemes_map = function() {\n        return new Map(ColorScheme.valid_schemes.map(x => [ x[0] + x[2], x]))\n    }();\n    constructor(suppressLoad?: boolean) {\n        super();\n        if (!suppressLoad) {\n            this.load();\n        }\n    }\n    toUserInput() {\n        return \"GBROYWX\".split('').map(x => this.colors[x])\n    }\n    set( colors:{[key:string]:string} | string[]) {\n        let newScheme = new ColorScheme(true);\n        if (Array.isArray(colors)) {\n            colors.forEach( (color, i) => newScheme.colors[\"GBROYWX\"[i]] = color )\n        } else {\n            newScheme.colors = {...this.colors, ...colors};\n        }\n        newScheme.save();\n        return newScheme\n    }\n    setWithDefault() {\n        let newScheme = new ColorScheme(true);\n        newScheme._setDefault();\n        newScheme.save();\n        return newScheme\n    }\n    _setDefault() { this.colors = ColorScheme.default_colors; };\n    serialize() {\n        return JSON.stringify(this.colors)\n    }\n    deserialize(s: string) {\n        this.colors = JSON.parse(s)\n    }\n    getColorsForOri(s: string) {\n        let faces = (ColorScheme.valid_schemes_map.get(s) || ColorScheme.valid_schemes_map.get(\"WG\")) + \"X\";\n        let arr : string[] = []\n        for (let i = 0; i < faces.length; i++) {\n            arr.push(this.colors[faces[i]]!)\n        }\n        return arr\n    }\n}\n\nlet Mask = {\n    lse_mask, fs_back_mask, fs_front_mask, fbdr_mask, fb_mask, sb_mask, cmll_mask, ss_front_mask, ss_back_mask,\n    empty_mask, dl_solved_mask, bl_solved_mask, solved_mask, zhouheng_mask, lse_4c_mask,\n    copy: mask_copy\n}\n\nexport { FaceletCube, CubeUtil, Mask }\n","import React from 'react'\n\nimport {\n    FormControlLabel, FormGroup, Button, makeStyles, Box,\n    FormControl, FormLabel, RadioGroup, Checkbox, Dialog, DialogTitle, DialogContent, DialogActions\n} from '@material-ui/core';\n\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport Radio from '@material-ui/core/Radio';\n\nimport { AppState, Config, Action } from '../Types';\nimport Selector from '../lib/Selector';\nimport CaseVisualizer from './CaseVisualizer';\n\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(2),\n      backgroundColor: theme.palette.background.default\n    },\n    button: {\n      width: \"100%\",\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    infoColumn: {\n      color: theme.palette.background.paper\n    },\n    scrambleColumn: {\n      paddingLeft: theme.spacing(3)\n    },\n    textColumn: {\n      // color: \"black\",\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 138\n      },\n    },\n    fixedHeight: {\n      height: 250,\n    },\n    title : {\n        flexGrow: 1,\n    },\n    select: {\n      color: theme.palette.text.primary\n    },\n    selectLabel: {\n      color: theme.palette.text.secondary\n    }\n\n}))\n\nfunction SingleSelect(props: {state: AppState, dispatch: React.Dispatch<Action>,\n    select: string, label?: string}) {\n  let { state, dispatch, select } = props\n  let { config } = state\n  let sel = (config as any)[select] as Selector\n  let classes = useStyles()\n\n  const handleChange = (evt: { target: { value: string; }; }) => {\n    let { names } = sel\n    let n = names.length\n    let new_flags = Array(n).fill(0)\n\n    for (let i = 0; i < names.length; i++) {\n      if (names[i] === evt.target.value) {\n        new_flags[i] = 1\n      }\n    }\n    dispatch( { type: \"config\", content: {[select]: sel.setFlags(new_flags) } } )\n  }\n\n  let radioValue = function() {\n    let { names, flags } = sel\n    for (let i = 0; i < flags.length; i++) {\n      if (flags[i] === 1) return names[i]\n    }\n    return \"\"\n  }()\n\n  let label = sel.label || props.label || \"\"\n  return (\n  <Box>\n    <FormLabel component=\"legend\"className={classes.selectLabel} >{label}</FormLabel>\n    <RadioGroup aria-label=\"position\" name=\"position\" value={radioValue} onChange={handleChange} row>\n      {\n        sel.names.map(name => (\n          <FormControlLabel\n            key={name}\n            value={name}\n            control={<Radio color=\"primary\" />}\n            label={name}\n            labelPlacement=\"end\"\n          />\n        ))\n      }\n    </RadioGroup>\n  </Box>)\n}\n\n\n\ntype MultiSelectOptions = {\n  label?: string, noDialog?: boolean,\n  manipulators?: {name: string, enableIdx: number[]}[]\n}\n\n\nfunction MultiSelectContent(props: {state: AppState, dispatch: React.Dispatch<Action>, select: string, options?: MultiSelectOptions }) {\n  let { state, dispatch, select, options } = props\n  options = options || {}\n  let { config } = state\n\n  let sel = (config as any)[select] as Selector\n  const handleChange = (evt: { target: { value: string; checked: boolean }; }) => {\n    let { names, flags } = sel\n    let new_flags = [...flags]\n\n    for (let i = 0; i < names.length; i++) {\n      if (names[i] === evt.target.value) {\n        new_flags[i] = (evt.target.checked)? 1 : 0\n      }\n    }\n    dispatch( { type: \"config\", content: {[select]: sel.setFlags(new_flags) } } )\n  }\n\n  let makeBox = (name: string, checked: boolean) => {\n    return (\n    <FormControlLabel\n        control={\n        <Checkbox color=\"primary\" checked={checked} onChange={handleChange} />\n        }\n        label={name}\n        key={name}\n        value={name}\n    />)\n  }\n\n  const [manipChecked, setManipChecked] = React.useState< { [ name: string ]: boolean } >({})\n  let label = sel.label || options.label || \"\"\n  let makeManipulator = (manip: {name: string, enableIdx: number[]}) => {\n    let {name, enableIdx} = manip\n    let handleChange = (evt: { target: { value: string; checked: boolean }; }) => {\n      setManipChecked( {...manipChecked, [name] : evt.target.checked } )\n      let fillValue = (evt.target.checked);\n      let { flags } = sel\n      let new_flags = [...flags]\n      for (let i of enableIdx) {\n        new_flags[i] = fillValue ? 1 : 0;\n      }\n      dispatch( { type: \"config\", content: {[select]: sel.setFlags(new_flags) } } )\n    }\n    return (\n      <FormControlLabel\n      control={\n      <Checkbox color=\"primary\" checked={manipChecked[name]} onChange={handleChange} />\n      }\n      label={name}\n      key={name}\n      value={name}\n      />)\n  }\n  let manipulator_row = options.manipulators ?\n    (<FormGroup row>\n    {options.manipulators.map(x => makeManipulator(x)) }\n    </FormGroup>) : null;\n  const content = (\n    <React.Fragment>\n      {manipulator_row}\n      <FormGroup row>\n      {sel.names.map( (name, i) => makeBox(name, !!sel.flags[i]))}\n      </FormGroup>\n    </React.Fragment>\n  )\n  return {label, content}\n}\n\nfunction MultiSelect(props: {state: AppState, dispatch: React.Dispatch<Action>, select: string, options?: MultiSelectOptions }) {\n  let { state, dispatch, select, options } = props\n  let {label, content} = MultiSelectContent({state, dispatch, select, options})\n  options = options || {}\n\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  }\n  let classes = useStyles()\n\n  if (options.noDialog)\n  return (\n    <FormControl component=\"fieldset\" className={classes.select}>\n      <FormLabel component=\"legend\"className={classes.selectLabel} >{label}</FormLabel>\n      {content}\n    </FormControl>\n  )\n\n  return (\n  <Box>\n    <FormLabel component=\"legend\">{label}</FormLabel>\n    <Box height={8}/>\n    <Button color=\"primary\" variant=\"outlined\" style={{borderWidth: 2}} onClick={handleClickOpen}>\n    <SettingsIcon fontSize=\"small\" color=\"primary\" style={{marginLeft: -6, marginRight: 3}}></SettingsIcon>\n      Edit\n    </Button>\n    <Box height={8}/>\n    <Dialog disableEscapeKeyDown open={open} onClose={handleClose}>\n      <DialogTitle> {label} </DialogTitle>\n      <DialogContent>\n        {content}\n      </DialogContent>\n      <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Ok\n          </Button>\n      </DialogActions>\n    </Dialog>\n  </Box>\n  )\n}\n\n\nexport { SingleSelect, MultiSelectContent, MultiSelect }","import React, { Fragment } from 'react'\n\nimport {\n    TextField,\n    Divider,\n    Button, Box,\n    FormLabel, Dialog, DialogTitle, DialogContent, DialogActions\n} from '@material-ui/core';\n\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport { AppState, Config, Action } from '../Types';\nimport { ColorScheme } from '../lib/CubeLib';\n\nimport { MultiSelectContent } from './SelectorViews';\n\nexport function ColorSetter(props: {state: AppState, dispatch: React.Dispatch<Action>}) {\n    const [text, setText] = React.useState(props.state.colorScheme.toUserInput().join(\",\"))\n    const handleChange = (event: any) => setText(event.target.value);\n    const handleClick = () => {\n        let arr = text.split(\",\")\n        props.dispatch({\n            type: \"colorScheme\",\n            content: arr.length === 7? arr : ColorScheme.default_colors\n        })\n    }\n    return (\n        <Fragment>\n        <Box>\n        <TextField\n            label=\"Color\"\n            helperText=\"G,B,R,O,Y,W,Gray\"\n            onChange={handleChange}\n            fullWidth\n            value={text}\n        /></Box>\n\n        <Box>\n        <Button variant=\"outlined\" size=\"medium\" color=\"primary\" onClick={handleClick} >\n            Set color\n        </Button>\n        </Box>\n        </Fragment>\n    )\n}\n\nexport function ColorPanel(props: {state: AppState, dispatch: React.Dispatch<Action>}) {\n    let { state, dispatch } = props\n    let select = \"orientationSelector\"\n    let {content} = MultiSelectContent({state, dispatch, select})\n\n    const [open, setOpen] = React.useState(false);\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n    const handleClose = (e: any, reason: string) => {\n      if (reason === \"backdropClick\") \n        setOpen(false);\n    }\n    return (\n        <div>\n        <FormLabel component=\"legend\">Orientation and Color Scheme</FormLabel>\n        <Box height={8}/>\n        <Button color=\"primary\" variant=\"outlined\" style={{borderWidth: 2}} onClick={handleClickOpen}>\n        <SettingsIcon fontSize=\"small\" color=\"primary\" style={{marginLeft: -6, marginRight: 3}}></SettingsIcon>\n          Edit\n        </Button>\n        <Box height={8}/>\n        <Dialog disableEscapeKeyDown open={open} onClose={handleClose}>\n          <DialogTitle> Set Orientation (U-F) and Color Scheme  </DialogTitle>\n          <DialogContent>\n            {content}\n            <Box height={20}/>\n                <Divider />\n            <Box height={20}/>\n            <ColorSetter {...{state, dispatch}}/>\n\n          </DialogContent>\n          <DialogActions>\n              <Button onClick={() => setOpen(false)} color=\"primary\">\n                  Close\n              </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n}","import React, { useEffect } from 'react'\nimport * as SRVisualizer from 'sr-visualizer'\nimport { MoveSeq } from '../lib/CubeLib'\n\n\nfunction CaseVisualizer(props: {name: string, alg: string,size: number, mask?: string, cubeOptions: Partial<SRVisualizer.CubeOptions>}) {\n  const mount = React.useRef<HTMLDivElement | null>(null)\n  useEffect( () => {\n    let dom = mount.current\n    if (dom) {\n      SRVisualizer.cubeSVG(dom, {\n        width: props.size,\n\t      height: props.size,\n        view: 'plan',\n\t      algorithm: new MoveSeq(props.alg).inv().toString(),\n        mask: props.mask as SRVisualizer.Masking,\n        ...props.cubeOptions\n      })\n    }\n    return () => {\n      if (dom) dom.innerHTML = \"\"\n    }\n  })\n  return (<div ref={mount}>\n  </div>)\n}\n\nexport default CaseVisualizer;","import React from 'react';\nimport { FormLabel, Box, Button, Dialog, DialogTitle, DialogContent, DialogActions, FormControl } from '@material-ui/core';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { getDefaultCompilerOptions } from 'typescript';\n\nexport interface DialogProps {\n  label: string,\n  title?: string,\n}\nexport interface DialogOptions {\n  fullWidth? : boolean\n}\nconst defaultOptions = {\n  fullWidth: false\n}\n\nconst makeDialog = <P extends object>(\n  Component: React.ComponentType<P>, options?: DialogOptions\n) => function DialogView(props: P & DialogProps) {\n  options = options || defaultOptions\n  const title = props.title || props.label\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  }\n\n  return (\n  <Box>\n    <FormLabel component=\"legend\">{props.label}</FormLabel>\n    <Box height={8}/>\n    <Button color=\"primary\" variant=\"outlined\" style={{borderWidth: 2}} onClick={handleClickOpen}>\n      <SettingsIcon fontSize=\"small\" color=\"primary\" style={{marginLeft: -6, marginRight: 3}}></SettingsIcon>\n        {\"SELECT\"}\n    </Button>\n    <Box height={8}/>\n\n    <Dialog disableEscapeKeyDown open={open} onClose={handleClose} maxWidth=\"xl\" fullWidth={options.fullWidth}>\n      <DialogTitle> {title} </DialogTitle>\n      <DialogContent>\n        <Component {...props}/>\n      </DialogContent>\n      <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" size=\"large\" >\n            {\"CLOSE\" }\n          </Button>\n      </DialogActions>\n    </Dialog>\n  </Box>\n  )\n\n}\n\nexport {makeDialog}","import { red } from '@material-ui/core/colors';\nimport { createTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createTheme({\n  name: \"bright\",\n  palette: {\n    primary: {\n      main: '#556cd6',// '#e0e8ff'//b0c4ee', //\n    },\n    secondary: {\n      main: '#d32f2f',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#eeeeef',\n      paper: '#fff'\n    },\n    text: {\n      primary: '#000',\n      secondary: '#888',\n      hint: '#556cd6'\n    }\n  },\n  /*\n  typography: {\n    \"fontFamily\": `\"Public Sans\", \"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n    \"fontSize\": 14,\n    \"fontWeightLight\": 400,\n    \"fontWeightRegular\": 500,\n    \"fontWeightMedium\": 600\n  }\n  */\n\n});\nconst themeDark = createTheme({\n  name: \"dark\",\n  palette: {\n    primary: {\n      main: '#9FA4C2', // '#757575',\n    },\n    secondary: {\n      main: '#ffffff', //f55057',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#121212',\n      paper: '#252525' //#424242'\n    },\n    text: {\n      primary: '#fff',\n      secondary: '#ddd',\n      hint: '#eee'\n    }\n  },\n  overrides: {\n    // Style sheet name ⚛️\n    MuiDivider: {\n      // Name of the rule\n      // Some CSS\n      root: {\n        backgroundColor: 'rgba(255, 255 ,255, 0.3)',\n      }\n    },\n  }\n\n});\n\nexport { theme, themeDark };","import Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\nimport React from 'react'\nimport CaseVisualizer from './CaseVisualizer'\n\nimport { AppState, Action, Config } from \"../Types\";\nimport { makeDialog } from './Dialog';\nimport SRVisualizer from 'sr-visualizer';\nimport { Button, ButtonGroup, Divider, makeStyles, Typography, useMediaQuery } from '@material-ui/core';\nimport Selector from '../lib/Selector';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { theme } from '../theme';\n\ntype CaseSelectSettings = {\n  selector: string,\n  algs: [string, string][],\n  groups: string[],\n  cubeOptions?: Partial<SRVisualizer.CubeOptions>\n}\n\nfunction splitAlgIntoGroups(algs: [string, string][], groups: string[], flags: number[]) {\n  const algGroups : { [k: string] : [[string, string], number][] }= Object.fromEntries(groups.map(g => [g, []]))\n  algs.forEach((alg, i) => {\n    const prefix = alg[0].split(\"_\", 1)[0]\n    if (prefix in algGroups)\n      algGroups[prefix].push([alg, i])\n  })\n  return algGroups\n}\n\nconst useStyles = makeStyles(theme => {\n  let is_bright = theme.palette.primary.main === '#556cd6'\n  return ({\n    caseBoxOn: {\n      backgroundColor: is_bright ? '#bdedff' : theme.palette.primary.main,\n    },\n    groupBox: {\n    }\n  })\n})\n\nfunction CaseSelectContent(props: { state: AppState, dispatch: React.Dispatch<Action>, settings: CaseSelectSettings }) {\n  let { selector, groups, algs } = props.settings\n  const sel = (props.state.config as any)[selector] as Selector\n  const algGroups = splitAlgIntoGroups(algs, groups, sel.flags)\n  const handleSelectGroup = (groupname: string, value: number) => () => {\n    const newFlags = [...sel.flags]\n    algGroups[groupname].forEach( ([alg, i]) => {\n      newFlags[i] = value\n    })\n    props.dispatch({ type: \"config\", content: {[selector]: sel.setFlags(newFlags) } } )\n  }\n  const handleSelectCase = (caseIdx: number) => () => {\n    const newFlags = [...sel.flags]\n    newFlags[caseIdx] = (newFlags[caseIdx] === 0) ? 1 : 0\n    props.dispatch({ type: \"config\", content: {[selector]: sel.setFlags(newFlags) } } )\n  }\n  const handleSelectAll = (value: number) => () => {\n    const newFlags = Array(sel.flags.length).fill(value)\n    props.dispatch({ type: \"config\", content: {[selector]: sel.setFlags(newFlags)}})\n  }\n  const classes = useStyles()\n  const gt_sm = useMediaQuery(theme.breakpoints.up('sm'));\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" marginRight={10}>\n      <Box marginBottom={3}>\n        <ButtonGroup color=\"primary\" style={{height: \"2rem\"}}>\n          <Button onClick={handleSelectAll(1)}\n            startIcon={<CheckCircleIcon/>}>Select All</Button>\n          <Button onClick={handleSelectAll(0)}\n            startIcon={<CancelIcon/>}>Deselect All</Button>\n        </ButtonGroup>\n      </Box>\n      {groups.map((groupname, i) => (\n        <Box display=\"flex\" flexDirection={gt_sm ? \"row\" : \"column\"} key={i} className={classes.groupBox} marginBottom={2}>\n          <Box display=\"flex\" flexDirection={gt_sm ? \"column\" : \"row\"} marginRight={4} >\n\n            <Box marginRight={2}>\n            <Typography variant=\"h5\" gutterBottom>\n              {groupname[0].toUpperCase() + groupname.substr(1)}\n            </Typography>\n            </Box>\n            <Box display=\"flex\" alignItems=\"center\">\n              <ButtonGroup color=\"primary\" variant=\"contained\" aria-label=\"outlined primary button group\" style={{height: \"3.7rem\"}}>\n                <Button onClick={handleSelectGroup(groupname, 1)}\n                  startIcon={<CheckCircleIcon/>}></Button>\n                <Button  variant=\"outlined\" onClick={handleSelectGroup(groupname, 0)}\n                  startIcon={<CancelIcon/>}></Button>\n              </ButtonGroup>\n            </Box>\n          </Box>\n          <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"wrap\">\n          {\n            algGroups[groupname].map( ([[name, alg], idx]) =>\n              <Box border={1} borderColor=\"primary.main\" \n                key={name} \n                onClick={handleSelectCase(idx)}\n                style={{transition: \"all .3s ease\" }}\n                className={sel.flags[idx] ? classes.caseBoxOn : \"\"}>\n                <CaseVisualizer \n                  name={name}\n                  size={100}\n                  alg={alg}\n                  mask=\"cmll\"\n                  cubeOptions={props.settings.cubeOptions || {}}\n                />\n              </Box>\n            )\n          }\n          </Box>\n          <Divider></Divider>\n        </Box>\n      ))}\n    </Box>\n  )\n}\n\nconst CaseSelectDialog = makeDialog(CaseSelectContent, {fullWidth: true})\n\nexport default CaseSelectDialog;","// source: \"https://sites.google.com/view/kianroux/cmll\" and https://github.com/AshleyF/briefcubing/blob/master/algs.js\n\n//type oll_case = \"o\"|\"h\"|\"pi\"|\"u\"|\"t\"|\"s\"|\"as\"|\"l\"\nimport zIndex from \"@material-ui/core/styles/zIndex\";\nimport Selector from \"../lib/Selector\";\nimport { rand_choice } from \"./Math\";\n\nconst get_active_names = (sel : Selector) => {\n    let res = []\n    for (let i = 0; i < sel.names.length; i++) {\n        if (sel.flags[i]) {\n            res.push(sel.names[i]);\n        }\n    }\n    return res\n}\n\nexport type CaseDesc = {\n    id: string,\n    algs: string[],\n    setup?: string,\n    kind: string\n}\n\nexport let createAlg = (id: string, alg: string | string[], kind:string, setup?: string) : CaseDesc => ({\n    id, algs:Array.isArray(alg) ? alg : [alg], kind, setup\n})\n\nconst empty_alg = createAlg(\"empty\", \"\", \"any\")\n\nexport const cmll_algs_raw : [string,string][] = [\n    [\"o_adjacent_swap\", \"R U R' F' R U R' U' R' F R2 U' R'\"],\n    [\"o_diagonal_swap\", \"F R U' R' U' R U R' F' R U R' U' R' F R F'\"],\n    [\"h_columns\", \"U' R U R' U R U' R' U R U2 R'\"],\n    [\"h_rows\", \"F R U R' U' R U R' U' R U R' U' F'\"],\n    [\"h_column\", \"U' R U2' R2' F R F' U2 R' F R F'\"],\n    [\"h_row\", \"r U' r2' D' r U' r' D r2 U r'\"],\n    [\"pi_right_bar\", \"F R U R' U' R U R' U' F'\"],\n    [\"pi_back_slash\", \"U F R' F' R U2 R U' R' U R U2' R'\"],\n    [\"pi_x_checkerboard\", \"U' R' F R U F U' R U R' U' F'\"],\n    [\"pi_forward_slash\", \"R U2 R' U' R U R' U2' R' F R F'\"],\n    [\"pi_columns\", \"U' r U' r2' D' r U r' D r2 U r'\"],\n    [\"pi_left_bar\", \"U' R' U' R' F R F' R U' R' U2 R\"],\n    [\"u_forward_slash\", \"U2 R2 D R' U2 R D' R' U2 R'\"],\n    [\"u_back_slash\", \"R2' D' R U2 R' D R U2 R\"],\n    [\"u_front_row\", \"R' U' R U' R' U2 R2 U R' U R U2 R'\"],\n    [\"u_rows\", \"U' F R2 D R' U R D' R2' U' F'\"],\n    [\"u_x_checkerboard\", \"U2 r U' r' U r' D' r U' r' D r\"],\n    [\"u_back_row\", \"U' F R U R' U' F'\"],\n    [\"t_left_bar\", \"U' R U R' U' R' F R F'\"],\n    [\"t_right_bar\", \"U L' U' L U L F' L' F\"],\n    [\"t_rows\", \"R U2 R' U' R U' R2' U2' R U R' U R\"],\n    [\"t_front_row\", \"r' U r U2' R2' F R F' R\"],\n    [\"t_back_row\", \"r' D' r U r' D r U' r U r'\"],\n    [\"t_columns\", \"U2 r2' D' r U r' D r2 U' r' U' r\"],\n    [\"s_left_bar\", \"R U R' U R U2 R'\"],\n    [\"s_x_checkerboard\", \"L' U2 L U2' L F' L' F\"],\n    [\"s_forward_slash\", \"F R' F' R U2 R U2' R'\"],\n    [\"s_columns\", \"R U R' U' R' F R F' R U R' U R U2' R'\"],\n    [\"s_right_bar\", \"U2' R U R' U R' F R F' R U2' R'\"],\n    [\"s_back_slash\", \"R U' L' U R' U' L\"],\n    [\"as_right_bar\", \"U' R U2' R' U' R U' R'\"],\n    [\"as_columns\", \"R2 D R' U R D' R' U R' U' R U' R'\"],\n    [\"as_back_slash\", \"F' r U r' U2' r' F2 r\"],\n    [\"as_x_checkerboard\", \"R U2' R' U2' R' F R F'\"],\n    [\"as_forward_slash\", \"L' U R U' L U R'\"],\n    [\"as_left_bar\", \"U2' R U2' R' F R' F' R U' R U' R'\"],\n    [\"l_mirror\", \"F R U' R' U' R U R' F'\"],\n    [\"l_inverse\", \"F R' F' R U R U' R'\"],\n    [\"l_pure\", \"U2 R U R' U R U' R' U R U' R' U R U2' R'\"],\n    [\"l_front_commutator\", \"R U2 R D R' U2 R D' R2'\"],\n    [\"l_diag\", \"U2 R' U' R U R' F' R U R' U' R' F R2\"],\n    [\"l_back_commutator\", \"U' R' U2 R' D' R U2 R' D R2\"],\n    [\"solved\", \"\"]\n]\n\nexport const nmcll_to_cmll_mapping : [string, string[]][] = [\n    [\"o_1\", [\"h_rows\", \"pi_columns\", \"h_columns\"]],\n    [\"o_2\", [\"pi_x_checkerboard\"]],\n    [\"s_1\", [\"as_right_bar\", \"t_right_bar\", \"l_diag\",  \"as_forward_slash\"]],\n    [\"s_2\", [\"u_forward_slash\", \"as_left_bar\", \"l_pure\", \"as_x_checkerboard\"]],\n    [\"s_3\", [\"u_back_slash\", \"t_left_bar\", \"as_back_slash\", \"as_columns\"]],\n    [\"as_1\", [\"t_left_bar\", \"s_left_bar\", \"l_diag\", \"s_back_slash\"]],\n    [\"as_2\", [\"u_back_slash\", \"s_right_bar\", \"as_left_bar\", \"s_x_checkerboard\"]],\n    [\"as_3\", [\"s_forward_slash\", \"t_right_bar\", \"as_right_bar\", \"s_columns\", ]],\n    [\"t_1\", [\"u_back_row\", \"t_back_row\", \"h_row\", \"pi_right_bar\"]],\n    [\"t_2\", [\"u_front_row\", \"as_back_slash\", \"s_forward_slash\", \"pi_left_bar\"]],\n    [\"t_3\", [\"t_front_row\", \"as_forward_slash\", \"s_back_slash\", \"h_row\"]],\n    [\"u_1\", [\"u_rows\", \"t_rows\", \"pi_left_bar\", \"h_column\"]],\n    [\"u_2\", [\"t_columns\", \"s_columns\", \"as_columns\", \"pi_right_bar\"]],\n    [\"u_3\", [\"u_x_checkerboard\", \"s_x_checkerboard\", \"as_x_checkerboard\", \"h_column\"]],\n    [\"l_1\", [\"l_inverse\", \"as_right_bar\", \"s_right_bar\", \"pi_forward_slash\"]],\n    [\"l_2\", [\"l_mirror\", \"as_left_bar\", \"s_left_bar\", \"pi_back_slash\"]],\n    [\"l_3\", [\"l_back_commutator\", \"l_front_commutator\", \"pi_forward_slash\", \"pi_back_slash\"]],\n    [\"pi_1\", [\"o_adjacent_swap\", \"u_front_row\", \"t_columns\", \"pi_x_checkerboard\"]],\n    [\"pi_2\", [\"u_back_row\", \"l_front_commutator\", \"l_back_commutator\", \"t_rows\"]],\n    [\"pi_3\", [\"o_adjacent_swap\", \"l_mirror\", \"l_inverse\", \"pi_columns\"]],\n    [\"h_1\", [\"solved\", \"t_front_row\", \"h_rows\"]],\n    [\"h_2\", [\"o_diagonal_swap\", \"u_x_checkerboard\", \"h_columns\"]],\n    [\"h_3\", [\"u_rows\", \"t_back_row\"]],\n]\n\nexport const nmcll_display_parity : [string, string, string][] = [\n [\"o_1\", \"U\", \"\"],\n [\"o_2\", \"\", \"\"], \n [\"s_1\", \"\", \"U\"],\n [\"s_2\", \"U\", \"U\"],\n [\"s_3\", \"\", \"U\"],\n [\"as_1\",\"\", \"U2\"],\n [\"as_2\",\"U\", \"U'\"],\n [\"as_3\",\"\", \"\"],\n [\"t_1\", \"\", \"U2\"],\n [\"t_2\", \"\", \"U2\"],\n [\"t_3\", \"\", \"U2\"],\n [\"u_1\", \"U\", \"U2\"],\n [\"u_2\", \"U\", \"U2\"],\n [\"u_3\", \"\", \"U2\"],\n [\"l_1\", \"U\", \"\"],\n [\"l_2\", \"U\", \"U2\"],\n [\"h_3\", \"\", \"\"], \n [\"pi_1\",\"\", \"U2\"],\n [\"pi_2\",\"U\", \"U'\"],\n [\"pi_3\",\"\", \"U2\"],\n [\"l_3\", \"U\", \"\"],\n [\"h_1\", \"\", \"\"], \n [\"h_2\", \"\", \"\"], \n]\nconst cmll_algs : CaseDesc[] = cmll_algs_raw.map( ([x, y]) => createAlg(x, y, \"cmll\"))\n\nlet trigger_algs: CaseDesc[] = [\n    createAlg(\"RUR'_1\", \"R U R'\", \"trigger\"),\n    createAlg(\"RUR'_2\", \"r U r'\", \"trigger\"),\n    createAlg(\"RU'R'_1\", \"R U' R'\", \"trigger\"),\n    createAlg(\"RU'R'_2\", \"r U' r'\", \"trigger\"),\n    createAlg(\"R'U'R_1\", \"R' U' R\", \"trigger\"),\n    createAlg(\"R'U'R_2\", \"r' U' r\", \"trigger\"),\n    createAlg(\"R'UR_1\", \"R' U R\", \"trigger\"),\n    createAlg(\"R'UR_2\", \"r' U r\", \"trigger\"),\n    createAlg(\"RU2R'_1\", \"R U2 R'\", \"trigger\"),\n    createAlg(\"RU2R'_2\", \"r U2 r'\", \"trigger\"),\n    createAlg(\"R'U2R_1\", \"R' U2 R\", \"trigger\"),\n    createAlg(\"R'U2R_2\", \"r' U2 r\", \"trigger\"),\n]\n\nlet u_auf_algs: CaseDesc[] = [\n    createAlg(\"U\", \"U\", \"u_auf\"),\n    createAlg(\"U'\", \"U'\", \"u_auf\"),\n    createAlg(\"U2\", \"U2\", \"u_auf\"),\n    createAlg(\"None\", \"\", \"u_auf\"),\n]\n\nlet ori_algs: CaseDesc[] =\n    [\"WG\", \"WB\", \"WO\", \"WR\",\n    \"YG\", \"YB\", \"YO\", \"YR\",\n    \"BW\", \"BY\", \"BO\", \"BR\",\n    \"GW\", \"GY\", \"GO\", \"GR\",\n    \"OW\", \"OY\", \"OB\", \"OG\",\n    \"RW\", \"RY\", \"RB\", \"RG\"].map(s => createAlg(s, \"\", \"orientation\"))\n\nlet lookup_algset = (kind : string) => {\n    switch (kind) {\n        case \"cmll\": \n        case \"cmll_case\":\n        case \"nmcll\": return cmll_algs;\n        case \"trigger\": return trigger_algs;\n        case \"orientation\": return ori_algs;\n        case \"u_auf\": return u_auf_algs;\n        default: return []\n    }\n}\n\nlet alg_generator_from_group = (selector: Selector) => {\n    let algSet = lookup_algset(selector.kind)\n    let lookup = new Set(selector.getActiveNames())\n    let get_prefix = (id: string) => {\n        return id.split(\"_\", 1)[0]\n    }\n    let algs : CaseDesc[] = (() => {\n        return algSet.filter(alg => {\n            let prefix = get_prefix(alg.id);\n            return lookup.has(prefix)\n        })\n    })()\n\n    let next = () => {\n        if (algs.length === 0) {\n            return empty_alg\n        } else {\n            return rand_choice(algs)\n        }\n    }\n    return next\n}\n\nlet alg_generator_from_cases = (kind: string, activeNames: string[]) => {\n    let activeNamesSet = new Set(activeNames)\n    // console.log(\"generating from active caes\", activeNamesSet)\n    let algs = lookup_algset(kind).filter(c => activeNamesSet.has(c.id) )\n    let next = () => {\n        if (algs.length === 0) {\n            return empty_alg\n        } else {\n            return rand_choice(algs)\n        }\n    }\n    return next\n}\n\nexport { alg_generator_from_group , alg_generator_from_cases }","import React, { Fragment } from 'react'\n\nimport CubeSim from './CubeSim'\nimport { makeStyles, useTheme, FormControl, FormLabel, Typography, Button} from '@material-ui/core';\n\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport { CubeUtil, FaceletCube, Mask, MoveSeq } from '../lib/CubeLib';\n\nimport { AppState, Action, Config } from \"../Types\";\nimport clsx from 'clsx';\nimport { Face } from '../lib/Defs';\nimport { MultiSelect, SingleSelect } from './SelectorViews';\nimport CaseSelect from './CaseSelectView';\nimport { ColorPanel } from './Input';\nimport { rand_int } from '../lib/Math';\nimport CaseSelectDialog from './CaseSelectView';\nimport { cmll_algs_raw, nmcll_display_parity, nmcll_to_cmll_mapping } from '../lib/Algs';\n\nimport {Face as VFace} from 'sr-visualizer';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(2),\n      backgroundColor: theme.palette.background.default\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    fixedHeight: {\n      height: 350,\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    title : {\n        color: theme.palette.text.hint,\n        fontWeight: 500,\n        fontSize: 18,\n        borderBottom: \"2px solid\",\n    },\n    prompt: {\n      color: theme.palette.text.secondary,\n    },\n    button: {\n      width: \"100%\"\n    },\n}))\n\nconst cmll_name_to_alg = Object.fromEntries(cmll_algs_raw)\nconst nmcll_display_algs = nmcll_to_cmll_mapping.map( ([x, y], i) => {\n  let parity = nmcll_display_parity[i]\n  let alg = cmll_name_to_alg[y[0]]\n  alg = parity[2] + \" \" + alg + \" \" + parity[1]\n  return [x, alg] as [string, string]\n})\n\nfunction NMCLLSelect(props:  { state: AppState, dispatch: React.Dispatch<Action> } ) {\n  const {state, dispatch} = props\n  const groups = [\"o\", \"s\", \"as\", \"t\", \"u\", \"l\", \"pi\", \"h\"]\n  return <CaseSelectDialog {...{state, dispatch, settings: {\n    selector: \"nmcllSelector\",\n    groups,\n    algs: nmcll_display_algs,\n    cubeOptions: {\n      colorScheme: {\n        0: '#ffffff', // URFDLB. U = white\n        1: '#ee0000', // R = red\n        2: '#404040', // F = green\n        3: '#404040', // D = yellow\n        4: '#ffa100', // L = orange\n        5: '#404040', // B = blue\n      }\n    }\n    }, \n    title: \"Select cases by NMCLL recog (this is a separate selection from above, only activated when you're in L/R or F/B mode)\",\n    label: \"Select by NMCLL\"\n  } }/>\n}\n\nfunction _getMask(name: string) {\n  switch (name) {\n    case \"Show\": return Mask.solved_mask;\n    case \"Hide\": return Mask.empty_mask;\n    case \"Hide LSE\": return Mask.lse_mask;\n    default: return Mask.solved_mask\n  }\n}\nfunction CmllTrainerView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n    let { state, dispatch } = props\n    let cube = state.cube.state\n    let classes = useStyles()\n    const canvasPaper = clsx(classes.canvasPaper, classes.fixedHeight);\n    let facelet = FaceletCube.from_cubie(cube,\n      _getMask( state.config.cmllCubeMaskSelector.getActiveName() || \"Show\"))\n\n    let hyperori = state.config.hyperOriSelector.getActiveName() || \"off\"\n    if (hyperori !== \"off\") {\n      if (hyperori === \"F/B\") {\n        facelet = facelet.map( face => face.map(f => f === Face.L || f === Face.R ? Face.X : f) )\n      } else\n        facelet = facelet.map( face => face.map(f => f === Face.F || f === Face.B ? Face.X : f) )\n    }\n    const theme = useTheme()\n\n    const cmll = \"cmllSelector\";\n    const cmllcubemask = \"cmllCubeMaskSelector\";\n    const cmllauf = \"cmllAufSelector\";\n    const trigger = \"triggerSelector\";\n    const hyperorisel = \"hyperOriSelector\";\n\n    const panel = (\n      <Box> \n        { /* <MultiSelect {...{state, dispatch, select: cmll, options: { label: \"CMLL Case\", noDialog: true} }} /> */ }\n        <CaseSelectDialog {...{state, dispatch, settings: {\n          selector: \"cmllCaseSelector\",\n          algs: cmll_algs_raw,\n          groups: [\"o\", \"s\", \"as\", \"t\", \"u\", \"l\", \"pi\", \"h\"],\n          cubeOptions: {\n            colorScheme: {\n              0: '#FEFE00', // URFDLB. U = yellow\n              1: '#ffa100', // R = o\n              2: '#00b800', // F = g\n              3: '#404040', // D = w\n              4: '#ee0000', // L = r\n              5: '#0000f2', // B = blue\n            }\n          }\n          }, \n          label: \"Select CMLL Cases\"\n        } }/>\n        <Box width={8}></Box>\n        <MultiSelect {...{state, dispatch, select: cmllauf, options: { label: \"CMLL Auf\", noDialog: true} }} />\n        <MultiSelect {...{state, dispatch, select: trigger, options: { label: \"SB Last Pair Trigger (Uncheck all for pure CMLL)\", noDialog: true} } } />\n\n        <br/>\n        <NMCLLSelect {...{state, dispatch}}/>\n        <Box width={8}></Box>\n        <SingleSelect {...{state, dispatch, select: hyperorisel, label: \"NMCLL Recog Mode\" } } />\n\n        <SingleSelect {...{state, dispatch, select: cmllcubemask, label: \"Virtual Cube\"}} />\n        <ColorPanel {...{state, dispatch}} />\n      </Box>\n    )\n\n    React.useEffect( () =>  {\n      setReveal(false) // todo: drive this from props. now there's a delay which causes the answer to leak for a split second\n    }, [ state ])\n    const [reveal, setReveal] = React.useState(false)\n    const handleClick = () => {\n      setReveal(true)\n    }\n    const handleNext = () => {\n      dispatch({type: \"key\", content: \"#space\"})\n    }\n\n    React.useEffect(() => {\n      function downHandler(event: KeyboardEvent) {\n        state.keyMapping.handle(event, dispatch);\n        // intercept keyboard event for local control\n        if (event.key === \"/\") {\n          setReveal(true)\n        }\n      }\n      window.addEventListener('keydown', downHandler);\n      return () => {\n        window.removeEventListener('keydown', downHandler);\n      };\n    });\n\n    let alg = \"\"\n    let setup = \"\"\n    if (state.case.desc.length === 4) {\n      setup = state.case.desc[3].algs[0]\n    }\n    if (reveal && state.case.desc.length >= 3) {\n      const moves = new MoveSeq(state.case.desc[1].algs[0] + state.case.desc[2].algs[0] )\n      let moves_c = moves.collapse()\n      if (moves_c.moves.length > 0) {\n        if (moves_c.moves[0].name[0] === \"U\") {\n          alg += \"(\" + moves_c.moves[0].name + \") \";\n          moves_c.moves = moves_c.moves.slice(1)\n        }\n        alg += moves_c.toString()\n      }\n    }\n    return (\n    <Box className={classes.container}>\n    <Grid container >\n      <Grid item xs={12} >\n            <Paper className={canvasPaper}>\n              <Box margin=\"auto\">\n              <CubeSim\n                width={400}\n                height={350}\n                cube={facelet}\n                colorScheme={state.colorScheme.getColorsForOri(state.cube.ori)}\n                theme={state.config.theme.getActiveName()}\n                facesToReveal={[Face.L]}\n              />\n              </Box>\n            </Paper>\n      </Grid>\n    </Grid>\n\n    <Box height = {5}/>\n\n    <Paper className={classes.paper} elevation={2}>\n    <Grid container spacing={2}>\n\n      <Grid item xs={3}>\n\n      <Box display=\"flex\">\n              <Box>\n              <Box className={classes.title} >\n                Scramble\n              </Box> </Box>\n      </Box>\n      </Grid>\n      <Grid item xs={9}>\n        <Box paddingBottom={1} lineHeight={1} >\n          <Typography style={{whiteSpace: 'pre-line', fontSize: 18, fontWeight: 500}}>\n            { setup }\n          </Typography>\n        </Box>\n\n      </Grid>\n      <Grid item xs={3}>\n\n      <Box display=\"flex\">\n              <Box>\n              <Box className={classes.title} >\n                Case\n              </Box> </Box>\n      </Box>\n      </Grid>\n      { (!reveal) ?\n      <Grid item xs={3}>\n      <Button onFocus={(evt) => evt.target.blur() } className={classes.button}\n      size=\"medium\" variant=\"outlined\" color=\"primary\" onClick={handleClick}> { /* className={classes.margin}>  */ }\n          Show\n      </Button>\n      </Grid>\n      :\n      <Grid item xs={9}>\n        <Box paddingBottom={1} lineHeight={1} >\n          <Typography style={{whiteSpace: 'pre-line', fontSize: 18, fontWeight: 500}}>\n            { alg }\n          </Typography>\n        </Box>\n\n      </Grid>\n      }\n    </Grid>\n    <Box height={30}/>\n\n    <Grid container spacing={0}>\n        <Grid item xs={4} sm={4} md={3}>\n          <Button onFocus={(evt) => evt.target.blur() } className={classes.button}\n          size=\"medium\" variant=\"contained\" color=\"primary\" onClick={handleNext}>\n              Next\n          </Button>\n        </Grid>\n    </Grid>\n    </Paper>\n\n\n    <Box height={20}/>\n      <Divider />\n    <Box height={20}/>\n    { panel }\n\n    <Box height={20}/>\n      <Divider />\n    <Box height={15}/>\n\n    <Box>\n    <FormControl component=\"fieldset\" className={classes.prompt}>\n      <FormLabel component=\"legend\">\n         Usage: Press space for next case. Enter to redo. / to reveal.\n      </FormLabel>\n      </FormControl>\n    </Box>\n\n    </Box>\n    );\n}\n\nexport default CmllTrainerView\n\n\n","import React, { Fragment } from 'react'\n\nimport {\n    TextField,\n    Divider,\n    Button, Box,\n    makeStyles,\n    Typography,\n    FormLabel, Dialog, DialogTitle, DialogContent, DialogActions\n} from '@material-ui/core';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport RootRef from '@material-ui/core/RootRef';\n\n\n\nimport { AppState, Config, Action } from '../Types'\nconst useStyles = makeStyles(theme => ({\n\n    setupEdit: {\n        whiteSpace: 'pre-line',\n        fontSize: \"1.2rem\",\n        fontWeight:500,\n        [theme.breakpoints.down('xs')]: {\n        fontSize: \"1.0rem\",\n        fontWeight: 500\n        },\n    },\n    button: {\n        marginRight: theme.spacing(1)\n        //margin: theme.spacing(1)\n    }\n}))\n\nexport function ScrambleInputView(props: { display: string, scrambles: string[], dispatch: React.Dispatch<Action>}) {\n    let classes = useStyles()\n    let [editing, setEditing] = React.useState(false)\n    let [value, setValue] = React.useState(props.scrambles.join(\"\\n\"))\n    let textField = React.useRef<HTMLInputElement | null>(null)\n    let container = React.useRef<HTMLInputElement | null>(null)\n    let editButton = React.useRef<HTMLElement | null>(null)\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue(event.target.value)\n        event.stopPropagation()\n    }\n    const onKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        event.stopPropagation()\n    }\n    const toggleEdit = () => {\n        setEditing(!editing)\n    }\n    const handleClose = () => {\n        setEditing(false)\n        props.dispatch({type: \"scrambleInput\", content: value.split(\"\\n\").filter(s => s.trim())})\n    }\n    React.useEffect(  () => {\n        setValue(props.scrambles.join(\"\\n\"))\n    }, [props.scrambles])\n\n    /*\n    React.useEffect( ()=> {\n        if (editing) {\n            textField.current && textField.current.focus()\n        } else {\n            textField.current && textField.current.blur()\n            editButton.current && editButton.current.blur()\n        }\n    }, [editing]*/\n\n    const onEntered = () => {\n        textField.current && textField.current.focus()\n    }\n    return <>\n    <Box>\n            <Button variant={editing ? \"contained\" : \"outlined\"}\n                color=\"primary\"\n                size=\"small\"\n                onClick={toggleEdit}\n                className={classes.button}\n                startIcon={<EditIcon />}\n            >\n                {\"INPUT\"}\n            </Button>\n\n    </Box>\n\n    <Dialog open={editing} \n            onClose={handleClose}  \n            onKeyPress={onKeyPress} \n            onKeyDown={onKeyPress} \n            onKeyUp={onKeyPress}\n            /* onEntered={onEntered} */\n            >\n          <DialogTitle> Input your own scrambles (one per line) </DialogTitle>\n          <DialogContent>\n                <TextField\n                    inputRef={textField}\n                    multiline\n                    size=\"medium\"\n                    fullWidth\n                    maxRows={10}\n                    rows={3}\n                    InputProps={{\n                        className:classes.setupEdit\n                    }}\n                \n                    value={value}\n                    onChange={onChange}\n                    variant=\"outlined\">\n                </TextField>\n          </DialogContent>\n          <DialogActions>\n              <Box padding={1}>\n              <Button onClick={handleClose} color=\"primary\" variant=\"outlined\" fullWidth >\n                  Confirm\n              </Button>\n              </Box>\n          </DialogActions>\n    </Dialog>\n    </>\n    /*\n    return <Dialog open={props.open} onClose={handleClose}>\n          <DialogTitle> Input your own scrambles  </DialogTitle>\n          <DialogContent>\n              Hello\n          </DialogContent>\n          <DialogActions>\n              <Button onClick={handleClose} color=\"primary\">\n                  Confirm\n              </Button>\n          </DialogActions>\n        </Dialog>\n        */\n}","import React, { Fragment } from 'react'\n\nimport CubeSim from './CubeSim'\nimport { Button, makeStyles, Typography, useTheme, FormControl, FormLabel, } from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport { FaceletCube, Mask, MoveSeq } from '../lib/CubeLib';\n\nimport { AppState,  Action, Config, FavCase, Mode} from \"../Types\";\nimport 'typeface-roboto-mono';\nimport { Face } from '../lib/Defs';\n\nimport { SingleSelect, MultiSelect } from './SelectorViews';\nimport { ColorPanel } from './Input';\nimport { CaseDesc } from '../lib/Algs';\nimport { ScrambleInputView } from './ScrambleInputView';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { config } from 'process';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(2),\n      backgroundColor: theme.palette.background.default,\n      transition: \"all .5s ease-in-out\"\n    },\n    button: {\n      width: \"100%\",\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n      marginBottom: 3,\n      borderRadius: 0\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    infoColumn: {\n      color: theme.palette.background.paper\n    },\n    scrambleColumn: {\n      paddingLeft: theme.spacing(3)\n    },\n    textColumn: {\n      // color: \"black\",\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 138\n      },\n    },\n    setup: {\n      whiteSpace: 'pre-line',\n      fontSize: \"1.4rem\",\n      fontWeight:500,\n      [theme.breakpoints.down('xs')]: {\n      fontSize: \"1.0rem\",\n      fontWeight: 500\n      },\n  },\n    condGap: {\n    },\n    fgap: {\n      flexShrink: 100, flexBasis: \"2.5rem\", minWidth: \"1.5em\",\n      [theme.breakpoints.down('xs')]: {\n        flexBasis: \"1.0rem\", \n        minWidth: \"0.4rem\"\n      }\n    },\n    fixedHeight: {\n      height: 250,\n    },\n    title : {\n        color: theme.palette.text.hint,\n        fontWeight: 500,\n        borderBottom: \"3px solid\",\n    },\n    sourceIcon : {\n        color: theme.palette.text.hint,\n        fontSize: 15,\n        padding: 0\n    },\n    sourceIconWrap : {\n        //border: \"1px solid \" + theme.palette.text.hint,\n        //borderRadius: 3\n    },\n    fab: {\n      position: 'absolute',\n      top: theme.spacing(7),\n      left: theme.spacing(2),\n    },\n    prompt: {\n      color: theme.palette.text.secondary,\n    },\n  }))\n\n\nfunction getMask(state: AppState) : Mask {\n    if (state.mode === \"fbdr\") {\n      const fbOnly = (state.case.desc.length === 0 || state.case.desc[0].kind === \"fb\")\n      //   getActiveName(state.config.fbOnlySelector) === \"FB Last Pair\"\n      return fbOnly ? Mask.fb_mask : Mask.fbdr_mask\n    }\n    else if (state.mode === \"fs\") {\n      let name = state.config.fsSelector.getActiveName()\n      return ({\n        \"Front FS\": Mask.fs_front_mask,\n        \"Back FS\": Mask.fs_back_mask,\n        \"Both\": Mask.fb_mask\n      } as any)[name]\n    }\n    else if (state.mode === \"ss\") {\n      if (state.case.desc.length === 0) return Mask.sb_mask\n      if (state.case.desc[0].kind === \"ss-front\")\n        return Mask.ss_front_mask\n      else\n        return Mask.ss_back_mask\n    }\n    else if (state.mode === \"fb\") {\n      if (state.case.desc.length === 0 || state.case.desc[0].kind === \"fb\") {\n        return Mask.fb_mask\n      }\n      else if (state.case.desc[0].kind === \"fbdr\") {\n        return Mask.fbdr_mask\n      } else {\n        return Mask.solved_mask\n      }\n    }\n    else if (state.mode === \"4c\" || state.mode === \"eopair\") {\n      return Mask.solved_mask\n    }\n    else return Mask.sb_mask\n}\n\nfunction getHelperTextForMode(mode: Mode) {\n  if (mode === \"4c\" || mode === \"eopair\") {\n    return (\"Usage: Press space for next case. Enter to redo.\"\n      + \"\\n\\nVirtual Cube: I/K (E/D) for M'/M, J/F for U/U'\")\n  } else {\n    return null\n  }\n}\n\n\nfunction BlockTrainerView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n    let { state, dispatch } = props\n    let cube = state.cube.state\n    let classes = useStyles()\n\n    let facelet = FaceletCube.from_cubie(cube, getMask(state))\n\n    let desc : CaseDesc[] = state.case.desc.length ? state.case.desc :\n       [ { algs: [\"\"], setup:\"Press next for new case\", id: \"\", kind: \"\"} ]\n\n    let spaceButtonText = (state.name === \"hiding\") ? \"Reveal\" : \"Next\"\n\n\n    let describe_reveal = function(algs: CaseDesc[]) {\n      let get_algs = (d: CaseDesc) => d.algs;\n      if (algs.length === 1) {\n        return get_algs(algs[0]).join(\"\\n\")\n      } else {\n        return algs.map( alg =>\n          `[${alg.kind}]:\\n` + get_algs(alg).join(\"\\n\") + \"\\n\"\n        )\n      }\n    }\n\n    let describe_hide = (desc: CaseDesc[]) => {\n      let minMove = desc.map( d =>\n        d.algs.map(a => new MoveSeq(a).remove_setup().moves.length))\n        .flat()\n        .reduce( (a, b) => Math.min(a, b), 100 )\n      return `(Min = ${minMove} STM)`\n    }\n    let algText = (state.name === \"hiding\") ? describe_hide(desc)\n      : (state.name === \"revealed\") ? describe_reveal(desc) : \"\"\n\n    const handleSpace = () => {\n      dispatch({type: \"key\", content: \"#space\"})\n      if (spaceButtonText === \"Next\") {\n        setFav(false)\n      }\n    }\n\n\n    const [inputActive, setInputActive] = React.useState(false)\n    const handleInput = () => {\n      setInputActive(true)\n    }\n    const setup = desc.length ? desc[0].setup! : \"\"\n\n\n    const theme = useTheme()\n    const simBackground = state.config.theme.getActiveName() === \"bright\" ? \"#eeeeef\" : theme.palette.background.paper\n\n    // source\n    // Add event listeners\n    React.useEffect(() => {\n      function downHandler(event: KeyboardEvent) {\n        if (event.key === \" \" && spaceButtonText === \"Next\") {\n          setFav(false)\n        }\n        state.keyMapping.handle(event, dispatch);\n      }\n      window.addEventListener('keydown', downHandler);\n      return () => {\n        window.removeEventListener('keydown', downHandler);\n      };\n    });\n\n\n    const [favSelected, setFav] = React.useState(false)\n    const handleFav = () => {\n      if (state.case.desc.length === 0) return\n      const case_ : FavCase = {\n        mode: state.mode,\n        solver: state.case.desc.map(x => x.kind),\n        setup: setup || \"\"\n      }\n      if (!favSelected){\n        setFav(true)\n        dispatch({type: \"favList\", content: [ case_ ], action: \"add\"})\n      } else {\n        setFav(false)\n        dispatch({type: \"favList\", content: [ case_ ], action: \"remove\" })\n      }\n    }\n\n    const gt_sm = useMediaQuery(theme.breakpoints.up('sm'));\n    const canvas_wh = (gt_sm) ? [400, 350] : [320, 280]\n\n    // helper-text\n    let helperText = getHelperTextForMode(state.mode)\n\n                // <Checkbox  className={classes.sourceIconWrap}\n            //       icon={<FavoriteIcon />}\n            //       checked={favSelected}\n            //       onChange = {handleFav}\n            //       checkedIcon={<FavoriteIcon color=\"primary\" />}\n            //       name=\"fav\" />\n\n    return (\n    <Box className={classes.container}>\n      <Paper className={classes.paper} elevation={1}>\n        <Box style={{display: \"flex\"}}>\n          <Box style={{display: \"flex\", alignItems: \"center\"}}> <Box className={classes.title} style={{}}>\n            Scramble\n          </Box> </Box>\n          <Box style={{}} className={classes.fgap} />\n          <Box style={{display: \"flex\", alignItems: \"center\", flexGrow: 1}}>\n          <Typography className={classes.setup} >\n                {setup}\n          </Typography>\n             \n          </Box>\n          <Box style={{}} className={classes.fgap} />\n\n          <Box style={{display: \"flex\", flexWrap: \"wrap\", padding: 0}}>\n            <ScrambleInputView display = {setup}\n                dispatch={dispatch} scrambles={state.scrambleInput}/>\n\n            <Box>\n            <Button variant={favSelected ? \"contained\" : \"outlined\"}\n                color=\"primary\"\n                size=\"small\"\n                name=\"fav\"\n                onClick={handleFav}\n                startIcon={<FavoriteIcon />} \n                endIcon={favSelected ? null : null}\n                >\n                {favSelected ? \"✓\" : \"ADD\"}\n            </Button></Box>\n          </Box>\n          \n        </Box>\n      </Paper>\n\n      <Paper className={ classes.paper}>\n      <Grid container>\n\n        <Grid item md={6} sm={12} xs={12} className={classes.condGap}>\n          <Box style={{display: \"flex\" }}>\n            <Box display=\"flex\" >\n                <Box style={{display: \"flex\", alignSelf: \"flex-start\"}}> <Box className={classes.title} style={{}}>\n                  Solutions\n                </Box> </Box>\n            </Box>\n            <Box style={{}} className={classes.fgap} />\n            <div>\n              <Box paddingBottom={2} lineHeight={1}>\n                <Typography style={{whiteSpace: 'pre-line', fontSize: 16}} >\n                  {algText}\n                </Typography>\n              </Box>\n            </div>\n          </Box>\n        </Grid>\n\n\n        <Grid item md={6} sm={12} xs={12} style={{display: \"flex\", justifyContent: \"center\"}}>\n          <Box style={{backgroundColor: \"rgba(0, 0, 0, 0)\"}}>\n            { props.state.config.showCube.getActiveName() === \"Show\" ?\n            <CubeSim\n              width={canvas_wh[0]}\n              height={canvas_wh[1]}\n              cube={facelet}\n\n              colorScheme={state.colorScheme.getColorsForOri(state.cube.ori)}\n              hintDistance={ (state.mode === \"4c\" || state.mode === \"eopair\") ? 3 : 7 }\n              theme={state.config.theme.getActiveName()}\n              facesToReveal={ [Face.L, Face.B, Face.D]  }\n            /> : null }\n          </Box>\n        </Grid>\n      </Grid>\n      </Paper>\n\n      <Paper className={classes.paper} elevation={2}>\n\n      <Grid container spacing={0}>\n        <Grid item xs={5} sm={4} md={3}>\n          <Button onFocus={(evt) => evt.target.blur() } className={classes.button} size=\"medium\" variant=\"contained\" color=\"primary\" onClick={handleSpace}>\n              {spaceButtonText}\n          </Button>\n        </Grid>\n\n      </Grid>\n\n      </Paper>\n\n      <Box height={20}/>\n      <Divider/>\n      <Box height={20}/>\n\n      <ConfigPanelGroup {...{state, dispatch} } />\n\n      {helperText ?\n      <Fragment>\n        <Box height={20}/>\n          <Divider/>\n        <Box height={15}/>\n        <Box>\n        <FormControl component=\"fieldset\" className={classes.prompt}>\n          <FormLabel component=\"legend\">\n            <pre style={{ fontFamily: 'inherit' }}>\n              {helperText}\n            </pre>\n          </FormLabel>\n          </FormControl>\n        </Box>\n      </Fragment> : null }\n    </Box>\n    );\n}\n\n\n\nfunction ConfigPanelGroup(props: {state: AppState, dispatch: React.Dispatch<Action> }) {\n  let { state, dispatch } = props\n  if (state.mode === \"ss\") {\n    let DRManip = [\n      // names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n      // \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n      { name: \"Toggle Select All\", enableIdx: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17] },\n      { name: \"Toggle All Oriented\", enableIdx: [0, 2, 4, 6, 8, 10, 12, 14, 16] },\n    ]\n    return (\n      <Fragment>\n\n      <SingleSelect {...{state, dispatch, select: \"ssSelector\"}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: \"ssPairOnlySelector\"}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: \"solutionNumSelector\"}}> </SingleSelect>\n      \n      <SingleSelect {...{state, dispatch, select: \"showCube\"}}> </SingleSelect>\n      <MultiSelect {...{state, dispatch, select: \"ssPosSelector\", options: {manipulators: DRManip} }}> </MultiSelect>\n      <ColorPanel {...{state, dispatch}} />\n\n      </Fragment>\n    )\n  } else if (state.mode === \"fbdr\") {\n    let select1 = \"fbdrSelector\"\n    let select2 = \"fbOnlySelector\"\n    let select3 = \"fbPairSolvedSelector\"\n    let select4 = \"fbdrScrambleSelector\"\n    let select5 = \"solutionNumSelector\"\n\n    let LPEdgeManip = [\n      { name: \"Toggle Select All\", enableIdx: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17] },\n    ]\n    let pos1 = \"fbdrPosSelector1\"\n    let pos3 = \"fbdrPosSelector3\"\n\n    return (\n      <Fragment>\n      <SingleSelect {...{state, dispatch, select: select2}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select1}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select3}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select4}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select5}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: \"showCube\"}}> </SingleSelect>\n\n      <MultiSelect {...{state, dispatch, select: pos1, options: {manipulators: LPEdgeManip} }}> </MultiSelect>\n      <MultiSelect {...{state, dispatch, select: pos3, options: {manipulators: LPEdgeManip} }}> </MultiSelect>\n      <ColorPanel {...{state, dispatch}} />\n\n      </Fragment>\n    )\n  } else if (state.mode === \"fb\") {\n    let select1 = \"fbPieceSolvedSelector\"\n    let select2 = \"solutionNumSelector\"\n\n    return (\n      <Fragment>\n        <SingleSelect {...{ state, dispatch, select: select1 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n        <SingleSelect {...{state, dispatch, select: \"showCube\"}}> </SingleSelect>\n\n        <ColorPanel {...{state, dispatch}} />\n\n\n      </Fragment>\n    )\n   } else if (state.mode === \"fs\") {\n    let select1 = \"fsSelector\"\n    let select2 = \"solutionNumSelector\"\n\n    return (\n      <Fragment>\n        <SingleSelect {...{ state, dispatch, select: select1 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n        <SingleSelect {...{state, dispatch, select: \"showCube\" }}> </SingleSelect>\n\n        <ColorPanel {...{state, dispatch}} />\n\n\n      </Fragment>\n    )\n   } else if (state.mode === \"fbss\") {\n    let select1 = \"fbssLpSelector\"\n    let select2 = \"fbssSsSelector\"\n    let select3 = \"solutionNumSelector\"\n\n    return (\n      <Fragment>\n        <SingleSelect {...{ state, dispatch, select: select1 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select3 }}> </SingleSelect>\n        <ColorPanel {...{state, dispatch}} />\n\n\n      </Fragment>\n    )\n   }\n   else if (state.mode === \"4c\"){\n    let select1 = \"lseStageSelector\"\n    let select2 = \"lseMCSelector\"\n    let select3 = \"lseBarSelector\"\n    let select4 = \"solutionNumSelector\"\n\n    return (\n      <Fragment>\n        <SingleSelect {...{ state, dispatch, select: select1 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select3 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select4 }}> </SingleSelect>\n        <SingleSelect {...{state, dispatch, select: \"showCube\"}}> </SingleSelect>\n\n        <ColorPanel {...{state, dispatch}} />\n      </Fragment>\n    )\n   } else if (state.mode === \"eopair\"){\n    let select1 = \"lseEOSelector\"\n    let select2 = \"lseEOLRMCSelector\"\n    let select3 = \"lseBarbieSelector\"\n    let select4 = \"lseEOLRScrambleSelector\"\n    let select5 = \"solutionNumSelector\"\n\n    return (\n      <Fragment>\n        <MultiSelect {...{ state, dispatch, select: select1, options: {noDialog: true}} }> </MultiSelect>\n        <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select3 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select4 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select5 }}> </SingleSelect>\n        <SingleSelect {...{state, dispatch, select: \"showCube\"}}> </SingleSelect>\n\n        <ColorPanel {...{state, dispatch}} />\n      </Fragment>\n    )\n   }\n   else return <Fragment/>\n}\n\n\n\nexport default BlockTrainerView\n\n\n","import React, { Dispatch } from 'react'\n\nimport { makeStyles } from '@material-ui/core';\nimport { GridList, GridListTile} from '@material-ui/core';\n\nimport { CaseDesc } from \"../lib/Algs\";\nimport { AppState, Action } from '../Types';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n      },\n    container: {\n        paddingTop: theme.spacing(0),\n        paddingBottom: theme.spacing(2),\n        backgroundColor: theme.palette.background.default,\n      },\n    paper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n      gridList: {\n        width: 600,\n        height: 450,\n      },\n}))\n\ntype VisualCubeConfig = {\n    alg: string;\n    stage: string;\n    sch: string; //yrbwog\n}\nfunction VisualCube(props: VisualCubeConfig) {\n  let { alg, stage, sch } = props\n  const template =\n  `http://localhost:8000/visualcube.php?fmt=svg&r=y30x-24&size=150&co=40&fo=100&cc=ccc`\n    + `&stage=${stage}&sch=${sch}&case=${alg}`\n  return <img src={template} alt=\"\"/>\n}\n\nfunction PanoramaTable(props: {algs: CaseDesc[]}){\n    let classes = useStyles()\n    let { algs } = props\n    return <GridList cellHeight={160} className={classes.gridList} cols={3}>\n            {algs.map((alg) => (\n                <GridListTile key={alg.id} cols={1}>\n                    <VisualCube alg={alg.algs[0]} stage=\"f2b\" sch=\"yrbwog\"/>\n                </GridListTile>\n            ))}\n        </GridList>\n}\n\nexport default function PanoramaView(props: { state: AppState, dispatch: Dispatch<Action> }) {\n    let classes = useStyles()\n    let algs : CaseDesc[] = [\n        \"RUR\", \"RU'R'\"\n    ].map( str => ({\n        id: str,\n        algs: [str],\n        kind: \"sb\"\n    }))\n\n    return <div className={classes.root}>\n        <div>\n        <PanoramaTable algs={algs}/>\n        </div>\n        <div>\n        <PanoramaTable algs={algs}/>\n        </div>\n    </div>\n}","import { CubieCube, Move } from './CubeLib';\nimport { cartesianProduct } from './Math';\n\nexport type PrunerConfig = {\n    size: number,\n    encode: (cube : CubieCube) => number,\n    solved_states: CubieCube[],\n    max_depth: number,\n    moveset: Move[]\n}\n\nexport type PrunerT = {\n    init: () => void,\n    query: (c : CubieCube) => number,\n    equal: (c1 : CubieCube, c2: CubieCube) => boolean,\n    encode: (c : CubieCube) => number\n}\n\nenum PrunerPiece {\n    S, O, I, X\n}; // Solved, Oriented, Ignore, Exclude \nconst { S, I } = PrunerPiece\n\nexport type PrunerDef = {\n    corner: PrunerPiece[],\n    edge:   PrunerPiece[],\n    center: PrunerPiece[],\n    solved_states: string[],\n    moveset: string[],\n    max_depth: number\n}\n\nexport function Pruner(config: PrunerConfig) : PrunerT {\n    let dist: Uint8Array;\n    let { size, encode, solved_states, max_depth, moveset} = config\n    let initialized = false\n    function init() {\n        if (initialized) return\n        initialized = true\n        dist = new Uint8Array(size).fill(255)\n        for (let state of solved_states) {\n            dist[encode(state)] = 0\n        }\n        let frontier = [...solved_states]\n        let total_expanded = frontier.length\n        for (let i = 0; i < max_depth; i++) {\n            console.log(\"pruner: expanding depth \", i)\n            let new_frontier = []\n            for (let state of frontier) {\n                for (let move of moveset) {\n                    let newState = state.apply(move) // clone\n                    let idx = encode(newState)\n                    if (dist[idx] === 255) {\n                        dist[idx] = i + 1;\n                        new_frontier.push(newState)\n                    }\n                }\n            }\n            frontier = new_frontier\n            total_expanded += frontier.length\n        }\n        console.log(\"Initialization complete. size = \", total_expanded)\n    }\n    function query(cube: CubieCube) {\n        let d = dist[encode(cube)]\n        if (d === 255) return max_depth + 1;\n        return d\n    }\n    function equal(cube1: CubieCube, cube2: CubieCube) {\n        return encode(cube1) === encode(cube2)\n    }\n    return  {\n        init,\n        query,\n        equal,\n        encode\n    }\n}\n\n\n\nlet prunerFactory = function(def: PrunerDef): PrunerConfig {\n    // edge\n    if (def.corner.length !== 8 || def.edge.length !== 12 || def.center.length !== 6) {\n        throw new Error(\"Invalid pruner def\");\n    }\n    const {S, O, I, X} = PrunerPiece\n    const def_to_idx = (d : PrunerPiece[], count_all?: boolean) => {\n        let curr_idx = 0, idx_arr = []\n        for (let i = 0; i < d.length; i++) {\n            if (d[i] === S || (count_all && (d[i] === O || d[i] === I))) {\n                idx_arr.push(curr_idx++);\n            } else idx_arr.push(-1);\n        }\n        return idx_arr;\n    }\n    let eosize = def.edge.filter(x => x === S || x === O).length\n    let epsize = def.edge.filter(x => x === S).length\n    let eisize = def.edge.filter(x => x !== X).length\n    let esize = Math.pow(2, eosize) * Math.pow(eisize, epsize)\n    let ep_idx = def_to_idx(def.edge, false);\n    let e_idx = def_to_idx(def.edge, true);\n\n    let cosize = def.corner.filter(x => x === S || x === O).length\n    let cpsize = def.corner.filter(x => x === S).length\n    let cisize = def.corner.filter(x => x !== X).length\n    let csize = Math.pow(2, cosize) * Math.pow(cisize, cpsize)\n    let cp_idx = def_to_idx(def.corner, false);\n    let c_idx = def_to_idx(def.corner, true);\n\n    let tosize = def.center.filter(x => x === O).length\n    let tpsize = def.center.filter(x => x === S).length\n    let tisize = def.center.filter(x => x !== X).length\n    let tsize = Math.pow(2, tosize) * Math.pow(tisize, tpsize)\n    let tp_idx = def_to_idx(def.center, false);\n\n    let size = esize * csize * tsize;\n\n    function encode(cube: CubieCube) {\n        let eo = 0, ep = 0, co = 0, cp = 0, to = 0, tp = 0, e, c, t\n        for (let i = 0; i < 12; i++) {\n            switch (def.edge[cube.ep[i]]) {\n                case S:\n                    eo = eo * 2 + cube.eo[i];\n                    ep = ep + Math.pow(eisize, ep_idx[cube.ep[i]]) * e_idx[i];\n                    break;\n                case O:\n                    eo = eo * 2 + cube.eo[i];\n                    break;\n            }\n        }\n        e = ep * Math.pow(2, eosize) + eo\n        for (let i = 0; i < 8; i++) {\n            switch (def.corner[cube.cp[i]]) {\n                case S:\n                    co = co * 3 + cube.co[i];\n                    cp = cp + Math.pow(cisize, cp_idx[cube.cp[i]]) * c_idx[i];\n                    break;\n                case O:\n                    co = co * 3 + cube.co[i];\n                    break;\n            }\n        }\n        c = cp * Math.pow(3, cosize) + co\n        for (let i = 0; i < 6; i++) {\n            switch (def.center[cube.tp[i]]) {\n                case S:\n                    tp = Math.pow(tisize, tp_idx[cube.tp[i]]) + i;\n                    break;\n                case O:\n                    to = to * 3 + (cube.tp[i] / 2) | 0;\n                    break;\n            }\n        }\n        t = tp * Math.pow(3, tosize) + to\n        return e * csize * tsize + c * tsize + t\n    }\n\n    const solved_states = def.solved_states.map( m => new CubieCube().apply(m))\n    const moveset : Move[] = def.moveset.map(s => Move.all[s])\n    const max_depth = def.max_depth\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}\n\n\nlet fbdrPrunerConfig : PrunerConfig = function() {\n    const esize = Math.pow(24, 4)\n    const csize = Math.pow(24, 2)\n    const size = esize * csize\n\n    function encode(cube:CubieCube) {\n      let c1 = 0, c2 = 0\n      for (let i = 0; i < 8; i++) {\n        if (cube.cp[i] === 4) {\n          c1 = i * 3 + cube.co[i]\n        } else if (cube.cp[i] === 5) {\n          c2 = i * 3 + cube.co[i];\n        }\n      }\n      const enc_c = c1 * 24 + c2\n      let e1 = 0, e2 = 0, e3 = 0, e4 = 0\n      for (let i = 0; i < 12; i++) {\n          switch (cube.ep[i]) {\n              case 5 : e1 = i * 2 + cube.eo[i]; break;\n              case 8 : e2 = i * 2 + cube.eo[i]; break;\n              case 9 : e3 = i * 2 + cube.eo[i]; break;\n              case 7 : e4 = i * 2 + cube.eo[i]; break;\n          }\n      }\n      const enc_e = e1 * (24 * 24 * 24) + e2 * (24 * 24) + e3 * 24 + e4\n      return enc_c + 24 * 24 * enc_e\n    }\n\n    const moves = [[]]//, Move.parse(\"L R'\"), Move.parse(\"L' R\"), Move.parse(\"L2 R2\")] \n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move) )\n\n    const max_depth = 4\n    const moveset : Move[] = [\"U\", \"U2\", \"U'\", \"F\", \"F2\", \"F'\", \"R\", \"R2\", \"R'\",\n    \"r\", \"r2\", \"r'\", \"D\", \"D2\", \"D'\", \"M\", \"M'\", \"M2\", \"B\", \"B'\", \"B2\"].map(s => Move.all[s])\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}()\n\n\n\n\nlet htm_rwm = [\"U\", \"U2\", \"U'\", \"F\", \"F2\", \"F'\", \"R\", \"R2\", \"R'\",\n    \"r\", \"r2\", \"r'\", \"D\", \"D2\", \"D'\", \"M\", \"M'\", \"M2\", \"B\", \"B'\", \"B2\"]\nlet rrwmu = [\"U\", \"U'\", \"U2\", \"R\", \"R'\", \"R2\",\n    \"r\", \"r'\", \"r2\", \"M'\", \"M\", \"M2\"]\n\nlet fbPrunerConfig = prunerFactory({\n    corner: [I,I,I,I,S,S,I,I],\n    edge:   [I,I,I,I,I,S,I,I,S,S,I,I],\n    center: [I,I,I,I,S,I],\n    solved_states: [\"id\"],\n    moveset: htm_rwm,\n    max_depth: 5\n});\n\nlet ssPrunerConfig = (is_front: boolean) => {\n    const size = Math.pow(24, 3)\n    const c1 = is_front ? 7 : 6;\n    const e1 = is_front ? 11 : 10\n    const e2 = 7\n    function encode(cube:CubieCube) {\n      let v = [0 ,0, 0]\n      for (let i = 0; i < 8; i++) {\n        if ( cube.cp[i] === c1) v[0] = i * 3 + cube.co[i]\n      }\n      for (let i = 0; i < 12; i++) {\n          if (cube.ep[i] === e1) v[1] = i * 2 + cube.eo[i];\n          else if (cube.ep[i] === e2) v[2] = i * 2 + cube.eo[i]\n      }\n      return v[0] + v[1] * 24 + v[2] * 24 * 24\n    }\n\n    const moves = [[]] \n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move))\n\n    const max_depth = 8\n    const moveset : Move[] = [\"U\", \"U'\", \"U2\", \"R\", \"R'\", \"R2\",\n        \"r\", \"r'\", \"r2\", \"M'\", \"M\", \"M2\"].map(s => Move.all[s])\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}\nlet sbPrunerConfig = prunerFactory({\n    corner: [I,I,I,I,I,I,S,S],\n    edge:   [I,I,I,I,I,I,I,S,I,I,S,S],\n    center: [I,I,I,I,I,I],\n    solved_states: [\"id\"],\n    moveset: rrwmu,\n    max_depth: 6\n});\n\nlet fsPrunerConfig = (is_front: boolean) => prunerFactory({\n        corner: is_front ? [I,I,I,I,S,I,I,I] : [I,I,I,I,I,S,I,I] ,\n        edge:   is_front ? [I,I,I,I,I,S,I,I,S,I,I,I] : [I,I,I,I,I,S,I,I,I,S,I,I] ,\n        center: [I,I,I,I,S,I],\n        solved_states: [\"id\"],\n        moveset: htm_rwm,\n        max_depth: 4\n});\n\nlet fbssPrunerConfig =(is_front: boolean) => [\n    prunerFactory({\n        corner: is_front ? [I,I,I,I,S,S,I,S]: [I,I,I,I,S,S,S,I],\n        edge:   [I,I,I,I,I,I,I,I,I,I,I,I],\n        center: [I,I,I,I,I,I],\n        solved_states: [\"id\"],\n        moveset: htm_rwm,\n        max_depth: 5\n    }),\n    prunerFactory({\n        corner: [I,I,I,I,I,I,I,I],\n        edge:   [I,I,I,I,I,S,I,S,S,S,is_front ? I : S,is_front ? S : I],\n        center: [I,I,I,I,I,I],\n        solved_states: [\"id\"],\n        moveset: htm_rwm,\n        max_depth: 5\n    }),\n]\n\nlet lsePrunerConfig : PrunerConfig = function() {\n    const size = Math.pow(12, 6) * 4 * 4 // TODO: optimize this plz\n    function encode(cube:CubieCube) {\n      let edge_encode = [0, 1, 2, 3, 4, -1, 5, -1, -1, -1, -1, -1];\n      let enc = [0, 0, 0, 0, 0, 0]\n      for (let i = 0; i < 12; i++) {\n        let idx = edge_encode[cube.ep[i]];\n        if (idx > -1) {\n            enc[idx] = edge_encode[i] * 2 + cube.eo[i];\n        }\n      }\n      let edge_enc = 0;\n      for (let i = 0; i < 6; i++) {\n        edge_enc = edge_enc * 12 + enc[i];\n      }\n      return edge_enc * 4 * 4 + cube.tp[0] * 4 + cube.cp[0]// center[0] and cp[0] must be (0-3)\n    }\n\n    const moves = [Move.all[\"id\"]]\n    const solved_states = moves.map( m => new CubieCube().apply(m))\n\n    const max_depth = 7\n    const moveset : Move[] = [\"U\", \"U'\", \"U2\", \"M'\", \"M\", \"M2\"].map(s => Move.all[s])\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}()\n\nfunction eolrPrunerConfig(center_flag: number, barbie_mode?: string): PrunerConfig {\n    const size = 6 * 6 * Math.pow(2, 6) * 4 * 2 // TODO: optimize this plz\n\n    const edge_encode = [0, 1, 0, 2, 0, -1, 0, -1, -1, -1, -1, -1];\n    const edge_idx = [0, 1, 2, 3, 4, -1, 5, -1, -1, -1, -1, -1];\n    function encode(cube:CubieCube) {\n      let eo = 0, ep = 0\n      for (let i = 0; i < 12; i++) {\n        let idx = edge_encode[cube.ep[i]];\n        if (idx >= 0) {\n            eo = eo * 2 + cube.eo[i]\n        }\n        if (idx > 0) {\n            ep += Math.pow(6, idx - 1) * edge_idx[i]\n        }\n      }\n      // make no distinction between centers M2 apart\n      return (eo * 36 + ep) * 4 * 2 + ~~(cube.tp[0] / 2) * 4 + cube.cp[0]// center[0] and cp[0] must be (0-3)\n    }\n\n    const moves_ac = cartesianProduct( [\"U'\", \"U\"], [\"M2\"], [\"\", \"U\", \"U'\", \"U2\"] ).map(x => x.join(\" \"))\n    const moves_mc = cartesianProduct( [\"M'\"], [\"U\", \"U'\"], [\"M2\"], [\"\", \"U\", \"U'\", \"U2\"]).map(x => x.join(\" \"))\n    let moves: string[] = []\n    if (center_flag & 0x01) moves = moves.concat(moves_ac)\n    if (center_flag & 0x10) moves = moves.concat(moves_mc)\n\n    const barb_moves_ac = [\"U\", \"U'\"]\n    const barb_moves_mc = [\"M U\", \"M U'\"]\n    let barb_moves: string[] = []\n    if (center_flag & 0x01) barb_moves = barb_moves.concat(barb_moves_ac)\n    if (center_flag & 0x10) barb_moves = barb_moves.concat(barb_moves_mc)\n\n    const pre_moves = barbie_mode === \"barbie\" ? barb_moves :\n        (barbie_mode === \"ab4c\" ? [\"id\"] : moves)\n\n    const solved_states = pre_moves.map( m => new CubieCube().apply(m))\n\n    const max_depth = 20\n    const moveset : Move[] = [\"U\", \"U'\", \"U2\", \"M'\", \"M\", \"M2\"].map(s => Move.all[s])\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}\n\nexport { fbdrPrunerConfig, fsPrunerConfig, sbPrunerConfig, ssPrunerConfig, fbPrunerConfig, lsePrunerConfig, eolrPrunerConfig,\n    prunerFactory, fbssPrunerConfig }","import {initialize, solve as min2phaseSolve, Min2PhaseCube} from \"./min2phase.js\"\nimport { CubieCube } from \"../CubeLib\";\n\nexport {initialize}\n\nfunction toMin2Phase(state: CubieCube): Min2PhaseCube {\n  // Note: this is its own inverse.\n  // const conjugate = {\n  //   EDGE: { permutation: [ 1, 0, 3, 2, 5, 4, 7, 6, 8, 9, 11, 10 ],\n  //           orientation: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ] },\n  //   CORNER: { permutation: [ 0, 3, 2, 1, 4, 5, 6, 7 ],\n  //             orientation: [ 0, 0, 0, 0, 0, 0, 0, 0 ] },\n  //   CENTER: { permutation: [ 0, 1, 2, 3, 4, 5 ],\n  //             orientation: [ 0, 0, 0, 0, 0, 0 ] }\n  // };\n  // const pseudo = Combine(def, Combine(def, conjugate, Invert(def, state)), conjugate);\n\n  return {\n    cp: state.cp,\n    co: state.co,\n    ep: state.ep,\n    eo: state.eo\n  }\n}\n\nexport function solve(state: CubieCube): string {\n  return min2phaseSolve(toMin2Phase(state));\n}\n","import { CubieCube, Move, MoveSeq } from './CubeLib';\nimport { arrayEqual } from './Math';\n\nimport { Pruner, PrunerT, fbdrPrunerConfig, fbssPrunerConfig, fsPrunerConfig, sbPrunerConfig, ssPrunerConfig, fbPrunerConfig, lsePrunerConfig, PrunerConfig, eolrPrunerConfig, PrunerDef } from './Pruner';\n\nimport { prunerFactory } from './Pruner';\nimport {initialize as min2phase_init, solve as min2phase_solve} from \"../lib/min2phase/min2phase-wrapper\"\nimport { maxHeaderSize } from 'http';\n\n\ntype SolverConfig = {\n    is_solved: (cube : CubieCube) => boolean,\n    moveset: Move[],\n    pruners: PrunerT[],\n    pruneSeenEncodings?: boolean\n}\n\ntype Accumulator = {\n    solutions: MoveSeq[],\n    capacity: number\n}\n\nexport type SolverT = {\n    solve: (cube : CubieCube, l : number, r : number, c : number) => MoveSeq[],\n    is_solved: (cube : CubieCube) => boolean,\n    getPruner: () => PrunerT[]\n}\n\n\nfunction Solver(config: SolverConfig) : SolverT{\n    const MAX_STATE_COUNT = 1000000\n    let { moveset, is_solved, pruners } = config\n    let state_count = 0, prune_count = 0;\n    let accum : Accumulator\n    let max_depth : number\n    let min_depth : number\n\n    enum SState {\n        CONTINUE,\n        STOP\n    };\n\n    function solve_depth(cube: CubieCube, min_depth_: number, max_depth_: number, accum_: Accumulator) {\n        accum = accum_\n        max_depth = max_depth_\n        min_depth = min_depth_\n        state_count = 0\n        prune_count = 0\n        search(cube, 0, [])\n        return accum\n    }\n\n    let nextMoves = Object.create({})\n    function generateNextMoveTable() {\n        function getAvailableMove(name : string) {\n            switch (name[0]) {\n                case \"U\": return moveset.filter(k => k.name[0] !== \"U\");\n                case \"D\": return moveset.filter(k => k.name[0] !== \"U\" && k.name[0] !== \"D\");\n                case \"R\": {\n                    let base = moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"r\");\n                    if (name === \"R\") return base.filter(k => k.name !== \"M'\")\n                    if (name === \"R'\") return base.filter(k => k.name !== \"M\")\n                    if (name === \"R2\") return base.filter(k => k.name !== \"M2\")\n                    return base\n                }\n                case \"L\": return moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"M\" && k.name[0] !== \"L\" && k.name[0] !== \"r\");\n                case \"r\": return moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"M\" && k.name[0] !== \"L\" && k.name[0] !== \"r\");\n                case \"M\": return moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"M\" && k.name[0] !== \"L\" && k.name[0] !== \"r\");\n                case \"F\": return moveset.filter(k => k.name[0] !== \"F\");\n                case \"B\": return moveset.filter(k => k.name[0] !== \"F\" && k.name[0] !== \"B\");\n\n                case \"E\": return moveset.filter(k => k.name[0] !== \"U\" && k.name[0] !== \"D\" && k.name[0] !== \"E\");\n                case \"S\": return moveset.filter(k => k.name[0] !== \"F\" && k.name[0] !== \"B\" && k.name[0] !== \"S\");\n            }\n        }\n        for (let move of moveset) {\n            nextMoves[move.name] = getAvailableMove(move.name)\n        }\n    }\n    generateNextMoveTable()\n\n    function expand(cube: CubieCube, depth: number, solution: Move[]) : SState{\n        const availableMoves = solution.length > 0 ? nextMoves[solution[solution.length - 1].name] : moveset\n        let seen_encodings : Set<number> | null = null\n        let prune = config.pruneSeenEncodings\n        if (prune) {\n            seen_encodings = new Set()\n            seen_encodings.add(pruners[0].encode(cube))\n        }\n        for (let move of availableMoves) {\n            let new_cube = cube.apply(move)\n            let enc = pruners[0].encode(new_cube)\n            if (seen_encodings == null || !seen_encodings.has(enc)) {\n                seen_encodings?.add(enc)\n                solution.push(move)\n                let st : SState = search(new_cube, depth + 1, solution)\n                solution.pop()\n                if (st === SState.STOP) {\n                    return SState.STOP\n                }\n            }\n        }\n        return SState.CONTINUE\n    }\n\n    function try_push(solution: Move[], depth: number) {\n        if (depth < min_depth) return SState.CONTINUE\n        if (accum.solutions.length < accum.capacity) {\n            let flag = true\n            for (let sol of accum.solutions) {\n                if (arrayEqual(sol.moves, solution)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                accum.solutions.push(new MoveSeq([...solution]))\n            }\n        }\n\n        if (accum.solutions.length === accum.capacity) {\n            return SState.STOP\n        } else {\n            return SState.CONTINUE\n        }\n    }\n\n    function search(cube: CubieCube, depth: number, solution: Move[]) : SState {\n        state_count++;\n        if (state_count > MAX_STATE_COUNT) {\n            return SState.STOP\n        }\n        if (is_solved(cube)) {\n            return try_push(solution, depth)\n        } else {\n            if (depth >= max_depth) return SState.CONTINUE;\n            let d = Math.max(...pruners.map(p => p.query(cube)))\n            if (d + depth > max_depth) {\n                prune_count++;\n                return SState.CONTINUE\n            } else {\n                return expand(cube, depth, solution)\n            }\n        }\n    }\n\n    function solve(cube: CubieCube, depth_l: number, depth_r: number, capacity: number) {\n        let accum : Accumulator = {\n            solutions: [],\n            capacity\n        }\n        for (let i = depth_l; i <= depth_r; i++) {\n            accum = solve_depth(cube, depth_l, i, accum)\n            if (accum.solutions.length === accum.capacity || state_count >= MAX_STATE_COUNT) {\n                break;\n            }\n        }\n        //console.log(`Number of states = ${state_count}, pruned = ${prune_count}`);\n        return accum.solutions\n    }\n\n    function getPruner() {\n        return pruners\n    }\n    return { solve, is_solved, getPruner }\n};\n\nfunction solverFactory(def: PrunerDef | PrunerConfig) {\n    let prunerConfig: PrunerConfig\n    if (\"corner\" in def) {\n        prunerConfig = prunerFactory(def);\n    } else {\n        prunerConfig = def\n    }\n    let pruner = Pruner(prunerConfig)\n    pruner.init()\n    //let solvedEncodings = prunerConfig.solved_states.map(s => prunerConfig.encode(s))\n    let solved_states = new Set(prunerConfig.solved_states.map(x => pruner.encode(x)))\n    let is_solved = (prunerConfig.solved_states.length === 0) ?\n        (cube: CubieCube) => pruner.query(cube) === 0 :\n        (cube: CubieCube) => solved_states.has(pruner.encode(cube));\n\n    let config = {\n        is_solved,\n        moveset: prunerConfig.moveset,\n        pruners: [pruner],\n        pruneSeenEncodings: true\n    }\n\n    let solver = Solver(config)\n    return solver\n}\n\nfunction solverFactory2(prunerConfigs: PrunerConfig[]) {\n    let pruners = prunerConfigs.map(pc => Pruner(pc))\n    pruners.forEach(p => p.init())\n    //let solvedEncodings = prunerConfig.solved_states.map(s => prunerConfig.encode(s))\n    let is_solved = (cube: CubieCube) => pruners.every(p => p.query(cube) === 0)\n\n    let config : SolverConfig = {\n        is_solved,\n        moveset: prunerConfigs[0].moveset,\n        pruners,\n        pruneSeenEncodings: false\n    }\n    let solver = Solver(config)\n    return solver\n}\n\nlet FbSolver = () => solverFactory(fbPrunerConfig)\n\nlet FbdrSolver = () => solverFactory(fbdrPrunerConfig)\n\nlet SsSolver = (is_front: boolean) => solverFactory(ssPrunerConfig(is_front))\n\nlet FbssSolver =  (is_front: boolean) => solverFactory2(fbssPrunerConfig(is_front))\n\nlet SbSolver = () => solverFactory(sbPrunerConfig)\n\nlet FsSolver = (is_front: boolean) => solverFactory(fsPrunerConfig(is_front))\n\nlet LSESolver = () => solverFactory(lsePrunerConfig)\n\nlet EOLRSolver = (center_flag: number, barbie_mode?: string) =>\n    solverFactory(eolrPrunerConfig(center_flag, barbie_mode))\n\nlet Min2PhaseSolver : () => SolverT = function() {\n    // polyfill for min2phase\n\n    min2phase_init();\n    function solve(cube : CubieCube, l : number, r : number, c : number) {\n        console.assert(arrayEqual(cube.tp, new CubieCube().tp), \"Cube center is not solved: \" + cube.tp)\n        const transformed_cube = cube.to_cstimer_cube()\n        console.assert( transformed_cube.is_solveable(), \"Cube must be solveable\")\n        let solution = min2phase_solve(transformed_cube);\n        return [ new MoveSeq(solution).inv() ]\n    }\n    function is_solved(cube: CubieCube) {\n        return true\n    }\n    function getPruner() {\n        return []\n    }\n    return {\n        solve,\n        is_solved,\n        getPruner\n    }\n}\n\n\n\nexport { FbdrSolver, FbSolver, SbSolver, FbssSolver, FsSolver, SsSolver, Min2PhaseSolver, LSESolver, EOLRSolver }","import { FbdrSolver, SolverT, FsSolver, SsSolver, SbSolver, FbSolver, FbssSolver, Min2PhaseSolver, LSESolver, EOLRSolver} from './Solver';\n\nlet all_solvers = [\n\"fbdr\",\"fb\", \"fs-front\", \"fs-back\", \"ss-front\", \"ss-back\", \"min2phase\",\n\"lse\", \"eolrac\", \"eolrmc\", \"eolr\", \"eolrac-b\", \"eolrmc-b\", \"eolr-b\" ]\n\nlet CachedSolver = function() {\n    let cache : Map<string, SolverT> = new Map()\n    function get(s: string) {\n        if (!cache.has(s)) {\n            switch (s) {\n                case \"fbdr\": cache.set(s, FbdrSolver()); break\n                case \"fb\": cache.set(s, FbSolver()); break\n                case \"fs-front\": cache.set(s, FsSolver(true)); break\n                case \"fs-back\": cache.set(s, FsSolver(false)); break\n                case \"ss-front\": cache.set(s, SsSolver(true)); break\n                case \"ss-back\": cache.set(s, SsSolver(false)); break\n                case \"fbss-front\": cache.set(s, FbssSolver(true)); break\n                case \"fbss-back\": cache.set(s,FbssSolver(false)); break\n                case \"sb\": cache.set(s, SbSolver()); break\n\n                case \"min2phase\": cache.set(s, Min2PhaseSolver()); break\n                case \"lse\": cache.set(s, LSESolver()); break\n                case \"lse-ab4c\": cache.set(s, EOLRSolver(0x01, \"ab4c\")); break\n                case \"eolrac\": cache.set(s, EOLRSolver(0x01)); break\n                case \"eolrmc\": cache.set(s, EOLRSolver(0x10)); break\n                case \"eolr\": cache.set(s, EOLRSolver(0x11)); break\n                case \"eolrac-b\": cache.set(s, EOLRSolver(0x01, \"barbie\")); break\n                case \"eolrmc-b\": cache.set(s, EOLRSolver(0x10, \"barbie\")); break\n                case \"eolr-b\": cache.set(s, EOLRSolver(0x11, \"barbie\")); break\n            }\n        }\n        return cache.get(s) as SolverT\n    }\n    return {get}\n}()\n\nexport {CachedSolver, all_solvers}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  Button, IconButton, DialogContent, TextField, DialogContentText\n} from '@material-ui/core';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { Table, Paper, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\n\nimport PlaylistPlayIcon from '@material-ui/icons/PlaylistPlay';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport AddIcon from '@material-ui/icons/Add';\nimport { AppState, Action, FavCase } from '../Types';\nimport { all_solvers } from '../lib/CachedSolver';\n\n\nconst useStyles = makeStyles(theme => ({\n  table: {\n    width: '100%',\n    minWidth: 200,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport function warnDialog(props: { confirm: () => void} ) {\n\n}\n\nfunction parseAddString(state: AppState, s : string) : [ FavCase[], boolean] {\n  const res : FavCase[] = []\n\n  const allSolvers = new Set(all_solvers);\n  for (const line of s.split('\\n')) {\n    let cols = line.split(',')\n    if (cols.length !== 2) continue\n    let solver = cols[0].trim().split(\"|\")\n    let setup = cols[1].trim()\n\n    if (solver.every(x => allSolvers.has(x))) {\n      let case_ : FavCase = {\n        mode: state.mode,\n        solver,\n        setup\n      }\n      res.push(case_)\n    }\n  }\n  if (res.length > 0) return [res, true]\n  else return [ [], false]\n}\n\nexport default function FavListView(props: { state: AppState, dispatch: React.Dispatch<Action> }) {\n  const {state, dispatch} = props\n  const classes = useStyles();\n  const favList = state.favList.filter(c => c.mode === state.mode)\n\n  const play = (i: number) => {\n    dispatch({ type: \"favList\", content: [ favList[i] ], action: \"replay\" })\n  }\n  const remove = () => {\n    if (dialogID >= 0 && dialogID < favList.length)\n    dispatch({ type: \"favList\", content: [ favList[dialogID] ], action: \"remove\" })\n  }\n  const [ dialogID, setDialogID ] = React.useState(-1)\n\n  const handleClose = () => setDialogID(-1)\n  const handleRemove = () => { remove(); setDialogID(-1); }\n  const dialogDelete = (<Dialog open={dialogID >= 0} onClose={handleClose} >\n    <DialogTitle id=\"alert-dialog-title\">{\"Delete this alg from favorites?\"}</DialogTitle>\n    <DialogActions>\n      <Button onClick={handleClose} color=\"primary\">\n        No\n    </Button>\n      <Button onClick={handleRemove} color=\"primary\" autoFocus>\n        Yes\n    </Button>\n    </DialogActions>\n  </Dialog>)\n\n  const [ addDialogOpen, setAddDialogOpen ] = React.useState(false)\n  const [ addString, setAddString ] = React.useState(\"\")\n  const handleAdd = () => setAddDialogOpen(true)\n  const handleAddClose = () => setAddDialogOpen(false)\n  const handleAddSuccess = () => {\n    let [res, status] = parseAddString(state, addString)\n    if (status) {\n      dispatch({ type: \"favList\", content: res, action: \"add\" })\n    }\n    handleAddClose()\n  }\n  const handleTextChange = (event: { target: { value: React.SetStateAction<string>; }; }) => {\n    setAddString(event.target.value)\n  }\n  const dialogAdd = <Dialog open={addDialogOpen} onClose={handleAddClose} aria-labelledby=\"form-dialog-title\">\n    <DialogTitle id=\"form-dialog-title\">Add New Cases</DialogTitle>\n    <DialogContent>\n      <DialogContentText>\n        Input your cases here. (one per line) <br></br>\n        Format: [category], [setup algorithm].\n        category := fb | fbdr | ss-front | ss-back\n      </DialogContentText>\n      <TextField\n        autoFocus\n        multiline\n        margin=\"dense\"\n        id=\"name\"\n        fullWidth\n        onChange={handleTextChange}\n        onKeyDown={ (event) => { event.stopPropagation() } }\n      />\n    </DialogContent>\n    <DialogActions>\n      <Button onClick={handleAddClose} color=\"primary\">\n        Cancel\n    </Button>\n      <Button onClick={handleAddSuccess} color=\"primary\">\n        Add All\n    </Button>\n    </DialogActions>\n  </Dialog>\n\n\n  return (\n    <div>\n    {dialogDelete}\n    {dialogAdd}\n    <Paper>\n      <Table className={classes.table} size=\"small\" >\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\"> Scramble </TableCell>\n            <TableCell align=\"center\" rowSpan={1}>\n              <IconButton   onClick={handleAdd} component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                <AddIcon />\n              </IconButton>\n              \n            {/* <IconButton component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                <FileCopyIcon />\n              </IconButton> */}\n             </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {favList.map((value, i) => {\n            //const labelId = `favlist-label-${i}`;\n            return (\n              <TableRow key={i}>\n                {/* <TableCell align=\"center\" >\n                  {/* padding=checkbox <Checkbox></Checkbox> */}\n\n                <TableCell align=\"center\">\n                { value.solver.join(\"|\") + \",\" + value.setup }\n                </TableCell>\n                <TableCell align=\"center\">\n                  <IconButton onFocus={(e: { target: { blur: () => void; }; }) => e.target.blur() } onClick={() => play(i)}\n                  component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                    <PlaylistPlayIcon />\n                  </IconButton>\n\n                  <IconButton onFocus={(e: { target: { blur: () => void; }; }) => e.target.blur() } onClick={() => setDialogID(i)}\n                  component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                    <DeleteOutlineIcon />\n                  </IconButton>\n\n                </TableCell>\n              </TableRow>\n            )\n          })}</TableBody>\n      </Table>\n    </Paper>\n    </div>\n  )\n}","import React from \"react\";\n\nimport { makeStyles } from '@material-ui/core';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { ENABLE_DEV } from '../settings';\nimport InfoIcon from '@material-ui/icons/Info';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport Brightness6Icon from '@material-ui/icons/Brightness6';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\n\nconst useStyles = makeStyles(theme => {\n    let is_bright = theme.palette.primary.main === '#556cd6';\n    return ({\n    page: {\n      backgroundColor: theme.palette.background.default\n    },\n    container: {\n      display: \"flex\"\n    },\n    icon: {\n      minWidth: 0\n    },\n    root: {\n      display: \"flex\"\n    },\n    bar: {\n      backgroundColor: is_bright ? theme.palette.primary.main : '#6e728a', // ,\n      color: theme.palette.background.paper,\n      //borderRadius: \"5px\"\n      display: \"flex\",\n      flexWrap: \"nowrap\",\n      justifyContent: \"space-between\",\n    },\n    select: {\n      backgroundColor: is_bright ? \"#657ce9\" : \"#9297b3\", //9FA4C2\",\n      color: theme.palette.background.paper,\n      paddingLeft: 12,\n      marginRight: 15,\n      marginLeft: 15,\n      fontWeight: 500,\n      fontSize: \"0.9rem\",\n      paddingTop: 8,\n      paddingBottom: 8,\n      borderRadius: 4,\n      //borderBottom: \"1px solid \" + theme.palette.background.default,\n    }\n})})\nconst description : [string, number][] = [\n[\"FB Analysis\", 0],\n[\"FB Last Pair (+DR)\", 1],\n[\"First Square\", 2],\n[\"First Block\", 3],\n[\"Second Square\", 4],\n[\"CMLL\", 5],\n[\"LSE 4c\", 6],\n[\"EOLR / EOLRb\", 7],\n[\"Tracking Trainer (Beta)\", 8]\n]\n\nfunction TopBarView(props: { value: number, onChange: (x: number) => void,\n    toggleFav: () => void, toggleBright: () => void, handleInfoOpen: () => void } )\n{\n    let classes = useStyles()\n    let { value, onChange, toggleFav, toggleBright, handleInfoOpen } = props\n    let value_str_ = description.find(x => x[1] === value)\n    let value_str = value_str_ ? value_str_[0]: \"\"\n    let handleChange = (event: React.ChangeEvent<{ value: unknown }>) =>  {\n        let idx = description.findIndex(x => x[0] === (event.target.value as string))\n        let tab_idx = description[idx][1]\n        onChange(tab_idx)\n        //\n    }\n    return <div>\n            <Box boxShadow={4} >\n        <Toolbar className={classes.bar} >\n        <Typography style={{fontSize: \"0.9rem\", fontFamily: \"Public Sans\", flexShrink: 10}} >\n            Roux Trainer\n        </Typography>\n        <FormControl style={{flexShrink: 1}}>\n            <Select\n                 value={value_str}\n                 className={classes.select}\n                 onChange={handleChange}\n                 onFocus={(e) => e.target.blur()}\n            >\n                { description.map( (s, i) => <MenuItem key={i} value={s[0]}>{s[0]}</MenuItem> )}\n            </Select>\n        </FormControl>\n        <Box style={{flexGrow: 10}}> </Box>\n        <IconButton onClick={toggleFav}>\n            <BookmarkIcon />\n        </IconButton>\n        <IconButton onClick={toggleBright}>\n            <Brightness6Icon/>\n        </IconButton>\n        <IconButton onClick={handleInfoOpen}>\n            <InfoIcon />\n        </IconButton>\n        </Toolbar>\n        </Box>\n    </div>\n}\n\nexport default TopBarView;","import { EventAvailableOutlined } from \"@material-ui/icons\";\nimport { setEmitFlags } from \"typescript\";\nimport { MoveSeq } from \"./CubeLib\";\nimport two_gram_meter from './two_gram_v1.json'\nexport abstract class Evaluator {\n    abstract evaluate(moves: MoveSeq) : number;\n    abstract name : string;\n}\nexport class SeqEvaluator extends Evaluator {\n    name = \"sequential\";\n    static moveCost_gen() {\n        let pairs: [string, number][] = [\n            [\"U\", 0.8], [\"U'\", 0.8], [\"U2\", 1.0],\n            [\"R\", 0.8], [\"R'\", 0.8], [\"R2\", 1.2],\n            [\"r\", 1], [\"r'\", 1], [\"r2\", 1.3],\n            [\"L\", 1], [\"L'\", 1], [\"L2\", 1.4],\n            [\"F\", 1.4], [\"F'\", 1.4], [\"F2\", 1.8],\n            [\"B\", 1.6], [\"B'\", 1.6], [\"B2\", 2.2],\n            [\"D\", 1.4], [\"D'\", 1.4], [\"D2\", 1.7],\n            [\"M\", 1.5], [\"M'\", 1.2], [\"M2\", 1.8],\n            [\"S\", 1.7], [\"S'\", 1.7], [\"S2\", 3.0],\n            [\"E\", 1.5], [\"E'\", 1.5], [\"E2\", 2.4],\n        ];\n        let costMap = new Map(pairs);\n        return costMap;\n    }\n    static moveCost = SeqEvaluator.moveCost_gen();\n\n    evaluate(moves: MoveSeq) {\n        let sum = 0;\n        for (let m of moves.moves) {\n            const value = (SeqEvaluator.moveCost.get(m.name)) || 1.4;\n            sum += value;\n        }\n        return sum;\n    }\n\n}\n\nexport class QTMEvaluator extends Evaluator {\n    name = \"qtm\";\n    evaluate(moves: MoveSeq) {\n        let sum = 0;\n        for (let m of moves.moves) {\n            sum += m.name[1] === \"2\" ? 2 : 1;\n        }\n        return sum;\n    }\n}\n\nexport class DefaultEvaluator extends Evaluator {\n    name = \"default\";\n    evaluate(moves: MoveSeq) {\n        return moves.moves.length;\n    }\n}\n\n\nexport class TwoGramEvaluator extends Evaluator {\n    name = \"two-gram\";\n    static meter = two_gram_meter as {[s: string]: string};\n    evaluate(moves_input: MoveSeq) {\n        let score = 0\n        let moves = [\"\", ...moves_input.moves.map(x => x.name), \"\"]\n        for (let i =0; i < moves.length - 1; i++) {\n            let two_gram = moves[i] + moves[i + 1]\n            let curr_score = Number.parseFloat(TwoGramEvaluator.meter[two_gram])\n            if (Number.isNaN(curr_score)) {\n                curr_score = 0.3;\n            }\n            score += curr_score;\n        }\n        return score\n    }\n}\n\n//ames: [\"sequential\", \"two-gram\", \"QTM\", \"default\"],\nexport function getEvaluator(s: string) {\n    switch (s) {\n        case \"sequential\": return new SeqEvaluator();\n        case \"two-gram\": return new TwoGramEvaluator();\n        case \"qtm\": return new QTMEvaluator();\n        case \"default\": \n        default :\n            return new DefaultEvaluator();\n    }\n} ","\nimport { CubeUtil, CubieCube, Mask, Move, MoveSeq } from './CubeLib';\nimport { CachedSolver } from '../lib/CachedSolver';\nimport { getEvaluator } from '../lib/Evaluator';\n\n\nexport type AnalyzerState = {\n    scramble: string,\n    post_scramble: string, // the part of solution leading up to the stage under analysis\n    full_solution: SolutionDesc[],\n    stage: string,\n    orientation: string,\n    pre_orientation: string,\n    num_solution: number,\n    show_mode: string //\"foreach\" | \"combined\"\n}\nexport let initialState : AnalyzerState = {\n    scramble: \"L2 D2 R2 B2 F' D2 U2 L2 B2 F L B' U2 F' D U B L D2 \",\n    post_scramble: \"\",\n    full_solution: [],\n    stage: \"fb\",\n    orientation: \"x2y\",\n    pre_orientation: \"\",\n    num_solution: 1,\n    show_mode: \"foreach\"\n}\n\nexport type SolverConfig = {\n    premoves?: string[],\n    num_solution: number,\n    upper_limit: number,\n    lower_limit?: number,\n    evaluator?: string\n  }\n  \nexport type SolutionDesc = {\n    solution: MoveSeq,\n    premove: string,\n    score: number,\n    orientation?: string,\n    stage: string\n}\n  \nfunction is_fb_solved(cube: CubieCube, oris: MoveSeq[]) {\n    for (let ori of oris) {\n        let cube1 = cube.changeBasis(ori).apply(ori.inv())\n        if (CubeUtil.is_solved(cube1, Mask.fb_mask)) return ori  \n    }\n    return null\n}\n\n\n\nexport function analyze_roux_solve(cube: CubieCube, solve: MoveSeq) {\n    //todo: break up half turns to detect cancellation in between stages\n    let oris = get_oris(\"cn\").map(m => new MoveSeq(m))\n    let pres = [\"\", \"x\", \"x'\", \"x2\"].map(m => new MoveSeq(m))\n    const defaultSolution = {\n        solution: [], premove: \"\", orientation: \"\", stage: \"\", score: 0\n    }\n    // figure out which fb gets solved first\n    let stages = [\"fb\", \"ss\", \"sp\", \"cmll\", \"lse\"]\n    let solution : SolutionDesc[] = [];\n    let current_moves : Move[] = []\n    let stage_idx = 0\n    let getMasksForStage = (s: string) => {\n        switch (s) {\n            case \"ss\": return [Mask.ss_front_mask, Mask.ss_back_mask]\n            case \"sp\": return [Mask.sb_mask]\n            case \"cmll\": return [Mask.cmll_mask]\n            case \"lse\": return [Mask.solved_mask]\n            default: return [Mask.solved_mask]\n        }\n    }\n\n    let moves = [ Move.all[\"id\"], ...solve.moves]\n    for (let move of moves) {\n        cube = cube.apply(move)\n        if (move.name !== \"id\") current_moves.push(move)\n\n        if (stage_idx === 0) {\n            let res = is_fb_solved(cube, oris)\n            if (res !== null) {\n                let orientation = res\n                solution.push({ ...defaultSolution,\n                    solution: new MoveSeq(current_moves),\n                    orientation: orientation.moves.join(\"\"),\n                    stage: \"fb\"\n                })\n                stage_idx++\n                current_moves = []\n                cube = cube.changeBasis(orientation).apply(orientation.inv())\n            }\n        }\n        else if (stage_idx !== 3) {\n            let stage = stages[stage_idx]\n            let masks = getMasksForStage(stage)\n            if (masks.some(mask => CubeUtil.is_solved(cube, mask))) {\n                solution.push({ ...defaultSolution, \n                    solution: new MoveSeq(current_moves),\n                    stage\n                })\n                stage_idx++\n                current_moves = []\n            }\n        } else {\n            if (CubeUtil.is_cmll_solved(cube)) {\n                solution.push({ ...defaultSolution, \n                    solution: new MoveSeq(current_moves),\n                    stage: \"cmll\"\n                })\n                stage_idx++\n                current_moves = []\n            }\n        }\n        if (stage_idx >= stages.length) break\n    }\n    if (current_moves.length > 0) {\n        solution.push({ ...defaultSolution, \n            solution: new MoveSeq(current_moves),\n            stage: \"unknown\"\n        })\n    }\n    return solution\n}\n\nfunction solve(solver_str: string, cube: CubieCube, config: SolverConfig) {\n    const solver = CachedSolver.get(solver_str)\n    let { premoves, num_solution, upper_limit } = config\n    let ev = getEvaluator(config.evaluator || \"sequential\")\n    let solver_num_solution = (num_solution < 10) ? 10 : num_solution\n    let solutions = (premoves || [\"\"]).map(pm => \n        solver.solve(cube.apply(pm), 0, upper_limit, solver_num_solution)\n            .map(x => ({premove: pm, solution: x, score: ev.evaluate(x)}))\n    ).flat()\n    return solutions.sort( (x, y) => x.score - y.score).slice(0, num_solution) \n}\n\nconst get_oris = (ori: string, preori?: string) => {\n    let oris : string[] = []\n    if (ori === \"x2y\") {\n        oris = (preori === \"\") ? [\"\", \"y\", \"y'\", \"y2\", \"x2\", \"x2y\", \"x2y'\", \"x2y2\"] :\n        (preori === \"x\") ? [\"x\", \"xy\", \"xy'\", \"xy2\", \"x'\", \"x'y\", \"x'y'\", \"x'y2\"] :\n        [\"z\", \"zy\", \"zy'\", \"zy2\", \"z'\", \"z'y\", \"z'y'\", \"z'y2\"]\n    \n    } else if (ori === \"cn\") {\n        oris = [\"\", \"y\", \"y'\", \"y2\", \"x2\", \"x2y\", \"x2y'\", \"x2y2\",\n                \"x\", \"xy\", \"xy'\", \"xy2\", \"x'\", \"x'y\", \"x'y'\", \"x'y2\",\n                \"z\", \"zy\", \"zy'\", \"zy2\", \"z'\", \"z'y\", \"z'y'\", \"z'y2\"]\n    }\n    return oris\n}\nfunction analyze_fb(state: AnalyzerState, cube: CubieCube): SolutionDesc[] {\n    let config : SolverConfig = {\n        premoves: [\"\", \"x\", \"x'\", \"x2\"],\n        num_solution: state.num_solution,\n        upper_limit: 9\n    }\n    let oris = get_oris(state.orientation, state.pre_orientation)\n\n    let solutions = oris.map(ori => solve(\"fb\", cube.changeBasis(new MoveSeq(ori)), config).map(sol => ({\n    ...sol, orientation: ori, stage: \"fb\"\n    })).sort( (x, y) => x.score - y.score)).flat()\n\n    return solutions\n}\n\nfunction analyze_ss(state: AnalyzerState, cube: CubieCube): SolutionDesc[] {\n    let config : SolverConfig = {\n        num_solution: state.num_solution,\n        upper_limit: 15\n    }\n    let solutions = [\"ss-front\", \"ss-back\"].map(name => solve(name, cube, config).map(sol => ({\n        ...sol, stage: name\n    })).sort( (x, y) => x.score - y.score)).flat()\n    return solutions\n}\n\nfunction analyze_sp(state: AnalyzerState, cube: CubieCube): SolutionDesc[] {\n    let config : SolverConfig = {\n        num_solution: state.num_solution,\n        upper_limit: 10\n    }\n    let solutions = solve(\"sb\", cube, config).map(sol => ({\n        ...sol, stage: \"sp\"\n    })).sort( (x, y) => x.score - y.score)\n\n    return solutions\n}\n\nfunction analyze_lse(state: AnalyzerState, cube: CubieCube): SolutionDesc[] {\n    let config : SolverConfig = {\n        num_solution: state.num_solution,\n        upper_limit: 20\n    }\n    let solutions = solve(\"lse\", cube, config).map(sol => ({\n        ...sol, stage: \"lse\"\n    })).sort( (x, y) => x.score - y.score)\n\n    return solutions\n}\n\n\nexport function analyze(state: AnalyzerState) {\n    let cube = new CubieCube().apply(state.scramble).apply(state.post_scramble)\n    if (state.stage === \"fb\") return analyze_fb(state, cube)\n    else {\n        let ori = new MoveSeq((state.full_solution[0]?.orientation) || \"\")\n        cube = cube.changeBasis(ori).apply(ori.inv())\n        if (state.stage === \"ss\") return analyze_ss(state, cube)\n        else if (state.stage === \"sp\") return analyze_sp(state, cube)\n        else if (state.stage === \"lse\") return analyze_lse(state, cube)\n    }\n    return []\n}","import React, { Fragment } from 'react'\n\nimport CubeSim from './CubeSim'\nimport { Button, makeStyles, Typography, useTheme, FormControl, FormLabel, Size, } from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport { CubeUtil, CubieCube, FaceletCube, Mask, MoveSeq } from '../lib/CubeLib';\n\nimport { AppState,  Action, Config, FavCase, Mode} from \"../Types\";\nimport 'typeface-roboto-mono';\nimport { Face } from '../lib/Defs';\n\nimport { SingleSelect, MultiSelect } from './SelectorViews';\nimport { ColorPanel } from './Input';\nimport { CaseDesc } from '../lib/Algs';\nimport TextField from '@material-ui/core/TextField';\n\nimport { AnalyzerState, SolverConfig, SolutionDesc, initialState, analyze_roux_solve } from '../lib/Analyzer';\n\nimport * as Comlink from 'comlink';\n/* eslint-disable import/no-webpack-loader-syntax */\nimport MyWorker from \"worker-loader!../lib/Worker\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nimport Chip from '@material-ui/core/Chip';\nimport { BoxBufferGeometry, BoxHelper } from 'three';\nimport { CachedSolver } from '../lib/CachedSolver';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport { createNonNullChain } from 'typescript';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\n// web work solution: worker-loader + comlink interface\n// https://dev.to/nicolasrannou/web-workers-in-create-react-app-cra-without-unmounting-4865\n// https://github.com/webpack-contrib/worker-loader#integrating-with-typescript\n// const worker = new Worker()\n// const obj = Comlink.wrap(worker)\n// async function init() {\n//   await (obj as any).inc();\n//   await (obj as any).inc();\n//   let ct = await (obj as any).counter\n//   console.log(\"Testing \",  ct);\n// }\n// init()\n\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(2),\n      backgroundColor: theme.palette.background.default, \n      transition: \"all .5s ease-in-out\"\n    },\n    button: {\n      width: \"100%\",\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n      marginBottom: 3,\n      borderRadius: 0\n    },\n    paper2: {\n      paddingLeft: theme.spacing(3),\n      paddingTop: theme.spacing(2),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n      marginBottom: 3,\n      borderRadius: 0\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    infoColumn: {\n      color: theme.palette.background.paper\n    },\n    scrambleColumn: {\n      paddingLeft: theme.spacing(3)\n    },\n    textColumn: {\n      // color: \"black\",\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 138\n      },\n    },\n    setup: {\n      whiteSpace: 'pre-line',\n      fontSize: \"1.4rem\",\n      fontWeight:500,\n      [theme.breakpoints.down('xs')]: {\n      fontSize: \"1.0rem\",\n      fontWeight: 500\n      },\n  },\n    condGap: {\n    },\n    fgap: {\n      flexShrink: 100, flexBasis: \"2.5rem\", minWidth: \"1.5em\",\n      [theme.breakpoints.down('xs')]: {\n        flexBasis: \"1.0rem\", \n        minWidth: \"0.4rem\"\n      }\n    },\n    fixedHeight: {\n      height: 250,\n    },\n    title : {\n        color: theme.palette.text.hint,\n        fontWeight: 500,\n        borderBottom: \"3px solid\",\n    },\n    title1 : {\n      fontWeight: 500,\n      marginTop: 7,         \n      border: \"1px solid\",\n      borderRadius: 4,\n      fontSize: \"0.8rem\"\n   },\n    stage: {\n      paddingTop: 5,\n      paddingLeft: 5,\n    },\n    configItem: {\n      paddingRight: 15\n    },\n    stageText: {\n      color: theme.palette.text.primary,\n      textTransform: \"none\"\n    },\n    sourceIcon : {\n        color: theme.palette.secondary.main,\n        fontSize: 15,\n        padding: 0\n    },\n    sourceIconWrap : {\n        //border: \"1px solid \" + theme.palette.text.hint,\n        //borderRadius: 3\n    },\n    fab: {\n      position: 'absolute',\n      top: theme.spacing(7),\n      left: theme.spacing(2),\n    },\n    prompt: {\n      color: theme.palette.text.secondary,\n    },\n    formControl: {\n      margin: theme.spacing(0),\n      minWidth: 120,\n    },\n  }))\n\nconst resetState = (state: AnalyzerState) => {\n  return {\n    ...state,\n    postScramble: \"\",\n    full_solution: [],\n    scramble: \"\",\n    stage: \"fb\"\n  }\n}\nfunction ScrambleView(props: { state: AnalyzerState, setState: (newState: AnalyzerState) => void }) {\n    let { state, setState } = props\n    let classes = useStyles()\n    // Add event listeners\n    let [ value, setValue ] = React.useState(state.scramble)\n\n    let onScrambleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setValue(event?.target.value)\n    }\n\n    let handleBegin = () => {\n\n      setState({...resetState(state), scramble: value})\n    }\n    let handleGen = () => {\n      let cube = CubeUtil.get_random_with_mask(Mask.empty_mask)\n      let scramble = CachedSolver.get(\"min2phase\").solve(cube,0,0,0)[0].inv().toString()\n      setState({...resetState(state), scramble})\n      setValue(scramble)\n    }\n\n    return (\n    <Box style={{display: \"flex\"}}>\n    \n      <Box style={{display: \"flex\", alignItems: \"center\", flexGrow: 1}}>\n        <TextField\n          size=\"small\"\n          fullWidth\n          multiline\n          maxRows={3}\n          label={\"Scramble\"}\n          value={value}\n          onChange={onScrambleChange}\n          variant=\"filled\"\n        />\n      </Box>\n      <Box style={{}} className={classes.fgap} />\n      <Button onFocus={(evt) => evt.target.blur() } onClick={handleGen}\n            size=\"medium\" variant=\"contained\" color=\"primary\" >\n              Gen\n      </Button>\n      <Button onFocus={(evt) => evt.target.blur() } onClick={handleBegin}\n            size=\"medium\" variant=\"contained\" color=\"primary\" >\n              GO\n      </Button>\n    </Box> )\n}\n\nconst bases = \"\"\nfunction ConfigView(props: { state: AnalyzerState, setState: (newState: AnalyzerState) => void}) {\n  let { state, setState } = props\n  let classes = useStyles()\n  let fb_ori_str = state.orientation + \",\" + state.pre_orientation\n  let handleFBOri = (event: React.ChangeEvent<{ value: unknown }>) => {\n    let value: string[]= (event.target.value as string).split(\",\")\n    setState({...state, orientation: value[0], pre_orientation: value[1]})\n  }\n  let display_mode_str = state.show_mode\n  let handle_display_mode = (event: React.ChangeEvent<{ value: unknown }>) =>  {\n    let value = (event.target.value as string)\n    setState({...state, show_mode: value})\n  }\n  let handle_num_solution = (event: React.ChangeEvent<{ value: unknown }>) =>  {\n    let value = Number.parseInt(event.target.value as string)\n    setState({...state, num_solution: value || state.num_solution})\n  }\n  return (\n  <Box display=\"flex\">\n    <Box className={classes.configItem}>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-helper-label\">FB Orientation</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-helper-label\"\n          id=\"demo-simple-select-helper\"\n          value={fb_ori_str}\n          onChange={handleFBOri}\n        >\n          <MenuItem value={\"x2y,\"}>x2y on White/Yellow</MenuItem>\n          <MenuItem value={\"x2y,x\"}>x2y on Blue/Green</MenuItem>\n          <MenuItem value={\"x2y,z\"}>x2y on Red/Orange</MenuItem>\n          <MenuItem value={\"cn,\"}>Color Neutral</MenuItem>\n        </Select>\n        <FormHelperText></FormHelperText>\n      </FormControl>\n    </Box>\n    <Box className={classes.configItem}>\n      <FormControl className={classes.formControl}>\n      <InputLabel id=\"demo-simple-select-helper-label\">Display Mode</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-helper-label\"\n        id=\"demo-simple-select-helper\"\n        value={display_mode_str}\n        onChange={handle_display_mode}\n      >\n        <MenuItem value={\"foreach\"}>Per orientation</MenuItem>\n        <MenuItem value={\"combined\"}>Combined </MenuItem>\n      </Select>\n      <FormHelperText></FormHelperText>\n     </FormControl>\n    </Box>\n    <Box  className={classes.configItem}>\n    <FormControl className={classes.formControl}>\n      <InputLabel id=\"demo-simple-select-helper-label\"># Solutions</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-helper-label\"\n        id=\"demo-simple-select-helper\"\n        value={state.num_solution}\n        onChange={handle_num_solution}\n      >\n        <MenuItem value={1}>1</MenuItem>\n        <MenuItem value={3}>3 </MenuItem>\n        <MenuItem value={5}>5</MenuItem>\n        <MenuItem value={10}>10 </MenuItem>\n        <MenuItem value={25}>25 </MenuItem>\n      </Select>\n      <FormHelperText></FormHelperText>\n    </FormControl>\n    </Box>\n\n  </Box>)\n}\n\n\nfunction SolutionInputView(props: { state: AnalyzerState, setState: (newState: AnalyzerState) => void}) {\n  let classes = useStyles()\n  let [editing, setEditing] = React.useState(false)\n  let [value, setValue] = React.useState(\"\")\n  let textField = React.useRef<HTMLInputElement | null>(null)\n  let container = React.useRef<HTMLInputElement | null>(null)\n  let editButton = React.useRef<HTMLElement | null>(null)\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setValue(event.target.value)\n      event.stopPropagation()\n  }\n  const toggleEdit = () => {\n      setEditing(true)\n  }\n  const handleClose = () => {\n    setEditing(false)\n    let t = Date.now()\n    let full_solution = analyze_roux_solve(new CubieCube().apply(props.state.scramble), new MoveSeq(value))\n    if (full_solution.length > 1 || full_solution.length === 1 && full_solution[0].solution.moves.length > 0 )\n      props.setState({...props.state, full_solution})\n  }\n  const onEntered = () => {\n      textField.current && textField.current.focus()\n  }\n  return <Box>\n    <Box >\n          <Button variant={editing ? \"contained\" : \"outlined\"}\n              color=\"primary\"\n              size=\"small\"\n              onClick={toggleEdit}\n              \n              startIcon={<EditIcon />}\n          >\n              {\"Input Your Solution\"}\n          </Button>\n    </Box>\n\n    <Dialog open={editing} \n            onClose={handleClose}  \n            /*onEntered={onEntered}*/\n            maxWidth=\"sm\"\n            fullWidth\n            >\n          <DialogTitle> Input your reconstructed solution </DialogTitle>\n          <DialogContent>\n                <TextField\n                    inputRef={textField}\n                    multiline\n                    size=\"medium\"\n                    fullWidth\n                    maxRows={10}\n                    rows={5}\n                    value={value}\n                    onChange={onChange}\n                    variant=\"outlined\">\n                </TextField>\n          </DialogContent>\n          <DialogActions>\n              <Box padding={1}>\n              <Button onClick={handleClose} color=\"primary\" variant=\"outlined\" fullWidth >\n                  Confirm\n              </Button>\n              </Box>\n          </DialogActions>\n    </Dialog>\n  </Box>\n}\n\n\nfunction StageSolutionView(props: { solution: SolutionDesc }) {\n  let { solution, stage, premove, orientation } = props.solution\n  let getTags = () => {\n    if (stage === \"fb\") {\n      return [ orientation ]\n    } else if (stage === \"ss-front\" || stage === \"ss-back\"){\n      return [ stage ]\n    } else return []\n  }\n  let tags = getTags()\n  return (\n    <Box style={{display: \"flex\", marginBottom: \"2px\"}}>\n      {tags.filter(x=>x).map( (t, i) => <Chip variant=\"outlined\" size=\"small\" color=\"primary\" label={t} key={i} />) }\n      <Box style={{marginLeft: 5}}>\n        <Typography>\n          {premove + \" \" + solution.moves.map(m => m.name).join(\" \")}\n        </Typography>\n      </Box>\n    </Box>\n  )\n}\n\n\nfunction StageSolutionListView(props: { solutions: SolutionDesc[], state: AnalyzerState, setState: (newState: AnalyzerState) => void} ) {\n  let { solutions, state, setState } = props\n\n  return (\n    <Box lineHeight={1}>\n      { solutions.map( (s, i) => <StageSolutionView solution={s} key={i}/>) }\n    </Box>\n  ) \n}\n\nfunction FullSolutionView(props: { state: AnalyzerState, setState: (newState: AnalyzerState) => void} ) {\n  let { state, setState } = props\n  let classes = useStyles()\n\n  let setStage = (i: number) => () => {\n    setState({...state, \n      stage: state.full_solution[i].stage,\n      post_scramble: state.full_solution.slice(0, i).map(x => x.premove + x.solution.toString()).join(\" \")\n    })\n  }\n  let [show, setShow] = React.useState(-1)\n  let stageView = (sol: SolutionDesc, i: number) => {\n    return (\n      <Box display=\"flex\" key={i} className={classes.stage} \n        onMouseLeave={ () => setShow(-1)} onMouseEnter={() => setShow(i)} onClick={() => setShow(show === i ? -1 : i)}>\n        <Button variant={\"text\"}\n              color=\"primary\"\n              size=\"small\"\n              onClick={setStage(i)}\n              style={{fontSize: \"0.7rem\", marginLeft: 5, border: (show === i) ? \"1px solid\" : \"1px solid rgba(0, 0,0,0)\"\n            }} >\n        <Typography variant=\"subtitle1\" className={classes.stageText}>{sol.solution.toString()} // {sol.stage}\n        </Typography>        \n        <SearchIcon fontSize=\"small\"/>\n        </Button>\n\n      </Box>\n    )\n  }\n  return (\n    <Box paddingBottom={2} lineHeight={1} >\n      <Box>\n        <SolutionInputView state={state} setState={setState}/>\n      </Box>\n      <Box style={{fontFamily: \"Public Sans\"}}>\n        { props.state.full_solution.map( (desc, i) => stageView(desc, i))}\n      </Box>\n    </Box>\n  )\n  \n}\n\nconst worker_raw = new MyWorker()\nconst worker = Comlink.wrap(worker_raw)\n\nfunction AnalyzerView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n    let { state: appState, dispatch: appDispatch } = props\n    \n    const theme = useTheme()\n    let [ state, setState ] = React.useState(initialState)\n\n    let [ solutions, setSolutions ] = React.useState<SolutionDesc[]>([])\n\n    let classes = useStyles()\n\n    let mask = Mask.solved_mask\n    let cubieCube = new CubieCube().apply(state.scramble).apply(state.post_scramble)\n    let faceletCube = FaceletCube.from_cubie(cubieCube, mask)\n\n    let ycube = FaceletCube.from_cubie(cubieCube.changeBasis(new MoveSeq(\"y\")))\n\n    let solutions_to_display = solutions.slice()\n    if (state.show_mode === \"combined\") {\n      solutions_to_display = solutions_to_display.sort( (x, y) => x.score - y.score).slice(0, state.num_solution)\n    } else {\n     /// solutions_to_display = solutions.slice(0, Math.ceil(config.num_solution / oris.length))\n    }\n    React.useEffect(() => {\n      async function effect() {\n\n        let t = Date.now()\n        let curr_solutions = await (worker as any).analyze(state) as SolutionDesc[]\n        // console.log(\"web worker finished after \" + (Date.now() - t) + \" ms\")\n        //console.log(\"result = \", curr_solutions)\n\n        setSolutions(curr_solutions)\n        //l/et curr_solutions = await analyzer_worker(state, cubieCube)\n        //\n      }\n      effect()\n    }, [state.scramble, state.stage, state.post_scramble, state.num_solution, state.orientation, state.pre_orientation])\n\n    const gt_md = useMediaQuery(theme.breakpoints.up('md'));\n    const gt_sm = useMediaQuery(theme.breakpoints.up('sm'));\n    const canvas_wh = (gt_md) ? [400, 350] : (gt_sm) ? [400, 350] : [320, 280]\n\n    return (\n    <Box className={classes.container}>\n      <Paper className={classes.paper} elevation={1}>\n        <ScrambleView state={state} setState={setState}/>\n      </Paper>\n\n\n      <Paper className={classes.paper} elevation={2}>\n        <ConfigView state={state} setState={setState}/>\n      </Paper>\n\n      <Paper className={classes.paper2} elevation={1}>\n        <Box display=\"flex\" >\n          {\n            state.full_solution.length >= 1 ? <>\n              <Box style={{display: \"flex\", flexDirection: \"column\", alignSelf: \"flex-start\"}}> \n                <Box className={classes.title} style={{}}>\n                  My Solution\n                </Box> \n              </Box>\n              <Box style={{}} className={classes.fgap} /> \n            </>\n          : null\n          }\n\n          <FullSolutionView state={state} setState={setState}/>\n        </Box>\n\n      </Paper>\n\n      <Paper className={ classes.paper}>\n      <Grid container>\n        <Grid item md={6} sm={12} className={classes.condGap}>\n          <Box style={{display: \"flex\" }}>\n            <Box display=\"flex\" >\n                <Box style={{display: \"flex\", flexDirection: \"column\", alignSelf: \"flex-start\"}}> \n                  <Box className={classes.title} style={{}}>\n                    Solutions\n                  </Box> \n                  <Box>\n                  <Button className={classes.title1} size=\"small\" variant=\"outlined\" color=\"primary\">\n                    { state.stage }\n                  </Button>\n                  </Box>\n                </Box>\n            </Box>\n            <Box style={{}} className={classes.fgap} />\n           \n              <StageSolutionListView solutions={solutions_to_display} state={state} setState={setState}/>\n           \n          </Box>\n        </Grid>\n\n\n        <Grid item md={6} xs={12} style={{display: \"flex\", justifyContent: \"center\"}}>\n          <Box style={{backgroundColor: \"rgba(0, 0, 0, 0)\"}}>\n            <CubeSim\n              width={canvas_wh[0]}\n              height={canvas_wh[1]}\n              cube={faceletCube}\n              colorScheme={appState.colorScheme.getColorsForOri(appState.cube.ori)}\n              hintDistance={ 6 }\n              theme={appState.config.theme.getActiveName()}\n\n              facesToReveal={ [Face.L, Face.B, Face.D]  }\n            />\n          </Box>\n\n\n        </Grid>\n      </Grid>\n      </Paper>\n\n\n\n      <Box height={20}/>\n      <Divider/>\n      <Box height={20}/>\n\n\n    </Box>\n    );\n}\n\n\nexport default AnalyzerView\n\n\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/Worker.bbe34fd3.worker.js\");\n}\n","import React from 'react'\n\nimport CubeSim from './CubeSim'\nimport { Button, makeStyles, Typography, useTheme, FormControl, FormLabel, Size, } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\n\nimport { CubeUtil, CubieCube, FaceletCube, Mask, MoveSeq } from '../lib/CubeLib';\n\nimport { AppState,  Action, Config, FavCase, Mode} from \"../Types\";\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport classes from '*.module.css';\nimport { Face, FaceletCubeT } from '../lib/Defs';\nimport { rand_choice, rand_int, rand_shuffle } from '../lib/Math';\nimport TextField from '@material-ui/core/TextField';\nimport { CachedSolver } from '../lib/CachedSolver';\nimport { SolverT } from '../lib/Solver';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        paddingTop: theme.spacing(0),\n        paddingBottom: theme.spacing(2),\n        backgroundColor: theme.palette.background.default, \n        transition: \"all .5s ease-in-out\"\n    },\n    paper: {\n        padding: theme.spacing(3),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n        marginBottom: 3,\n        borderRadius: 0\n    },\n    select: {\n        margin: \"0px 10px\"\n    },\n    scramble: {\n        whiteSpace: 'pre-line',\n        fontSize: \"1.4rem\",\n        fontWeight:500,\n    },\n    title: {\n        color: theme.palette.text.hint,\n        fontWeight: 500,\n        borderBottom: \"3px solid\",\n    },\n    fgap: {\n        flexShrink: 100, flexBasis: \"2.5rem\", minWidth: \"1.5em\",\n        [theme.breakpoints.down('xs')]: {\n          flexBasis: \"1.0rem\", \n          minWidth: \"0.4rem\"\n        }\n    }\n})\n)\n\n\ntype TrackerChallenge = {\n        cubeBefore: CubieCube\n        moves: string,\n        progress: number,\n        mask: Mask\n}\n\ntype TrackerState = {\n    mode: string,\n    moveSet: string,\n    moveCount: number,\n    display: string,\n    result: TrackerChallenge | null\n}\n\nconst initialState : TrackerState = {\n    mode: \"fb,ss\",\n    moveSet: \"UDFBrRM\",\n    moveCount: 5,\n    display: \"hidden\",\n    result: null\n}\n\n\nconst axis : {[key: string]: number} = {\n    \"X\": 0,\n    \"R\": 1, \"r\": 1, \"l\": 1, \"L\": 1, \"M\": 1,\n    \"U\": 2, \"D\": 2, \"u\": 2, \"d\": 2, \"E\": 2,\n    \"F\": 3, \"B\": 3, \"f\": 3, \"b\": 3, \"S\": 3\n}\n\nconst mode_to_mask = (mode: string) => {\n    let mask = Mask.copy(Mask.empty_mask)\n    if (mode === \"fb,ss\") {\n\n    }\n    return mask\n}\n\nfunction generateScramble(moveSet: string, moveCount: number) {\n    let prev = \"X\"\n    let prevprev = \"X\"\n    let scramble = \"\"\n    let moveList = moveSet.split(\"\")\n    for (let i = 0; i < moveCount; i++) {\n        let move : string\n        do {\n            move = rand_choice(moveList)\n        } while (move === prev ||\n            ( axis[move] === axis[prev] && axis[move] === axis[prevprev]));\n        prevprev = prev;\n        prev = move;\n        scramble += move + rand_choice([\"\", \"2\", \"'\"])\n    }\n    return scramble\n}\n\nfunction generateMoves(cube: CubieCube, solver: SolverT, moveSet: string, moveCount: number) {\n    let candidate = moveSet.split(\"\").map(x => [x, x + \"2\", x + \"'\"]).flat()\n    let moves = \"\"\n    let prev = \"X\"\n    let prevprev = \"X\"\n    let prevSolution = \" \"\n\n    for (let i = 0; i < moveCount; i++) {\n        let c = [...candidate]\n        rand_shuffle(c)\n        while (c.length > 0){\n            let next = c[c.length-1]\n            if (next[0] === prev ||\n                (axis[next[0]] === axis[prev] && axis[prev] === axis[prevprev])) {\n                    c.pop()\n                    continue\n             }\n            let moveSeq = solver.solve(cube.apply(next), 0, i + 1, 1)[0]\n            if (!!moveSeq && moveSeq.toString() !== prevSolution){\n                cube = cube.apply(next)\n                moves = moves + next\n\n                prevSolution = moveSeq.toString()\n                prevprev = prev\n                prev = next[0]\n                break\n            }\n            c.pop()\n        }\n        if (c.length === 0) { // unsuccessful\n            return new MoveSeq(\"\")\n        }\n        //if (new MoveSeq(prevSolution).moves.length === moveCount) break;\n    }\n    return new MoveSeq(moves)\n}\n\nfunction generateChallengeForFB(state: TrackerState): TrackerChallenge {\n    let solver = CachedSolver.get(\"fb\")\n    let cubeAfter = CubeUtil.get_random_with_mask(Mask.fb_mask)\n    let moves = generateMoves(cubeAfter, solver, state.moveSet, state.moveCount)\n    //solver.solve(cubeBefore, state.moveCount, state.moveCount, 1)[0]\n    let mask = Mask.copy(Mask.empty_mask) // empty_mask) // fbdr_mask)\n    if (state.mode === \"fb,sp\" || state.mode === \"fb,ss\") {\n        if (rand_int(2) === 0) {\n            mask.ep[11] = 1\n            mask.cp[7] = 1\n        } else {\n            mask.ep[10] = 1\n            mask.cp[6] = 1\n        }\n    }\n    if (state.mode === \"fb,dr\" || state.mode === \"fb,ss\") {\n        mask.ep[7] = 1\n    }\n    return {\n        cubeBefore: cubeAfter.apply(moves),\n        mask,\n        moves: moves.inv().toString(),\n        progress: 0,\n    }\n}\n\nfunction generateChallengeForFS(state: TrackerState): TrackerChallenge {\n    let mode = rand_choice([\"fs-front\", \"fs-back\"])\n    let solver = CachedSolver.get(mode)\n    let cubeAfter = CubeUtil.get_random_with_mask(mode === \"fs-back\" ? Mask.fs_back_mask : Mask.fs_front_mask)\n    let moves = generateMoves(cubeAfter, solver, state.moveSet, state.moveCount)\n    //solver.solve(cubeBefore, state.moveCount, state.moveCount, 1)[0]\n    let mask = Mask.copy(Mask.empty_mask) // empty_mask) // fbdr_mask)\n    if (mode === \"fs-back\") {\n        mask.ep[8] = 1\n        mask.cp[4] = 1\n    } else {\n        mask.ep[9] = 1\n        mask.cp[5] = 1\n    }\n    if (state.mode === \"fs,lp+dr\") {\n        mask.ep[7] = 1\n    }\n    return {\n        cubeBefore: cubeAfter.apply(moves),\n        mask,\n        moves: moves.inv().toString(),\n        progress: 0,\n    }\n}\n\n\nfunction generateChallenge(state: TrackerState) {\n    if (state.mode.slice(0, 3) === \"fb,\") {\n        return generateChallengeForFB(state)\n    } else return generateChallengeForFS(state)\n}\n\nfunction getInitialState() {\n    let result = generateChallenge(initialState);\n    return {...initialState, result}\n}\n\nfunction TrackerView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n    let { state: globalState, dispatch: globalDispatch } = props\n    const theme = useTheme()\n    const simBackground = globalState.config.theme.getActiveName() === \"bright\" ? \"#eeeeef\" : theme.palette.background.paper\n\n    let [ state, setState ] = React.useState(getInitialState)\n    let classes = useStyles()\n\n    let {cubeBefore, mask, moves, progress} = state.result!\n    let cube1 = FaceletCube.from_cubie(cubeBefore.apply(\n           new MoveSeq(moves).toQuarter().slice(progress)), mask)\n\n    console.log(\"moves\", moves)\n    let cube2 = FaceletCube.from_cubie(cubeBefore.apply(moves), mask)\n\n\n    // React.useEffect( () => {\n    //     const t = new MoveSeq(moves).toQuarter().moves.length\n    //     let new_progress = 0\n    //     const timer = setInterval(() => {\n    //         new_progress++\n    //         if (new_progress > t) clearTimeout(timer)\n    //         setState( (state) => (\n    //             {...state, result: {...state.result, progress: new_progress} }\n    //         ))\n    //     }, 800);\n    //     return () => clearInterval(timer);\n    // }, [cubeBefore, moves])\n\n    let handleClick = () => {\n        if (state.display === \"hidden\") {\n            setState({...state, display: \"revealed\"})\n        } else {\n            let result = generateChallenge(state);\n            setState({...state, result, display: \"hidden\"})\n        }\n    }\n\n    let handleProgress = (func: (x : number) => number) => () => {\n        setState( (state) => (\n            {...state, result: {...state.result, progress: func(state.result.progress)} }\n        ))\n    }\n\n    let [ moveSetText, setMoveSetText ] = React.useState(state.moveSet)\n    let onMoveSetEdit = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setMoveSetText(event?.target.value)\n        onMoveSetCommit()\n    }\n    let onMoveSetCommit = () => {\n        setState({...state, moveSet: moveSetText})\n    }\n\n    let handleMode = (event: React.ChangeEvent<{ value: unknown }>) => {\n        let value = (event.target.value as string)\n        setState({...state, mode: value})\n    }\n    let handleMoveCount = (event: React.ChangeEvent<{ value: unknown }>) => {\n        let value = Number.parseInt(event.target.value as string) || 5\n        setState({...state, moveCount: value})\n    }\n\n    return (\n    <Box className={classes.container}>\n      <Paper className={classes.paper} >\n        <Box display=\"flex\" >\n          <Box>\n          <Box className={classes.title} style={{}}>\n            Scramble\n          </Box></Box>\n          <Box style={{}} className={classes.fgap} />\n          <Typography className={classes.scramble}>\n            {moves}\n          </Typography>\n        </Box>\n      </Paper>\n      <Paper className={classes.paper} >\n\n        <Box style={{display: \"flex\", alignItems: \"center\", flexGrow: 1}}> \n\n        <Box style={{padding: 10}} display=\"flex\" flexWrap=\"wrap\" flexDirection=\"row\">\n        <Box className={classes.select}>\n            <FormControl>\n                <InputLabel>Mode</InputLabel>\n                <Select\n                    value={state.mode}\n                    onChange={handleMode}\n                >\n                <MenuItem value={\"fs,lp\"}>Watch FS, Track Last Pair</MenuItem>\n                <MenuItem value={\"fs,lp+dr\"}>Watch FS, Track Last Pair + DR</MenuItem>\n                <MenuItem value={\"fb,dr\"}>Watch FB, Track DR </MenuItem>\n                <MenuItem value={\"fb,sp\"}>Watch FB, Track SB Pair </MenuItem>\n                <MenuItem value={\"fb,ss\"}>Watch FB, Track DR + SB Pair </MenuItem>\n                <MenuItem value={\"cross,pair\"}>Watch Cross, Track F2L Pair (will not be implemented, of course)</MenuItem>\n                </Select>\n                {/* <FormHelperText></FormHelperText> */}\n            </FormControl>\n        </Box>\n\n        <Box className={classes.select}>\n            <FormControl>\n                <InputLabel>MoveCount</InputLabel>\n                <Select\n                    value={state.moveCount}\n                    onChange={handleMoveCount}\n                    style={{minWidth: 80}}\n                >\n                <MenuItem value={\"3\"}>3</MenuItem>\n                <MenuItem value={\"4\"}>4</MenuItem>\n                <MenuItem value={\"5\"}>5</MenuItem>\n                <MenuItem value={\"6\"}>6</MenuItem>\n                <MenuItem value={\"7\"}>7</MenuItem>\n                <MenuItem value={\"8\"}>8</MenuItem>\n                </Select>\n                {/* <FormHelperText></FormHelperText> */}\n            </FormControl>\n        </Box>\n\n        <Box className={classes.select}>\n                <TextField\n                    size=\"small\"\n                    value={moveSetText}\n                    label=\"MoveGroup\"\n                    onChange={onMoveSetEdit}\n                />\n                {/* <FormHelperText></FormHelperText> */}\n        </Box>\n                {/* <Box style={{paddingTop: 10}}>\n                <Button\n                    color=\"primary\"\n                    size=\"medium\"\n                    onClick={onMoveSetCommit} >\n                    Confirm\n                </Button>\n                </Box> */}\n                {/* <FormHelperText></FormHelperText> */}\n                {/* <FormHelperText></FormHelperText> */}\n      </Box>\n\n      </Box>\n      </Paper>\n      <Paper className={classes.paper}>\n            <Box style={{paddingBottom: 10, margin: \"0px auto\"}}>\n                <Button color=\"primary\" size=\"medium\"\n                onClick={handleProgress((x) => 0) } >\n                    {\"|<<\"}\n                </Button>\n\n                <Button color=\"primary\" size=\"medium\"\n                onClick={handleProgress((x) => x - 1) } >\n                    {\"<<\"}\n                </Button>\n                <Button color=\"primary\" size=\"medium\"\n                onClick={handleProgress((x) => x + 1) } >\n                    {\">>\"}\n                </Button>\n                <Button color=\"primary\" size=\"medium\"\n                onClick={handleProgress((x) => x + 1) } >\n                    {\">>|\"}\n                </Button>\n            </Box>\n        <Button size=\"medium\" variant=\"outlined\" color=\"primary\" onClick={handleClick}>\n            {state.display === \"hidden\" ? \"Reveal\" : \"Next\" }\n        </Button>\n\n      </Paper>\n      <Paper className={classes.paper} >\n        <Grid container style={{display: \"flex\"}}>\n        <Grid item sm={6} xs={6} style={{display: \"flex\", justifyContent: \"center\"}}>\n          <Box>\n            <CubeSim\n              width={250}\n              height={250}\n              cube={cube1}\n              colorScheme={globalState.colorScheme.getColorsForOri(globalState.cube.ori)}\n              hintDistance={ 5 }\n              theme={globalState.config.theme.getActiveName()}\n              facesToReveal={ [Face.L, Face.B, Face.D]  }\n            />\n          </Box>\n        </Grid>\n\n        <Grid item sm={6} xs={6} style={{display: \"flex\", justifyContent: \"center\"}}>\n          <Box>\n            <CubeSim\n              width={250}\n              height={250}\n              cube={state.display === \"revealed\" ? cube2: FaceletCube.from_cubie(new CubieCube(), Mask.empty_mask) }\n              colorScheme={globalState.colorScheme.getColorsForOri(globalState.cube.ori)}\n              hintDistance={ 5 }\n              theme={globalState.config.theme.getActiveName()}\n              facesToReveal={ [Face.L, Face.B, Face.D]  }\n            />\n          </Box>\n        </Grid>\n        </Grid>\n      </Paper>\n    </Box>\n    )\n}\n\nexport default TrackerView","import React from 'react'\nimport { AppState, Mode, Action } from \"../Types\";\n\nimport { Box, Typography,Button, makeStyles } from '@material-ui/core';\nimport { Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\nimport { Grid, Container } from '@material-ui/core';\n\nimport CmllTrainerView from './CmllTrainerView';\nimport BlockTrainerView from './BlockTrainerView';\nimport PanoramaView from './PanoramaView';\n\n\n//import 'typeface-roboto';\n\nimport FavListView from './FavListView';\nimport TopBarView from './TopBarView';\nimport AnalyzerView from './AnalyzerView';\nimport TrackerView from './TrackerView';\n\nimport Markdown from 'markdown-to-jsx';\n\n\ninterface TabPanelProps {\n  value: number,\n  index: number,\n  children: any,\n  [key: string]: any\n}\nfunction TabPanel(props: TabPanelProps ) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={0}>{children}</Box>}\n    </Typography>\n  );\n}\nconst useStyles = makeStyles(theme => ({\n  page: {\n    backgroundColor: theme.palette.background.default\n  },\n  container: {\n    display: \"flex\"\n  },\n  icon: {\n    minWidth: 0\n  },\n  root: {\n    display: \"flex\"\n  },\n  bar: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.background.paper,\n    //borderRadius: \"5px\"\n  },\n  select: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.background.paper,\n    borderRadius: 4,\n    border: \"1px solid \" + theme.palette.background.default,\n  }\n}))\n\n\nconst modes : Mode[] = [\"analyzer\", \"fbdr\", \"fs\", \"fb\", \"ss\", \"cmll\", \"4c\", \"eopair\", \"tracking\"]\n\nfunction _getInitialHashLocation() {\n  const default_idx = 2\n  if (window.location.hash) {\n    let idx = (modes as string[]).indexOf(window.location.hash.slice(1))\n    if (idx === -1) {\n      window.location.hash = \"\";\n      return default_idx;\n    } else {\n      return idx;\n    }\n  } else {\n    return default_idx\n  }\n}\n\nconst introText = `# Onionhoney's Roux Trainers\n- A trainer collection that caters to all your Roux training needs  ❤️\n- Inspired by http://cubegrass.appspot.com/, but with everything that it is missing.\n\n## Modes supported\n- FB analyzer\n    - Solves for all x2y FBs, and suggests the best FB to start with!\n    - Other orientations supported too (CN, b/g x2y, etc.)\n- FB last slot (+ DR) trainer \n    - \\`HIGHLY USEFUL\\` if you're learning FB or FB + DR. Get a random scramble, think on your own, and check with our solutions!\n    - **Note**: while I try my best, the solver can still miss out on the best overall solution. So please, consult your human fellows when you're unsure, and always be careful with what you choose to learn.\n- FS/FB/SS trainer \n    - You can specify by piece positions. It seems these modes are pretty useful in providing new insights into blockbuilding  (for us dumb humans).\n- CMLL trainer \n    - Truly random scrambles so you can't tell the cases. You can specify different OCLLs. You can even start with a random SB last pair (to simulate how real recognition works)\n- LSE trainers (EOLR, 4c)\n    - Good for reviewing EOLR and practicing your 4c recognition method. You can filter by MC/Non-MC cases too.\n\n## Shortcuts\n- Space for the next scramble.\n- Enter to reset the virtual cube to current scramble. \n- Control your cube with cstimer key mapping.\n\n## Functionalities\n- Scrambles are all random state. Solver is Roux-optimized with M and r moves as first-class citizens, with up to 25 different solutions provided.\n\n- You can control the virtual cube with keyboard (CStimer mapping). You can also drag on the cube to change its perspective.\n\n- You can bookmark your favorite cases and these will be saved in your browser.\n\n- You can input your own scrambles as a list and our trainer will drain them one by one!\n\n- Appearance: dark mode enabled.\n\n---\n\n## Version Log \n- (v1.0.0) All work prior to 12/02/2020, which I forgot to version log for.\n- (v1.0.1) 12/02/2020: Add edge position control for FB Last Pair trainer.\n- (v1.1) 12/15/2020: Reworked UI. App bar now features a dropdown menu for selecting the mode. Scramble occupies its own row. Solutions are shown side by side with the sim cube in large screen.\n- (v1.2) 12/17/2020: Add support for scramble input for all modes. Now you can paste in a list of scrambles, and the trainer will consume them one by one in order.\n- (v1.3) 12/20/2020: Solve Analysis Beta is online! It can do the following:\n    - For any random scramble, it'll recommend the best FB solutions over all orientations (e.g. x2y yellow/white). \n    - Given a solve reconstruction, it'll analyze each stage, and compare your solution there with the solver-suggested solutions.\n- (v1.4) 12/23/2020: Refine the appearance of the virtual cube and enable camera control with mouse dragging. \n- (v1.5) 2/18/2021: Introduced Tracking Trainer Beta.\n\n---\n\nIf you have ideas on how to improve the app just shoot a message and let me know. <3\n`\n\nfunction Intro() {\n  return <Markdown>{introText}</Markdown>\n}\n\n// TODO: Write getter and setter for config items, and also write handlers that map to setters\nfunction AppView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n  //const [locations, setLocations] = React.useState([])\n  let { state, dispatch } = props\n  let classes = useStyles()\n\n  const handleChange = React.useCallback( (newValue:number) => {\n    if (newValue < modes.length) {\n      setValue(newValue)\n      let mode = modes[newValue]\n      dispatch({type: \"mode\", content: mode})\n    }\n  }, [dispatch])\n\n  const [ open, setOpen ] = React.useState(false)\n\n  const [value, setValue] = React.useState(_getInitialHashLocation());\n  React.useEffect( () => {\n    dispatch({type: \"mode\", content: modes[_getInitialHashLocation()]})\n  }, [])\n\n  const handleInfoOpen = () => { setOpen(true) }\n  const handleInfoClose = () => { setOpen(false) }\n\n  const toggleBright = () => {\n    const theme_flag = [...state.config.theme.flags]\n    theme_flag[0] = 1 - theme_flag[0]\n    theme_flag[1] = 1 - theme_flag[1]\n    dispatch({ type: \"config\", content: {\n      theme: state.config.theme.setFlags(theme_flag)\n    }})\n  }\n  const toggleFav = () => {\n    setFav(!showFav)\n  }\n\n  const [ showFav, setFav ] = React.useState(false)\n\n  return (\n    <main>\n      <Dialog open={open} onClose={handleInfoClose} >\n      <DialogContent dividers>\n        <Intro></Intro> \n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" onClick={handleInfoClose}>\n          Got it!\n        </Button>\n      </DialogActions>\n      </Dialog>\n\n      <TopBarView onChange={handleChange} value={value}\n        handleInfoOpen={handleInfoOpen} toggleBright={toggleBright} toggleFav={toggleFav}\n      />\n\n\n      <Box paddingY={2}>\n      <Container maxWidth={showFav ? \"lg\" : \"md\" }>\n\n      {\n      value === -1?\n      (\n      <Grid container className={classes.container} spacing={3}>\n        <Grid item md={12} sm={12} xs={12}>\n        <TabPanel value={value} index={4} className={classes.page}>\n          <PanoramaView {...{state, dispatch}} />\n        </TabPanel>\n        </Grid>\n      </Grid>\n      )\n      :\n      (\n      <Grid container className={classes.container} spacing={3}>\n        <Grid item hidden={!showFav} md={4} sm={4} xs={12} >\n        <FavListView {...{state, dispatch}} />\n        </Grid>\n\n        <Grid item md={showFav ? 8 : 12} sm={showFav ? 8 : 12} xs={12}>\n        <TabPanel value={value} index={0} className={classes.page}>\n          <AnalyzerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={1} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={2} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={3} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={4} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={5} className={classes.page}>\n          <CmllTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={6} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={7} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={8} className={classes.page}>\n          <TrackerView {...{state, dispatch}} />\n        </TabPanel>\n        </Grid>\n      </Grid>\n      )\n      }\n      </Container></Box>\n\n\n\n    </main>\n  )\n}\nexport default AppView","const version = \"1.6.0\"\n\nexport {version}","export default class Selector {\n    names: string[];\n    flags: number[];\n    kind: string;\n    label?: string;\n\n    constructor(config: {names: string[], flags: number[], kind: string, label?: string}) {\n        const { names, flags, kind, label } = config\n        this.names = names\n        this.flags = flags\n        this.kind = kind\n        this.label = label\n    }\n\n    getActiveNames() {\n        let ans = []\n        for (let i = 0; i < this.flags.length; i++) {\n            if (this.flags[i] === 1) {\n                ans.push(this.names[i])\n            }\n        }\n        return ans\n    }\n\n    getActiveName() {\n        for (let i = 0; i < this.flags.length; i++) {\n            if (this.flags[i] === 1) {\n                return (this.names[i])\n            }\n        }\n        return \"\"\n    }\n\n    setFlags(newFlags: number[]) {\n        const { names, kind, label } = this\n        return new Selector({names, flags: newFlags, kind, label})\n    }\n}","\nimport { Config, FavCase } from \"./Types\"\nimport Selector from './lib/Selector';\nimport { cmll_algs_raw } from './lib/Algs';\nexport const initialFavList : FavCase[] = []\n\nconst cmll_alg_names = cmll_algs_raw.map(x => x[0])\n\nexport const initialConfig : Config = (() => {\n    let arr_ori_flag = Array(24).fill(0)\n    arr_ori_flag[7] = 1 // YR\n    return {\n        showCube: new Selector({\n            label: \"Virtual Cube\",\n            names:[\"Show\", \"Hide\"],\n            flags: [1,0],\n            kind: \"virtual-cube\"\n        }),\n        theme: new Selector({\n            names: [\"bright\", \"dark\"],\n            flags: [1,0],\n            kind: \"theme\"\n        }),\n        evaluator: new Selector({\n            label: \"solution sorting metrics\",\n            names: [\"sequential\", \"two-gram\", \"QTM\", \"default\"],\n            flags: [1,0, 0, 0],\n            kind: \"evaluator\"\n        }),\n        cmllSelector: new Selector({\n            names: [\"o\", \"s\", \"as\", \"t\", \"l\", \"u\", \"pi\", \"h\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"cmll\",\n        }),\n        nmcllSelector: new Selector({\n            names: [\"o_1\", \"o_2\", \"s_1\", \"s_2\", \"s_3\", \"as_1\", \"as_2\", \"as_3\", \"t_1\", \"t_2\", \"t_3\", \n                    \"l_1\", \"l_2\", \"l_3\", \"u_1\", \"u_2\", \"u_3\", \"pi_1\", \"pi_2\", \"pi_3\", \"h_1\", \"h_2\", \"h_3\"],\n            flags: Array(23).fill(1),\n            kind: \"nmcll\",\n        }),\n        cmllCaseSelector: new Selector({\n            names: cmll_alg_names,\n            flags: Array(cmll_alg_names.length).fill(1),\n            kind: \"cmll_case\"\n        }),\n        cmllAufSelector: new Selector({\n            names: [\"None\", \"U\", \"U'\", \"U2\"],\n            flags: [1, 1, 1, 1],\n            kind: \"u_auf\"\n        }),\n        cmllCubeMaskSelector: new Selector({\n            names: [\"Show\", \"Hide\", \"Hide LSE\"],\n            flags: [1, 0, 0],\n            kind: \"cube_mask\"\n        }),\n        triggerSelector: new Selector({\n            names: [\"RUR'\", \"RU'R'\", \"R'U'R\", \"R'UR\", \"RU2R'\", \"R'U2R\"],\n            flags: [0, 0, 0, 0, 0, 0],\n            kind: \"trigger\"\n        }),\n        hyperOriSelector: new Selector({\n            names: [\"off\", \"L/R\", \"F/B\"],\n            flags: [1 ,0, 0],\n            kind: \"hyperori\"\n        }),\n        orientationSelector: new Selector({\n            label: \"Color Scheme (U-F)\",\n            names: [\n                \"WG\", \"WB\", \"WO\", \"WR\",\n                \"YG\", \"YB\", \"YO\", \"YR\",\n                \"BW\", \"BY\", \"BO\", \"BR\",\n                \"GW\", \"GY\", \"GO\", \"GR\",\n                \"OW\", \"OY\", \"OB\", \"OG\",\n                \"RW\", \"RY\", \"RB\", \"RG\",\n            ],\n            flags: arr_ori_flag,\n            kind: \"orientation\"\n        }),\n        fbdrSelector: new Selector({\n            label: \"Position of square\",\n            names: [\"FS at back\", \"FS at front\", \"Either\"],\n            flags: [1, 0, 0],\n            kind: \"fbdr\"\n        }),\n        fbdrScrambleSelector: new Selector({\n            label: \"Type of scramble\",\n            names: [\"Short (Concerning FBDR Pieces only)\", \"Random State (Entire cube, useful for practicing F2B)\"],\n            flags: [1, 0],\n            kind: \"fbdr-scramble\"\n        }),\n        fbOnlySelector: new Selector({\n            label: \"Pieces to solve\",\n            names: [\"FB Last Pair + DR\", \"FB Last Pair Only\"],\n            flags: [0, 1],\n            kind: \"fb-only\"\n        }),\n        fbPairSolvedSelector: new Selector({\n            label: \"Last Pair pattern\",\n            names: [\"Random\", \"Solved(FS at back only)\"],\n            flags: [1, 0],\n            kind: \"fb-pair-solved\"\n        }),\n        fbdrPosSelector1: new Selector({\n            label: \"Position of FB edge\",\n            names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n                    \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"fbdr-position-1\"\n        }),\n        fbdrPosSelector2: new Selector({\n            label: \"Position of FB edge\",\n            names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n                    \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"fbdr-position-2\"\n        }),\n        fbdrPosSelector3: new Selector({\n            label: \"Position of DR\",\n            names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n                    \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"fbdr-position-3\"\n        }),\n        fsSelector: new Selector({\n            label: \"Position of square\",\n            names: [\"Front FS\", \"Back FS\", \"Both\"],\n            flags: [0, 0, 1],\n            kind: \"fs\"\n        }),\n        ssSelector: new Selector({\n            label: \"Position of square\",\n            names: [\"SS at front\", \"SS at back\", \"Either\"],\n            flags: [1, 0, 0],\n            kind: \"ss\"\n        }),\n        ssEOSelector: new Selector({\n            label: \"Orientation of DR\",\n            names: [\"Oriented\", \"Misoriented\", \"Either\"],\n            flags: [1, 0, 0],\n            kind: \"ss-orientation\"\n        }),\n        ssPosSelector: new Selector({\n            label: \"Position of DR\",\n            names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n                    \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"ss-position\"\n        }),\n        ssPairOnlySelector: new Selector({\n            label: \"Solve w/wo DR\",\n            names: [\"SS\", \"SB First Pair\"],\n            flags: [1, 0],\n            kind: \"sb-pair-only\"\n        }),\n        solutionNumSelector: new Selector({\n            label: \"Number of solutions\",\n            names: [\"1\", \"3\", \"5\", \"10\", \"25\"],\n            flags: [0, 0, 1, 0, 0],\n            kind: \"solution-num\"\n        }),\n        fbPieceSolvedSelector: new Selector({\n            label: \"Difficulty\",\n            names: [\"Hard over x2y(Scramble only)\", \"Hard\", \"DL Solved\", \"BL Solved\", \"Random\"],\n            flags: [1, 0, 0, 0, 0],\n            kind: \"fb-piece-solved\"\n        }),\n        fbssLpSelector: new Selector({\n            label: \"fbss-lp\",\n            names: [\"FBLP at front\", \"FBLP at back\"],\n            flags: [1, 0],\n            kind: \"fbss\"\n        }),\n        fbssSsSelector: new Selector({\n            label: \"fbss-ss\",\n            names: [\"SS at front\", \"SS at back\"],\n            flags: [1, 0],\n            kind: \"fbss\"\n        }),\n        lseMCSelector: new Selector({\n            label: \"Center\",\n            names: [\"Aligned\", \"Misaligned\"],\n            flags: [0, 1],\n            kind: \"lse-mc\"\n        }),\n        lseBarSelector: new Selector({\n            label: \"EO Pair\",\n            names: [\"ULUR\", \"UFUB\"],\n            flags: [1, 0],\n            kind: \"lse-bar\"\n        }),\n        lseStageSelector: new Selector({\n            label: \"Stage\",\n            names: [\"4b for MC(1 move EOPair insert)\", \"M2 to 4c\", \"4c\"],\n            flags: [0, 1, 0],\n            kind: \"lse-stage\"\n        }),\n        lseEOSelector: new Selector({\n            label: \"EO\",\n            names: [\"solved\", \"arrow\", \"4/0\", \"2o/0\", \"2a/0\", \"1/1\", \"6flip\", \"2o/2\", \"0/2\", \"2a/2\"],\n            flags: [0, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"lse-eo\"\n        }),\n        lseEOLRMCSelector: new Selector({\n            label: \"Center strategy\",\n            names: [\"Non MC only\", \"MC only\", \"Combined\",\"Filter by Non-MC shorter\",  \"Filter by MC shorter\", ],\n            flags: [0, 0, 1, 0, 0],\n            kind: \"lse-eolrmc\"\n        }),\n        lseBarbieSelector: new Selector({\n            label: \"EOLR / EOLRb\",\n            names: [\"EOLR\", \"EOLRb\"],\n            flags: [1, 0],\n            kind: \"lse-barbie\"\n        }),\n        lseEOLRScrambleSelector: new Selector({\n            label: \"Type of scramble\",\n            names: [\"Short\", \"Random State\"],\n            flags: [0, 1],\n            kind: \"lse-eolr-scramble\"\n        })\n    }\n})()\n","import { Config, FavCase, Mode } from \"../Types\"\nimport { version } from \"../Version\"\nimport { initialConfig, initialFavList } from \"../InitialConfig\"\nimport Selector from '../lib/Selector';\n\nexport type FavCaseStore = {mode: Mode, setup: string, solver: string }\nlet favListManager = function() {\n    const key = \"fav\"\n    let cache : FavCase[] | null = null\n    let getFavList = () => {\n        if (cache) return cache\n        const item = window.localStorage.getItem(key)\n        const item1 : FavCaseStore[] = item ? JSON.parse(item) : initialFavList\n        const item2 : FavCase[] = item1.map( ({mode, setup, solver}) => ({mode, setup, solver: solver.trim().split(\"|\")}) );\n        return item2\n    }\n    let setFavList = (item : FavCase[]) => {\n        const item1 : FavCaseStore[] = item.map(({mode, setup, solver}) => ({mode, setup, solver: solver.join(\"|\")}) );\n        window.localStorage.setItem(key, JSON.stringify(item1));\n        cache = item\n    }\n    return {\n        getFavList,\n        setFavList\n    }\n}()\n\nlet serializeConfig = (config : Config) => {\n    return JSON.stringify(config)\n}\n\nlet deserializeConfig = (s: string) => {\n    const obj = JSON.parse(s)\n    return Object.fromEntries(Object.entries(obj).map( \n        ([k, v]) => [k, new Selector(v as Selector)] ) )\n}\n\nlet configManager = function() {\n    const key = \"config\"\n    const versionKey = \"version\"\n    let cache : Config | null = null\n\n    let getConfig = () => {\n        if (cache) {\n            return cache\n        }\n        const item = window.localStorage.getItem(key);\n        const vers = window.localStorage.getItem(versionKey)\n\n        const item1 : Partial<Config> = item ? deserializeConfig(item) : initialConfig\n\n        if ( vers !== version) {\n            // version out of date\n            // let's preserve orientation\n            let config = initialConfig\n            if (item1.orientationSelector) {\n                config = {...initialConfig, orientationSelector: new Selector(item1.orientationSelector) }\n            }\n            window.localStorage.setItem(key, serializeConfig(config));\n            window.localStorage.setItem(versionKey, version)\n\n            return config\n        }\n\n        // If current value is uninitialized we'll initialize it\n        if ( (item1 === null) || (item1 === undefined) || Object.keys(item1).length === 0) {\n            window.localStorage.setItem(key, serializeConfig(initialConfig));\n            return initialConfig\n        }\n        // sometimes we want to append new fields without changing the version. this code handles that.\n        if (Object.keys(item1).length < Object.keys(initialConfig).length) {\n            const item2 = {...initialConfig, ...item1}\n            window.localStorage.setItem(key, serializeConfig(item2));\n            return item2\n        }\n        console.log(\"config = \", item1)\n\n        cache = item1 as Config\n        return cache\n    }\n\n    let setConfig = (partial: Partial<Config>) => {\n        let newConfig : Config = Object.assign(getConfig(), partial)\n        window.localStorage.setItem(key, serializeConfig(newConfig));\n        cache = newConfig\n    }\n\n    return {\n        getConfig,\n        setConfig\n    }\n}()\n\nlet getConfig = configManager.getConfig\nlet setConfig = configManager.setConfig\nlet getFavList = favListManager.getFavList\nlet setFavList = favListManager.setFavList\n\nexport {\n    getConfig, setConfig, getFavList, setFavList\n}\n","import { AppState, Config, FavCase } from \"../Types\";\n/* State Manager\n * \"Passively\" updates localstorage in reduce.\n * Action types\n *  - move: respond to cube move\n *  - replay: replay case\n *  - reactToConfig: respond to changes in config\n */\nexport abstract class AbstractStateM {\n    state: AppState;\n    constructor(state: AppState) {\n        this.state = state;\n    }\n    /* when new moves arrive (from virtual cube control) */\n    abstract onMove(s: string): AppState;\n    /* when global config changes */\n    abstract onConfig(conf: Config): AppState;\n    /* when user clicks a button or presses a key */\n    abstract onControl(s: string): AppState;\n    /* when user replays an item from the favlist */\n    onReplay(case_: FavCase): AppState {\n        return this.state;\n    }\n}\n\nexport class StateFactory {\n    static create = (state: AppState) => {\n        let filler = ( (()=>1) as unknown ) as (state: AppState) => AbstractStateM;\n        return filler(state);\n    }\n}","import { AppState, Config, FavCase } from \"../Types\";\nimport { alg_generator_from_group, CaseDesc } from \"../lib/Algs\";\nimport { Face, Typ, FBpairPos } from \"../lib/Defs\";\nimport { CubieCube, CubeUtil, Mask, FaceletCube, MoveSeq } from '../lib/CubeLib';\nimport { Evaluator, getEvaluator } from \"../lib/Evaluator\";\nimport { CachedSolver } from \"../lib/CachedSolver\";\nimport { rand_choice, arrayEqual } from '../lib/Math';\nimport { AbstractStateM, StateFactory } from \"./AbstractStateM\";\n\nexport abstract class BlockTrainerStateM extends AbstractStateM {\n    abstract solverL: number;\n    abstract solverR: number;\n    scrambleMargin: number = 1;\n    scrambleCount: number = 1;\n    algDescWithMoveCount: string = \"\";\n    expansionFactor = 5;\n    premoves: string[] = [\"\"];\n    orientations: string[] = [\"\"];\n    evaluator : Evaluator;\n\n    abstract getRandom(): [CubieCube, string[]] | [CubieCube, string[], string];\n    constructor(state: AppState) {\n        super(state)\n        let evalName = this.state.config.evaluator.getActiveName()\n        this.evaluator = getEvaluator(evalName)\n    }\n    _solve_with_solvers(cube: CubieCube, solverNames: string[]): CaseDesc[]{\n        const state = this.state;\n        const totalSolutionCap = 0 | (+(state.config.solutionNumSelector.getActiveName() || 5) * this.expansionFactor);\n        const selectedSolutionCap = +(state.config.solutionNumSelector.getActiveName() || 5);\n        let getDesc = (solverName: string) => {\n            const solver = CachedSolver.get(solverName);\n            const premoves = this.premoves || [\"\"]\n            let solutions = premoves.map(pm =>\n                solver\n                .solve(cube.apply(pm), 0, this.solverR, totalSolutionCap)\n                .map(sol => ({pre: pm, sol: sol, score: this.evaluator.evaluate(sol)}) )).flat()\n            solutions.sort((a, b) => a.score - b.score);\n            const toString = (sol: any) =>\n                (sol.pre === \"\" ? \"\" : \"(\" + sol.pre + \") \") + sol.sol.toString(this.algDescWithMoveCount);\n            const algs = solutions.slice(0, selectedSolutionCap).map(toString);\n            let algdesc: CaseDesc = {\n                id: `${solverName}`,\n                algs,\n                kind: `${solverName}`\n            }\n            return algdesc\n        }\n        return solverNames.map(getDesc)\n    }\n\n    _solve(cube: CubieCube, solverNames: string[], options?: {\n        updateSolutionOnly?: boolean, scrambleSolver?: string,\n        scramble?: string,\n    }) {\n        const state = this.state;\n        options = options || {}\n        let algDescs = this._solve_with_solvers(cube, solverNames);\n        const scrambleMargin = 1;\n        let setup : string\n        if (options.scramble) {\n            setup = options.scramble\n        } else if (options.updateSolutionOnly) {\n            setup = this.state.case.desc[0]!.setup!\n        } else {\n            const scramble = options.scrambleSolver === \"min2phase\"?\n            CachedSolver.get(\"min2phase\").solve(cube,0,0,0)[0].inv() :\n            (()=>{\n            const solutionLength = new MoveSeq(algDescs[0].algs[0]).remove_setup().moves.length;\n            return rand_choice(\n                CachedSolver.get(options.scrambleSolver || solverNames[0])\n                .solve(cube, Math.max(this.solverL, solutionLength + scrambleMargin),\n                    this.solverR, this.scrambleCount || 1)).inv()\n            })()\n            setup = scramble.toString()\n        }\n        if (algDescs.length === 0) {\n            algDescs = [{\n                id: `min2phase`,\n                algs: [],\n                setup,\n                kind: `min2phase`\n            }];\n        } else {\n            // populate setup into setup\n            algDescs.forEach(algDesc => algDesc.setup = setup);\n        }\n\n        const ori = (options.updateSolutionOnly) ? this.state.cube.ori : alg_generator_from_group(state.config.orientationSelector)().id;\n        const name = options.updateSolutionOnly ? this.state.name : \"hiding\";\n        // console.log(\"algdesc\", algdesc)\n        return {\n            ...state,\n            name: name,\n            cube: {\n                ...state.cube,\n                state: cube,\n                ori\n            },\n            case: {\n                state: new CubieCube().apply(setup),\n                desc: algDescs\n            }\n        };\n    }\n    _updateCase(): AppState {\n        let [cube, solverName, scrambleSolver] = this.getRandom();\n        let inputScramble : string | undefined = undefined\n        if (this.state.scrambleInput.length > 0) {\n            inputScramble = this.state.scrambleInput[0]\n            cube = new CubieCube().apply(inputScramble)\n        }\n        let state = this._solve(cube, solverName, {\n            updateSolutionOnly: false,\n            scrambleSolver,\n            scramble: inputScramble\n        });\n        if (inputScramble) {\n            state = {...state, \n                scrambleInput: state.scrambleInput.slice(1)\n            }\n        }\n        return state\n    }\n    _updateCap(): AppState {\n        const state = this.state;\n        if (state.case.desc.length === 0) {\n            return state;\n        }\n        const [cube, solverNames] = [state.cube.state, state.case.desc!.map(x => x.kind)];\n        return this._solve(cube, solverNames, {\n            updateSolutionOnly:true\n        });\n    }\n    onReplay(case_: FavCase): AppState {\n        const cube = new CubieCube().apply(case_.setup)\n        const state1 = this._solve(cube, case_.solver, {scramble: case_.setup});\n        return {\n            ...state1,\n            mode: case_.mode\n        };\n    }\n    onControl(s: string): AppState {\n        let state = this.state;\n        if (s === \"#space\") {\n            if (state.name === \"revealed\") {\n                return this._updateCase();\n            }\n            else {\n                return {\n                    ...state,\n                    name: \"revealed\"\n                };\n            }\n        }\n        else if (s === \"#enter\") {\n            return {\n                ...state,\n                cube: {\n                    ...state.cube,\n                    state: state.case.state,\n                }\n            };\n        }\n        else {\n            return state;\n        }\n    }\n    onMove(movestr: string): AppState {\n        let state = this.state;\n        let move = new MoveSeq(movestr);\n        let cube = state.cube.state.apply(move);\n        return {\n            ...state,\n            cube: {\n                ...state.cube,\n                state: cube\n            }\n        };\n    }\n    onConfig(conf: Config): AppState {\n        // see if solution cap changed\n        let changed = !arrayEqual(this.state.config.solutionNumSelector.flags, conf.solutionNumSelector.flags);\n        if (changed) {\n            return (StateFactory.create({ ...this.state, config: conf }) as BlockTrainerStateM)._updateCap();\n        }\n        else {\n            return this.state;\n        }\n    }\n}\n// const m_premove = [[], Move.all[\"M\"], Move.all[\"M'\"], Move.all[\"M2\"]];\nexport class FbdrStateM extends BlockTrainerStateM {\n    solverL = 8;\n    solverR = 10;\n    _get_pair_solved_front() {\n        let [cp, co, ep, eo] = rand_choice(FBpairPos);\n        //let mask = Mask.copy(Mask.fs_front_mask)\n        let cube = CubeUtil.get_random_with_mask(Mask.fs_back_mask);\n        for (let i = 0; i < 8; i++) {\n            if (cube.cp[i] === 4) {\n                cube.cp[i] = cube.cp[cp];\n                cube.co[i] = cube.co[cp];\n                cube.cp[cp] = 4;\n                cube.co[cp] = co;\n            }\n        }\n        for (let i = 0; i < 12; i++) {\n            if (cube.ep[i] === 8) {\n                cube.ep[i] = cube.ep[ep];\n                cube.eo[i] = cube.eo[ep];\n                cube.ep[ep] = 8;\n                cube.eo[ep] = eo;\n            }\n        }\n        return cube;\n    }\n    _edge_piece_in_pattern(cube: CubieCube, idx: number, pattern: [number, number][]) {\n        let dr_ep = cube.ep.indexOf(idx);\n        let dr_eo = cube.eo[dr_ep];\n        let good = (pattern.find( ([eo, ep]) => (eo === dr_eo) && (ep === dr_ep)))\n        return good\n    }\n    _get_random_fs_back() {\n        let cube = CubeUtil.get_random_with_mask(Mask.fs_back_mask);\n        for (let i = 0; i < 1000; i++) {\n            if (this._edge_piece_in_pattern(cube, 7, this.allowed_dr) &&\n                this._edge_piece_in_pattern(cube, 8, this.allowed_pedge)) break;\n            cube = CubeUtil.get_random_with_mask(Mask.fs_back_mask);\n        }\n        return cube;\n        //return CubieCube.apply(cube, rand_choice(m_premove));\n    }\n    _get_random_fs_front() {\n        let cube = CubeUtil.get_random_with_mask(Mask.fs_front_mask);\n        for (let i = 0; i < 1000; i++) {\n            if (this._edge_piece_in_pattern(cube, 7, this.allowed_dr) &&\n                this._edge_piece_in_pattern(cube, 9, this.allowed_pedge)) break;\n            cube = CubeUtil.get_random_with_mask(Mask.fs_front_mask);\n        }\n        return cube;;\n        //return CubieCube.apply(cube, rand_choice(m_premove));\n    }\n    edgePositionMap : [number, number][] = [\n        [0, 0], [1, 0],\n        [0, 1], [1, 1],\n        [0, 2], [1, 2],\n        [0, 3], [1, 3],\n        [0, 4], [1, 4],\n        [0, 6], [1, 6],\n        [0, 7], [1, 7],\n        [0, 10], [1, 10],\n        [0, 11], [1, 11]\n    ]\n    allowed_pedge : [number, number][] = []\n    allowed_dr : [number, number][] = []\n    getRandom(): [CubieCube, string[], string] {\n        const fbOnly = this.state.config.fbOnlySelector.getActiveName() === \"FB Last Pair Only\";\n        const pairSolved = this.state.config.fbPairSolvedSelector.getActiveName() !== \"Random\";\n        const scrambleType = this.state.config.fbdrScrambleSelector.getActiveName() || \"Short\";\n        const useMin2PhaseScramble = !scrambleType.startsWith(\"Short\");\n        const solverName = fbOnly ? \"fb\" : \"fbdr\";\n        const scrambleSolver = useMin2PhaseScramble ? \"min2phase\" : solverName\n        let active = this.state.config.fbdrSelector.getActiveNames()[0];\n        //console.log(\"active\", active)\n        this.allowed_pedge = this.state.config.fbdrPosSelector1.flags.map( (value, i) => [value, i])\n            .filter( ([value, i]) => value ).map( ([value, i]) => this.edgePositionMap[i] )\n        this.allowed_dr = this.state.config.fbdrPosSelector3.flags.map( (value, i) => [value, i])\n            .filter( ([value, i]) => value ).map( ([value, i]) => this.edgePositionMap[i] )\n\n        // decide which random scramble generator to use. but prioritize use input if there's any\n        \n        if (active === \"FS at back\") {\n            if (pairSolved)\n                return [this._get_pair_solved_front(), [solverName], scrambleSolver];\n            else\n                return [this._get_random_fs_back(), [solverName], scrambleSolver];\n        }\n        else if (active === \"FS at front\") {\n            return [this._get_random_fs_front(), [solverName], scrambleSolver];\n        }\n        else\n            return [ rand_choice([ () => this._get_random_fs_back(), () => this._get_random_fs_front()])(),\n                [solverName], scrambleSolver];\n    }\n}\nexport class SsStateM extends BlockTrainerStateM {\n    solverL = 9;\n    solverR = 10;\n    _get_random_fb(allowed_dr_eo_ep: [number, number][]) {\n        let active = this.state.config.ssPairOnlySelector.getActiveName();\n        let mask = (active === \"SS\") ? Mask.fb_mask : Mask.fbdr_mask;\n        let cube : CubieCube;\n        while (true) {\n            cube = CubeUtil.get_random_with_mask(mask);\n            if (active !== \"SS\") break;\n            let ep = cube.ep.indexOf(7);\n            let eo = cube.eo[ep];\n            if (allowed_dr_eo_ep.find( ([eo_, ep_]) => (eo === eo_) && (ep === ep_))) {\n                break\n            }\n        }\n        return cube\n    }\n    getRandom(): [CubieCube, string[] ] {\n        let active = this.state.config.ssSelector.getActiveNames()[0];\n        const drPositionMap : [number, number][] = [\n            [0, 0], [1, 0],\n            [0, 1], [1, 1],\n            [0, 2], [1, 2],\n            [0, 3], [1, 3],\n            [0, 4], [1, 4],\n            [0, 6], [1, 6],\n            [0, 7], [1, 7],\n            [0, 10], [1, 10],\n            [0, 11], [1, 11]\n        ]\n        let allowed_dr_eo_ep_patterns = this.state.config.ssPosSelector.flags.map( (value, i) => [value, i])\n            .filter( ([value, i]) => value ).map( ([value, i]) => drPositionMap[i] )\n        let cube = this._get_random_fb(allowed_dr_eo_ep_patterns);\n        let solver;\n        if (active === \"SS at front\") {\n            solver = \"ss-front\";\n        }\n        else if (active === \"SS at back\") {\n            solver = \"ss-back\";\n        }\n        else {\n            solver = rand_choice([\"ss-back\", \"ss-front\"]);\n        }\n        return [cube, [solver] ];\n    }\n}\nexport class FbStateM extends BlockTrainerStateM {\n    solverL: number = 9;\n    solverR: number = 11;\n    //premoves = [\"\", \"x\", \"x'\", \"x2\"];\n    premoves = [\"\", \"x\", \"x'\", \"x2\"];\n\n    _find_center_connected_edges(cube: CubieCube, is_l_only: boolean) {\n        let centers = is_l_only ? [ Face.L ] : [ Face.F, Face.B, Face.L, Face.R]\n        let edges = CubeUtil.stickers.filter(c => c[2] === Typ.E && centers.includes(c[3])\n            && FaceletCube.color_of_sticker(cube, [c[0], c[1], c[2]]) === c[3]);\n        return edges;\n    }\n    _get_random(): [CubieCube, string] {\n        let active = this.state.config.fbPieceSolvedSelector.getActiveName();\n        let mask;\n        if (active === \"Random\")\n            mask = Mask.empty_mask;\n        else if (active === \"DL Solved\")\n            mask = Mask.dl_solved_mask;\n        else if (active === \"BL Solved\")\n            mask = Mask.bl_solved_mask;\n        else if (active === \"Zhouheng Variant\")\n            mask = Mask.zhouheng_mask;\n        else\n            mask = Mask.empty_mask;\n        let cube = CubeUtil.get_random_with_mask(mask);\n\n        let solver = \"fb\";\n        if (active === \"Zhouheng Variant\") {\n            // B F'\n            cube = cube.apply(\"B F'\");\n            solver = \"fbdr\";\n        }\n        const hard_str = \"Hard\";\n        const g_hard_str = \"Hard over x2y(Scramble only)\"\n        if (active === g_hard_str) {\n            solver = \"min2phase\";\n        }\n        if (active !== hard_str && active !== g_hard_str) {\n            return [cube, solver];\n        }\n        let n = 0;\n        let is_l_only = active === hard_str\n        while (true) {\n            let pairs = CubeUtil.find_pairs(cube);\n            let cc_edges = this._find_center_connected_edges(cube, is_l_only);\n            n++;\n            if (pairs.length === 0 && cc_edges.length === 0) {\n                console.log(\"Successful after \" + n + \" tries \");\n                return [cube, solver];\n            }\n            cube = CubeUtil.get_random_with_mask(Mask.empty_mask);\n        }\n    }\n    getRandom() : [CubieCube, string[], string]{\n        let [cube, solver] = this._get_random();\n        return [cube, solver === \"min2phase\" ? [] : [solver], solver ];\n    }\n}\n\n\nexport class FsStateM extends BlockTrainerStateM {\n    solverL = 7;\n    solverR = 11;\n    premoves = [\"\", \"x\", \"x'\", \"x2\"];\n\n    getRandom(): [CubieCube, string[], string] {\n        let cube = CubeUtil.get_random_with_mask(Mask.empty_mask);\n        let name = this.state.config.fsSelector.getActiveName()\n        if (name === \"Front FS\") {\n            return [cube, [\"fs-front\"], \"fb\"]\n        } else if (name === \"Back FS\") {\n            return [cube, [\"fs-back\"], \"fb\"]\n        } else {\n            return [cube, [\"fs-front\", \"fs-back\"], \"fb\" ];\n        }\n    }\n}\n\n\nexport class FbssStateM extends BlockTrainerStateM {\n    solverL = 6;\n    solverR = 10;\n\n    getRandom(): [CubieCube, string[] ] {\n        let active_lp = this.state.config.fbssLpSelector.getActiveName()\n        let active_ss = this.state.config.fbssSsSelector.getActiveName()\n        let cube, solver\n        if (active_lp === \"FBLP at front\") {\n            cube = CubeUtil.get_random_with_mask(Mask.fs_back_mask)\n        } else {\n            cube = CubeUtil.get_random_with_mask(Mask.fs_front_mask)\n        }\n        if (active_ss === \"SS at front\") {\n            solver = \"fbss-front\";\n        } else {\n            solver = \"fbss-back\";\n        }\n        return [cube, [solver] ];\n    }\n}","\nimport { BlockTrainerStateM } from \"./BlockTrainerStateM\";\nimport { Mask, CubeUtil, CubieCube, Move } from \"../lib/CubeLib\";\nimport { rand_choice } from \"../lib/Math\";\nimport { CachedSolver } from \"../lib/CachedSolver\";\n\nexport class LSEStateM extends BlockTrainerStateM {\n    solverL = 5;\n    solverR = 20;\n    scrambleCount = 3;\n    algDescWithMoveCount = \"STM\";\n    getRandom(): [CubieCube, string[]] {\n        /*\n        LSE Modes:\n        pure 4c (UFUB/ULUR, MC/NC)\n        M2 to 4c (same as above)\n        */\n\n        let bars = this.state.config.lseBarSelector.getActiveName()\n\n        let cube = CubeUtil.get_random_with_mask(Mask.lse_4c_mask);\n\n        let move = new Move().from_cube(cube, \"\")\n\n        if (bars === \"UFUB\") {\n            cube = new CubieCube().apply(rand_choice([\"U\", \"U\"])).apply(move)\n        } else {\n            cube = new CubieCube().apply(move)\n        }\n\n        let is_mc = this.state.config.lseMCSelector.getActiveName() === \"Misaligned\";\n        let lse_premove = is_mc ? [Move.all[\"M\"], Move.all[\"M'\"]] : [ [], Move.all[\"M2\"] ]\n        cube = cube.apply(rand_choice(lse_premove))\n\n        let stage = this.state.config.lseStageSelector.getActiveName()\n        if (stage === \"M2 to 4c\")  {\n            cube = cube.apply(rand_choice([\"U M2\", \"U' M2\"])).apply(rand_choice([\"U\", \"U'\", \"U2\", \"id\"]))\n            return [cube, [\"lse\"]];\n        } else if (stage.startsWith(\"4b for MC\")) {\n            cube = cube.apply(rand_choice([\"U M2\", \"U' M2\"])).apply(rand_choice([\"U\", \"U'\", \"U2\", \"id\"]))\n            cube = cube.apply(rand_choice([\"M\", \"M'\"]))\n            cube = cube.apply(rand_choice([\"U\", \"U'\", \"U2\", \"id\"]))\n            return [cube, [\"lse\"]];\n        } else {\n            return [cube, [\"lse\"]];\n        }\n    }\n}\n\nconst lseEODef = [\n    {kind: \"solved\", eo: [0,0,0,0,0,0]},\n    {kind: \"arrow\", eo: [1,1,0,1,1,0]},\n    {kind: \"arrow\", eo: [0,1,1,1,0,1]},\n    {kind: \"4/0\", eo: [1,1,1,1,0,0]},\n    {kind: \"2o/0\", eo: [1,0,1,0,0,0]},\n    {kind: \"2a/0\", eo: [1,1,0,0,0,0]},\n    {kind: \"1/1\", eo: [1,0,0,0,0,1]},\n    {kind: \"1/1\", eo: [0,0,1,0,1,0]},\n    {kind: \"6flip\", eo: [1,1,1,1,1,1]},\n    {kind: \"2o/2\", eo: [0,1,0,1,1,1]},\n    {kind: \"0/2\", eo: [0,0,0,0,1,1]},\n    {kind: \"2a/2\", eo: [0,1,1,0,1,1]},\n]\nconst lseEODefLookup = function() {\n    let map = Object.assign({});\n    lseEODef.forEach( (def) => {\n        map[def.eo.toString()] = def.kind\n    })\n    return map\n}();\n\nexport class EOLRStateM extends BlockTrainerStateM {\n    solverL = 5;\n    solverR = 20;\n    scrambleCount = 3;\n    algDescWithMoveCount = \"STM\";\n\n    _getEOType(cube: CubieCube) {\n        for (let i = 0; i < 4; i++) {\n            let eo_arr = cube.eo.slice(0, 5)\n            eo_arr.push(cube.eo[6])\n            let eo = (lseEODefLookup[eo_arr.toString()])\n            if (eo) {\n\n                console.log(eo, eo_arr)\n                return eo;\n            }\n            cube = cube.apply(\"U\")\n        }\n        return \"Error\"\n    }\n\n    getRandom(): [CubieCube, string[], string] {\n        /*\n        LSE Modes:\n        pure 4c (UFUB/ULUR, MC/NC)\n        M2 to 4c (same as above)\n        */\n\n        let targetEO = rand_choice(this.state.config.lseEOSelector.getActiveNames())\n\n        let cube: CubieCube\n        let count = 0;\n        let eolrMCMode = this.state.config.lseEOLRMCSelector.getActiveName()\n        let compare = eolrMCMode === \"Filter by Non-MC shorter\" || eolrMCMode === \"Filter by MC shorter\"\n        let useBarbie = this.state.config.lseBarbieSelector.getActiveName() === \"EOLRb\"\n        let useFullScramble = this.state.config.lseEOLRScrambleSelector.getActiveName() === \"Random State\"\n\n        while (true) {\n            cube = CubeUtil.get_random_with_mask(Mask.lse_mask);\n            cube = cube.apply(rand_choice([\"id\", \"M2\"]))\n            console.log(\"targetEO\", targetEO)\n\n            if (count++ > 1000) {\n                console.log(\"something wrong\")\n                break\n            }\n\n            if (this._getEOType(cube) !== targetEO)\n                continue\n            if (compare) {\n                let acSolver = useBarbie ? \"eolrac-b\" : \"eolrac\"\n                let mcSolver = useBarbie ? \"eolrmc-b\" : \"eolrmc\"\n                let acLength = CachedSolver.get(acSolver).solve(cube, 0, 20, 1)[0].moves.length\n                let mcLength = CachedSolver.get(mcSolver).solve(cube, 0, 20, 1)[0].moves.length\n                if ( eolrMCMode === \"Filter by Non-MC shorter\" && acLength > mcLength ) continue\n                if ( eolrMCMode === \"Filter by MC shorter\" && mcLength > acLength ) continue\n            }\n            break\n        }\n\n        const ss = useFullScramble? \"lse\" : \"lse-ab4c\";\n        switch (eolrMCMode) {\n            case \"Non MC only\": return [cube, useBarbie ? [\"eolrac-b\"] : [\"eolrac\"], ss];\n            case \"MC only\": return [cube, useBarbie ? [\"eolrmc-b\"] : [\"eolrmc\"], ss];\n            case \"Combined\": return [cube, useBarbie ? [\"eolr-b\"] : [\"eolr\"], ss];\n            case \"Filter by Non-MC shorter\":\n            case \"Filter by MC shorter\": return [cube, useBarbie ? [\"eolr-b\"] : [\"eolr\"], ss];\n            default: return [cube, [\"eolr\"], ss];\n        }\n    }\n}\n","import { AppState, StateT, Config } from \"../Types\";\nimport { alg_generator_from_group, alg_generator_from_cases, CaseDesc, createAlg, cmll_algs_raw, nmcll_to_cmll_mapping } from \"../lib/Algs\";\nimport { CubieCube, Move, CubeUtil, MoveSeq } from '../lib/CubeLib';\nimport { AbstractStateM } from \"./AbstractStateM\";\nimport {initialize as min2phase_init, solve as min2phase_solve} from \"../lib/min2phase/min2phase-wrapper\"\nimport { arrayEqual } from \"../lib/Math\";\n\nexport abstract class CmllStateM extends AbstractStateM {\n    _get2PhaseSolution(cube: CubieCube): CaseDesc {\n        // Aha! f = g(b) but you modified b later, and f won't update!\n\n        let m2_away = false\n        if (cube.tp[0] !== 0) {\n            m2_away = true\n            cube = cube.apply(\"M2\")\n        }\n        console.assert(arrayEqual(cube.tp, new CubieCube().tp))\n\n        const transformed_cube = cube.to_cstimer_cube()\n        console.assert( transformed_cube.is_solveable(), \"Cube must be solveable\")\n        min2phase_init();\n        let solution = min2phase_solve(transformed_cube);\n        if (m2_away) {\n            solution += \" M2\"\n        }\n        const algDesc: CaseDesc = createAlg(\"scramble\", solution, \"scramble\")\n        console.log(solution);\n        return algDesc;\n    }\n    _generateCase(): AppState {\n        let state = this.state;\n        let { config } = state;\n        let { cmllCaseSelector, triggerSelector, cmllAufSelector, orientationSelector, nmcllSelector, hyperOriSelector } = config;\n\n        let generator = (() => {\n            if (hyperOriSelector.getActiveName() === \"off\") {\n                return alg_generator_from_cases(cmllCaseSelector.kind, cmllCaseSelector.getActiveNames());\n            } else {\n                const lookup = Object.fromEntries(nmcll_to_cmll_mapping)\n                const activeNames = (nmcllSelector.getActiveNames().map(x => lookup[x]).flat())\n                return alg_generator_from_cases(nmcllSelector.kind, activeNames)\n            }\n        })();\n        let trig_generator = alg_generator_from_group(triggerSelector);\n        let u_auf_generator = alg_generator_from_group(cmllAufSelector);\n        let ori_generator = alg_generator_from_group(orientationSelector);\n        let trigger_alg: CaseDesc = trig_generator();\n        let cmll_alg: CaseDesc = generator();\n        let u_auf_alg: CaseDesc = u_auf_generator();\n        let alg_str = trigger_alg.algs + \" \" + u_auf_alg.algs + \" \" + cmll_alg.algs;\n        let moves: Move[] = new MoveSeq(alg_str).inv().moves;\n\n        let lse_cube: CubieCube\n        while (true) {\n            lse_cube = CubeUtil.get_random_lse().apply(moves)\n            if (lse_cube.is_solveable()) {\n                break;\n            }\n        }\n        let solution = this._get2PhaseSolution(lse_cube);\n        // ori based on ...?\n        let ori: string = ori_generator().id;\n        //console.log(\"current ori selector's ori \", ori)\n        return ({\n            ...state,\n            name: \"solving\",\n            cube: {\n                state: lse_cube,\n                ori,\n                history: [],\n            },\n            case: {\n                state: lse_cube,\n                desc: [trigger_alg, u_auf_alg, cmll_alg, solution]\n            },\n        });\n    }\n    onControl(s: string): AppState {\n        let state = this.state;\n        if (s === \"#space\") {\n            // SCRAMBLE\n            // enter cleared solving state based on selection\n            return this._generateCase();\n        }\n        else if (s === \"#enter\") {\n            // REDO\n            return ({\n                ...state,\n                name: \"solving\",\n                cube: {\n                    ...state.cube,\n                    state: state.case.state,\n                    history: []\n                },\n                case: {\n                    ...state.case,\n                }\n            });\n        }\n        else {\n            throw new Error(\"Unrecognized control code\");\n        }\n    }\n    onConfig(conf: Config): AppState {\n        return this.state;\n    }\n}\nexport class SolvingStateM extends CmllStateM {\n    onMove(move: string): AppState {\n        let state = this.state;\n        let moves = new MoveSeq(move).moves;\n        if (moves.length > 0) {\n            let move = moves[0];\n            let cube = state.cube.state.apply(move);\n            let cmll_solved = CubeUtil.is_cmll_solved(cube);\n            let newState: StateT = cmll_solved ? \"solved\" : \"solving\";\n            return ({\n                ...state,\n                cube: {\n                    ...state.cube,\n                    state: state.cube.state.apply(move),\n                    history: [...state.cube.history, move],\n                },\n                name: newState\n            });\n        }\n        else {\n            // Nothing to apply\n            return state;\n        }\n    }\n}\nexport class SolvedStateM extends CmllStateM {\n    onMove(move: string): AppState {\n        return this.state;\n    }\n}\n","import { StateFactory} from './AbstractStateM';\nimport { AppState, Mode } from '../Types';\nimport { FbdrStateM, SsStateM, FbStateM, FsStateM, FbssStateM} from './BlockTrainerStateM';\nimport { LSEStateM, EOLRStateM } from './LSETrainerStateM';\nimport { SolvingStateM, SolvedStateM } from './CmllStateM';\n\nStateFactory.create = function(state: AppState) {\n        let mode: Mode = state.mode;\n        switch (mode) {\n            case \"fbdr\":\n                return new FbdrStateM(state);\n            case \"ss\":\n                return new SsStateM(state);\n            case \"fbss\":\n                return new FbssStateM(state);\n            case \"fs\":\n                return new FsStateM(state);\n            case \"fb\":\n                return new FbStateM(state);\n            case \"cmll\": {\n                switch (state.name) {\n                    case \"solving\": return new SolvingStateM(state);\n                    case \"solved\": return new SolvedStateM(state);\n                    default: throw new Error(\"impossible\");\n                }\n            }\n            case \"4c\":\n                return new LSEStateM(state);\n            case \"eopair\":\n                return new EOLRStateM(state);\n            case \"experimental\":\n                return new FbStateM(state);\n            case \"analyzer\":\n                return new FbStateM(state)\n            case \"tracking\":\n                return new FbStateM(state)\n        }\n        ;\n    }\n\nexport { StateFactory };","import { Action } from \"./Types\";\n\nconst defaultKeyMapping : { [key: string]: string } = {\n    \"I\": \"R\",\n    \"K\": \"R'\",\n    \"W\": \"B\",\n    \"O\": \"B'\",\n    \"S\": \"D\",\n    \"L\": \"D'\",\n    \"D\": \"L\",\n    \"E\": \"L'\",\n    \"J\": \"U\",\n    \"F\": \"U'\",\n    \"H\": \"F\",\n    \"G\": \"F'\",\n    \";\": \"y\",\n    \"A\": \"y'\",\n    \"U\": \"r\",\n    \"R\": \"l'\",\n    \"M\": \"r'\",\n    \"V\": \"l\",\n    \"T\": \"x\",\n    \"Y\": \"x\",\n    \"N\": \"x'\",\n    \"B\": \"x'\",\n    \".\": \"M'\",\n    \"X\": \"M'\",\n    \"5\": \"M\",\n    \"6\": \"M\",\n    \"P\": \"z\",\n    \"Q\": \"z'\",\n    \"Z\": \"d\",\n    \"C\": \"u'\",\n    \",\": \"u\",\n    \"/\": \"d'\",\n    \"ENTER\": \"#enter\",\n    \" \": \"#space\",\n  }\n\n\nconst lseKeyMapping : { [key: string]: string } = {\n    \"I\": \"M'\",\n    \"E\": \"M'\",\n    \"K\": \"M\",\n    \"D\": \"M\",\n    \"J\": \"U\",\n    \"F\": \"U'\",\n    \"S\": \"E'\",\n    \"L\": \"E\",\n    \"ENTER\": \"#enter\",\n    \" \": \"#space\",\n  }\n\n\nexport abstract class KeyMapping {\n    abstract handle(evt: KeyboardEvent, dispatch: React.Dispatch<Action>) : void;\n}\n\nexport class DefaultKeyMapping extends KeyMapping {\n    handle(evt: KeyboardEvent, dispatch: React.Dispatch<Action>) {\n        // do nothing if modifier key is pressed\n        if (evt.altKey || evt.ctrlKey || evt.metaKey) return;\n        let key = evt.key.toUpperCase();\n        if (defaultKeyMapping.hasOwnProperty(key)) {\n            dispatch({\n              type: \"key\", content: defaultKeyMapping[key]\n            });\n        }\n    }\n}\n\nexport class LSEKeyMapping {\n    handle(evt: KeyboardEvent, dispatch: React.Dispatch<Action>) {\n        // do nothing if modifier key is pressed\n        if (evt.altKey || evt.ctrlKey || evt.metaKey) return;\n        let key = evt.key.toUpperCase();\n        if (lseKeyMapping.hasOwnProperty(key)) {\n            dispatch({\n              type: \"key\", content: lseKeyMapping[key]\n            });\n        }\n    }\n}","import { AppState, StateT, Mode } from \"../Types\";\nimport { CubieCube, ColorScheme } from '../lib/CubeLib';\nimport { getConfig, getFavList } from '../lib/LocalStorage';\nimport { DefaultKeyMapping, LSEKeyMapping } from \"../KeyMapping\";\n\n\nexport const getInitialState = (mode?: Mode): AppState => {\n    mode = mode || \"fbdr\";\n    let initialStateName: StateT = function () {\n        switch (mode) {\n            case \"cmll\": return \"solved\";\n            case \"fbdr\":\n            case \"ss\":\n            case \"fb\":\n            case \"4c\":\n            case \"eopair\":\n            case \"fbss\":\n            case \"fs\":\n                return \"revealed\";\n            case \"experimental\":\n                return \"revealed\";\n            case \"analyzer\":\n            case \"tracking\":\n                return \"revealed\"\n        }\n    }();\n    let ori = getConfig().orientationSelector.getActiveName() || \"YR\";\n    return {\n        name: initialStateName,\n        mode,\n        scrambleInput: [],\n        cube: {\n            state: new CubieCube(),\n            ori,\n            history: [],\n        },\n        case: {\n            state: new CubieCube(),\n            desc: []\n        },\n        config: getConfig(),\n        favList: getFavList(),\n        keyMapping: (mode === \"4c\" || mode === \"eopair\") ? new LSEKeyMapping() : new DefaultKeyMapping(),\n        colorScheme: new ColorScheme()\n    };\n};\n","\nimport { AppState, Action, Config, FavListAction } from \"../Types\"\nimport { setConfig, setFavList} from '../lib/LocalStorage';\nimport { StateFactory } from \"./StateFactory\";\nimport { arrayEqual } from \"../lib/Math\";\nimport { getInitialState } from \"./InitialState\";\n\nexport { getInitialState }\nfunction reduceByFavlist(state: AppState, action: FavListAction) {\n    let favList = state.favList;\n\n    switch (action.action) {\n        case \"add\":\n            favList = [...action.content, ...favList]\n            setFavList(favList)\n            break;\n        case \"remove\": {\n        // only remove one at a time for now\n            const rem = action.content[0]\n            favList = favList.filter((value) => {\n                return !(value.mode === rem.mode && value.setup === rem.setup && arrayEqual(value.solver, rem.solver))\n            })\n            setFavList(favList)\n            break;\n        };\n        case \"replay\": {\n            return StateFactory.create(state).onReplay(action.content[0])\n        }\n    }\n    return {\n        ...state,\n        favList\n    }\n}\n\nexport function reducer(state: AppState, action: Action): AppState {\n    // todo: cache values based on this\n    // console.log(\"prev state\", state)\n    switch (action.type) {\n        case \"key\": {\n            let newState = reduceByKey(state, action.content)\n            return newState\n        };\n        case \"config\": {\n            // LESSON: Object.assign is dangerous\n            let newConfig = {...state.config, ...action.content}\n\n            // enforce constraints across selectors\n            if (newConfig.fbPairSolvedSelector.flags[1] === 1) {\n                newConfig.fbdrSelector.flags = [1, 0, 0]\n            }\n            setConfig(newConfig)\n            let newState = reduceByConfig(state, newConfig)\n            return {\n                ...newState,\n                config: newConfig\n            }\n        };\n        case \"mode\": {\n            let mode = action.content\n            window.location.hash = mode\n            state = getInitialState(mode)\n            return state\n        };\n        case \"scrambleInput\":\n            return {\n                ...state,\n                scrambleInput: action.content\n            }\n        case \"favList\":\n            return reduceByFavlist(state, action)\n        case \"colorScheme\":\n            return {\n                ...state,\n                colorScheme: state.colorScheme.set(action.content)\n            }\n        case \"custom\":\n            return action.content(state)\n        default:\n            return state\n        }\n}\n\n\nfunction reduceByKey(state: AppState, code: string): AppState {\n    if (code === \"\") return state;\n\n    const stateM = StateFactory.create(state)\n    // case match on kind of operation\n    if (code[0] === \"#\") {\n        return stateM.onControl(code)\n    } else {\n        return stateM.onMove(code)\n    }\n}\nfunction reduceByConfig(state: AppState, conf: Config): AppState {\n    const stateM = StateFactory.create(state)\n    // case match on kind of operation\n    return stateM.onConfig(conf)\n}","import React from 'react'\nimport AppView from \"../components/AppView\"\nimport { reducer } from '../reducers/Reducer'\nimport { getInitialState } from \"../reducers/InitialState\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { theme, themeDark } from '../theme';\nimport \"typeface-roboto\";\nimport \"fontsource-public-sans\";\n\nwindow.addEventListener('keypress', function(e) {\n  if(e.keyCode === 32 && e.target === document.body) {\n    e.preventDefault();\n  }\n});\n\nfunction App(props: {}) {\n  const [state, dispatch] = React.useReducer( reducer, getInitialState() )\n\n  const appTheme = state.config.theme.getActiveName() === \"bright\" ? theme : themeDark\n  return (\n    <ThemeProvider theme={appTheme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <AppView state={state} dispatch={dispatch} />\n    </ThemeProvider>\n  )\n}\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root'),\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* eslint-disable */\nfunction createArray(length) {\n\tconst arr = Array(length);\n\tfor (var i=0; i<length; i++) {\n\t\tarr[i] = 0;\n\t}\n\treturn arr;\n}\n\nfunction createArrays(length1, length2) {\n\tconst arr = Array(length1);\n\tfor (var i=0; i<length1; i++) {\n\t\tarr[i] = Array(length2);\n\t\tfor (var j=0; j<length2; j++) {\n\t\t\tarr[i][j] = 0;\n\t\t}\n\t}\n\treturn arr;\n}\n\nfunction bitOdd(i) {\n\ti ^= i >>> 1;\n\ti ^= i >>> 2;\n\ti ^= i >>> 4;\n\ti ^= i >>> 8;\n\treturn i & 1;\n}\n\nfunction bitCount(i) {\n\ti = i - ((i >>> 1) & 0x55555555);\n\ti = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n\treturn (i + (i >>> 8) + (i >>> 4)) & 0x0f;\n}\n\nfunction get4Parity(idx) {\n\tvar p = 0;\n\tfor (var i=2; i>=0; i--) {\n\t\tp += idx % (4-i);\n\t\tidx = ~~(idx / (4-i));\n\t}\n\tp &= 1;\n\treturn p;\n}\n\nfunction get8Parity(idx) {\n\tvar p = 0;\n\tfor (var i=6; i>=0; i--) {\n\t\tp += idx % (8-i);\n\t\tidx = ~~(idx / (8-i));\n\t}\n\tp &= 1;\n\treturn p;\n}\n\nfunction get12Parity(idx) {\n\tvar p = 0;\n\tfor (var i=10; i>=0; i--) {\n\t\tp += idx % (12-i);\n\t\tidx = ~~(idx / (12-i));\n\t}\n\tp &= 1;\n\treturn p;\n}\n\n\nfunction binarySearch(arr, key) {\n\tvar length = arr.length;\n\tif (key <= arr[length-1]) {\n\t\tvar l = 0;\n\t\tvar r = length-1;\n\t\twhile (l <= r) {\n\t\t\tvar mid = (l+r)>>>1;\n\t\t\tvar val = arr[mid];\n\t\t\tif (key > val) {\n\t\t\t\tl = mid + 1;\n\t\t\t} else if (key < val) {\n\t\t\t\tr = mid - 1;\n\t\t\t} else {\n\t\t\t\treturn (mid);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0xffff;\n}\n\nvar fact = [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, 479001600];\nvar perm3 = [[11, 10, 9], [10, 11, 9], [11, 9, 10], [9, 11, 10], [10, 9, 11], [9, 10, 11]];\nvar ud2std = [0, 1, 2, 4, 7, 9, 10, 11, 13, 16];\nvar std2ud = createArray(18);\nvar Cnk = createArrays(12, 13);\nvar move2str = [\"U \", \"U2\", \"U'\", \"R \", \"R2\", \"R'\", \"F \", \"F2\", \"F'\", \"D \", \"D2\", \"D'\", \"L \", \"L2\", \"L'\", \"B \", \"B2\", \"B'\"];\nvar urfMove = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15,16,17], \n\t\t\t\t\t\t\t\t\t\t\t[6, 7, 8, 0, 1, 2, 3, 4, 5,15,16,17, 9,10,11,12,13,14],\n\t\t\t\t\t\t\t\t\t\t\t[3, 4, 5, 6, 7, 8, 0, 1, 2,12,13,14,15,16,17, 9,10,11],\n\t\t\t\t\t\t\t\t\t\t\t[2, 1, 0, 5, 4, 3, 8, 7, 6,11,10, 9,14,13,12,17,16,15], \n\t\t\t\t\t\t\t\t\t\t\t[8, 7, 6, 2, 1, 0, 5, 4, 3,17,16,15,11,10, 9,14,13,12],\n\t\t\t\t\t\t\t\t\t\t\t[5, 4, 3, 8, 7, 6, 2, 1, 0,14,13,12,17,16,15,11,10, 9]];\nfor (var i=0; i<12; i++) {\n\tCnk[i][0] = 1;\n\tCnk[i][i] = 1;\n\tCnk[i][i+1] = 0;\n\tfor (var j=1; j<i; j++) {\n\t\tCnk[i][j] = (Cnk[i-1][j-1] + Cnk[i-1][j]);\n\t}\n}\nfor (var i=0; i<10; i++) {\n\tstd2ud[ud2std[i]] = i;\n}\n\nvar ckmv = Array(19);//new boolean[19][18];\nvar ckmv2 = Array(11);//new boolean[11][10];\nckmv[18] = Array(18);\nckmv2[10] = Array(10);\nfor (var i=0; i<18; i++) {\n\tckmv[i] = Array(18);\n\tfor (var j=0; j<18; j++) {\n\t\tckmv[i][j] = (~~(i/3) == ~~(j/3)) || ((~~(i/3)%3 == ~~(j/3)%3) && (i>=j));\n\t}\n\tckmv[18][i] = false;\n}\nfor (var i=0; i<10; i++) {\n\tckmv2[i] = Array(10);\n\tfor (var j=0; j<10; j++) {\n\t\tckmv2[i][j] = ckmv[ud2std[i]][ud2std[j]];\n\t}\n\tckmv2[10][i] = false;\n}\n\n\n//********************************************************************************//\n\nfunction CubieCube() {\n\tthis.cp = [0, 1, 2, 3, 4, 5, 6, 7];\n\tthis.co = [0, 0, 0, 0, 0, 0, 0, 0];\n\tthis.ep = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\tthis.eo = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\tthis.getFlip = function getFlip() {\n\t\tvar idx = 0;\n\t\tfor (var i=0; i<11; i++) {\n\t\t\tidx |= this.eo[i] << i;\n\t\t}\n\t\treturn idx;\n\t}\n\t\n\tthis.getFlipSym = function getFlipSym() {\n\t\tif (FlipR2S != 0) {\n\t\t\treturn FlipR2S[this.getFlip()];\n\t\t}\n\t\tfor (var k=0; k<16; k+=2) {\n\t\t\tEdgeConjugate(this, SymInv[k], temps);\n\t\t\tvar idx = binarySearch(FlipS2R, temps.getFlip());\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 3) | (k >>> 1));\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tthis.setFlip = function setFlip(idx) {\n\t\tthis.eo[11] = bitOdd(idx);\n\t\tfor (var i=0; i<11; i++) {\n\t\t\tthis.eo[i] = idx & 1;\n\t\t\tidx >>>= 1;\n\t\t}\n\t}\n\t\n\tthis.getTwist = function getTwist() {\n\t\tvar idx = 0;\n\t\tfor (var i=0; i<7; i++) {\n\t\t\tidx *= 3;\n\t\t\tidx += this.co[i];\n\t\t}\n\t\treturn idx;\n\t}\n\t\n\tthis.getTwistSym = function getTwistSym() {\n\t\tif (TwistR2S != null) {\n\t\t\treturn TwistR2S[this.getTwist()];\n\t\t}\n\t\tfor (var k=0; k<16; k+=2) {\n\t\t\tCornConjugate(this, SymInv[k], temps);\n\t\t\tlet idx = binarySearch(TwistS2R, temps.getTwist());\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 3) | (k >>> 1));\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\n\tthis.setTwist = function setTwist(idx) {\n\t\tvar twst = 0;\n\t\tfor (var i=6; i>=0; i--) {\n\t\t\ttwst += this.co[i] = idx % 3;\n\t\t\tidx = ~~(idx/3);\n\t\t}\n\t\tthis.co[7] = (15 - twst) % 3;\n\t}\n\t\n\tthis.getUDSlice = function getUDSlice() {\n\t\tvar idx = 0;\n\t\tvar r = 4;\n\t\tfor (var i=0; i<12; i++) {\n\t\t\tif (this.ep[i] >= 8) {\n\t\t\t\tidx += Cnk[11-i][r];\n\t\t\t\tr--;\n\t\t\t}\n\t\t}\n\t\treturn idx;\n\t}\n\n\tthis.setUDSlice = function setUDSlice(idx) {\n\t\tvar r = 4;\n\t\tfor (var i=0; i<12; i++) {\n\t\t\tif (idx >= Cnk[11-i][r]) {\n\t\t\t\tidx -= Cnk[11-i][r];\n\t\t\t\tr--;\n\t\t\t\tthis.ep[i] = (11-r);\n\t\t\t} else {\n\t\t\t\tthis.ep[i] = (i+r-4);\n\t\t\t}\n\t\t}\n\t}\n\tthis.getMPerm = function getMPerm() {\n\t\tvar m = (1 << this.ep[11]);\t\t\n\t\tvar idx = 0;\n\t\tfor (var i=10; i>=8; --i) {\n\t\t\tvar t = 1 << this.ep[i];\n\t\t\tidx += bitCount(m & (t - 1)) * fact[11-i];\n\t\t\tm |= t;\n\t\t}\n\t\treturn idx;\n\t}\t\n\tthis.setMPerm = function setMPerm(idx) {\n\t\tthis.ep[11] = 8;\n\t\tfor (var i=10; i>=8; i--) {\n\t\t\tthis.ep[i] = (idx % (12-i) + 8);\n\t\t\tidx = ~~(idx / (12-i));\n\t\t\tfor (var j=i+1; j<12; j++) {\n\t\t\t\tif (this.ep[j] >= this.ep[i])\n\t\t\t\t\tthis.ep[j]++;\n\t\t\t}\n\t\t}\t\n\t}\n\t\n\tthis.getMid3 = function getMid3() {\n\t\tvar idxA = 0;\n\t\tvar idxB = 0;\n\t\tvar mask = 0;\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (this.ep[i] >= 9) {\n\t\t\t\tidxA += Cnk[i][r--];\n\t\t\t\tvar t = 1 << this.ep[i];\n\t\t\t\tidxB += bitCount(mask & (t - 1)) * fact[2-r];\n\t\t\t\tmask |= t;\n\t\t\t}\n\t\t}\n\t\treturn (idxA * 6 + idxB);\n\t}\n\t\n\tthis.setMid3 = function setMid3(idxA) {\n\t\tvar edge = perm3[idxA % 6];\n\t\tidxA = ~~(idxA / 6);\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (idxA >= Cnk[i][r]) {\n\t\t\t\tidxA -= Cnk[i][r--];\n\t\t\t\tthis.ep[i] = edge[2-r];\n\t\t\t} else {\n\t\t\t\tthis.ep[i] = (8-i+r);\n\t\t\t}\n\t\t}\t\n\t}\n\t\n\tthis.getURtoUL = function getURtoUL() {\n\t\tvar idxA = 0;\n\t\tvar idxB = 0;\n\t\tvar mask = 0;\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (this.ep[i] <= 2) {\n\t\t\t\tidxA += Cnk[i][r--];\n\t\t\t\tvar t = 1 << this.ep[i];\n\t\t\t\tidxB += bitCount(mask & (t - 1)) * fact[2-r];\n\t\t\t\tmask |= t;\n\t\t\t}\n\t\t}\n\t\treturn (idxA * 6 + idxB);\t\n\t}\n\n\tthis.getDRtoDL = function getDRtoDL() {\n\t\tvar idxA = 0;\n\t\tvar idxB = 0;\n\t\tvar mask = 0;\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (4 <= this.ep[i] && this.ep[i] <= 6) {\n\t\t\t\tidxA += Cnk[i][r--];\n\t\t\t\tvar t = 1 << this.ep[i];\n\t\t\t\tidxB += bitCount(mask & (t - 1)) * fact[2-r];\n\t\t\t\tmask |= t;\n\t\t\t}\n\t\t}\n\t\treturn (idxA * 6 + idxB);\t\n\t}\t\n\n\tthis.setEdgePerm = function setEdgePerm(idx) {\n\t\tthis.ep[11] = 0;\n\t\tfor (var i=10; i>=0; i--) {\n\t\t\tthis.ep[i] = (idx % (12-i));\n\t\t\tidx = ~~(idx/(12-i));\n\t\t\tfor (var j=i+1; j<12; j++) {\n\t\t\t\tif (this.ep[j] >= this.ep[i])\n\t\t\t\t\tthis.ep[j]++;\n\t\t\t}\n\t\t}\t\t\t\n\t}\n\t\n\tthis.getEdgePerm = function getEdgePerm() {\n\t\tvar m = (1 << this.ep[11]);\t\t\n\t\tvar idx = 0;\n\t\tfor (var i=10; i>=0; --i) {\n\t\t\tvar t = 1 << this.ep[i];\n\t\t\tidx += bitCount(m & (t - 1)) * fact[11-i];\n\t\t\tm |= t;\n\t\t}\n\t\treturn idx;\t\t\n\t}\n\n\tthis.getCPermSym = function getCPermSym() {\n\t\tif (EPermR2S != null) {\n\t\t\tvar idx = EPermR2S[get8Perm(this.cp)];\n\t\t\tidx ^= e2c[idx&0x0f];\n\t\t\treturn idx;\n\t\t}\n\t\tfor (var k=0; k<16; k++) {\n\t\t\tCornConjugate(this, SymInv[k], temps);\n\t\t\tvar idx = binarySearch(CPermS2R, get8Perm(temps.cp));\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 4) | k);\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\t\n\tthis.getEPermSym = function getEPermSym() {\t\n\t\tif (EPermR2S != null) {\n\t\t\treturn EPermR2S[get8Perm(this.ep)];\n\t\t}\n\t\tfor (var k=0; k<16; k++) {\n\t\t\tEdgeConjugate(this, SymInv[k], temps);\n\t\t\tvar idx = binarySearch(EPermS2R, get8Perm(temps.ep));\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 4) | k);\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\t\n\n\tthis.URFConjugate = function URFConjugate() {\n\t\tCornMult(urf2, this, temps);\n\t\tCornMult(temps, urf1, this);\t\t\n\t\tEdgeMult(urf2, this, temps);\n\t\tEdgeMult(temps, urf1, this);\t\t    \t\t\n\t}\n\t\n\tthis.invCubieCube = function invCubieCube() {\n\t\tfor (var edge=0; edge<12; edge++)\n\t\t\ttemps.ep[this.ep[edge]] = edge;\n\t\tfor (var edge=0; edge<12; edge++)\n\t\t\ttemps.eo[edge] = this.eo[temps.ep[edge]];\n\t\tfor (var corn=0; corn<8; corn++)\n\t\t\ttemps.cp[this.cp[corn]] = corn;\n\t\tfor (var corn=0; corn<8; corn++) {\n\t\t\tvar ori = this.co[temps.cp[corn]];\n\t\t\ttemps.co[corn] = -ori;\n\t\t\tif (temps.co[corn] < 0)\n\t\t\t\ttemps.co[corn] += 3;\n\t\t}\n\t\tthis.copy(temps);\n\t}\n\n\n\tthis.init = function init(cperm, twist, eperm, flip) {\n\t\tset8Perm(this.cp, cperm);\n\t\tthis.setTwist(twist);\n\t\tthis.setEdgePerm(eperm);\n\t\tthis.setFlip(flip);\n\t}\n\t\n\tthis.copy = function copy(c) {\n\t\tfor (var i=0; i<8; i++) {\n\t\t\tthis.cp[i] = c.cp[i];\n\t\t\tthis.co[i] = c.co[i];\n\t\t}\n\t\tfor (var i = 0; i < 12; i++) {\n\t\t\tthis.ep[i] = c.ep[i];\n\t\t\tthis.eo[i] = c.eo[i];\n\t\t}\n\t}\n}\n\nconst cctemp = new CubieCube();\nconst temps = new CubieCube();\n\nfunction set8Perm(arr, idx) {\n\tvar val = 0x76543210;\n\tfor (var i=0; i<7; i++) {\n\t\tvar p = fact[7-i];\n\t\tvar v = ~~(idx / p);\n\t\tidx %= p;\n\t\tv <<= 2;\n\t\tarr[i] = ((val >> v) & 7);\n\t\tvar m = (1 << v) - 1;\n\t\tval = (val & m) + ((val >> 4) & ~m);\n\t}\n\tarr[7] = val;\n}\n\nfunction get8Perm(arr) {\n\tvar idx = 0;\n\tvar val = 0x76543210;\n\tfor (var i=0; i<7; i++) {\n\t\tvar v = arr[i] << 2;\n\t\tidx = (8 - i) * idx + ((val >> v) & 7);\n\t\tval -= 0x11111110 << v;\n\t}\n\treturn idx;\t\n}\n\nfunction CornMult(a, b, prod) {\n\tfor (var corn=0; corn<8; corn++) {\n\t\tprod.cp[corn] = a.cp[b.cp[corn]];\n\t\tvar oriA = a.co[b.cp[corn]];\n\t\tvar oriB = b.co[corn];\n\t\tvar ori = oriA;\n\t\tori += (oriA<3) ? oriB : 3-oriB;\n\t\tori %= 3;\n\t\tif (oriA < 3 ^ oriB < 3) {\n\t\t\tori += 3;\n\t\t}\n\t\tprod.co[corn] = ori;\n\t}\n}\t\n\nfunction EdgeMult(a, b, prod) {\n\tfor (var ed=0; ed<12; ed++) {\n\t\tprod.ep[ed] = a.ep[b.ep[ed]];\n\t\tprod.eo[ed] = (b.eo[ed] ^ a.eo[b.ep[ed]]);\n\t}\n}\n\nfunction CornConjugate(a, idx, b) {\n\tCornMult(CubeSym[SymInv[idx]], a, cctemp);\n\tCornMult(cctemp, CubeSym[idx], b);\t\t\n}\n\nfunction EdgeConjugate(a, idx, b) {\n\tEdgeMult(CubeSym[SymInv[idx]], a, cctemp);\n\tEdgeMult(cctemp, CubeSym[idx], b);\t\t\n}\n\nvar CubeSym = Array(16);\nvar moveCube = Array(18);\nvar SymInv = Array(16);\nvar SymMult = Array(16);\nvar SymMove = Array(16);\nvar Sym8Mult = Array(8);\nvar Sym8Move = Array(8);\nvar Sym8MultInv = Array(8);\nvar SymMoveUD = Array(16);\nvar FlipS2R = Array(336);\nvar TwistS2R = Array(324);\nvar CPermS2R = Array(2768);\nvar EPermS2R = CPermS2R;\nvar FlipR2S = Array(2048);\nvar TwistR2S = Array(2187);\nvar EPermR2S = createArray(40320);\nfor (var i=0; i<40320; i++) {\n\tEPermR2S[i] = 0;\n}\nvar MtoEPerm = Array(40320);\nvar merge = Array(56);\nvar e2c = [0, 0, 0, 0, 1, 3, 1, 3, 1, 3, 1, 3, 0, 0, 0, 0];\nconst urf1 = new CubieCube();\nurf1.init(2531, 1373, 67026819, 1877);\nconst urf2 = new CubieCube();\nurf2.init(2089, 1906, 322752913, 255);\n\n\nfunction CubieInit() {\n\tvar mc = Array(6);\n\tmc[0] = new CubieCube();\n\tmc[0].init(15120, 0, 119750400, 0);\n\tmc[1] = new CubieCube();\n\tmc[1].init(21021, 1494, 323403417, 0);\n\tmc[2] = new CubieCube();\n\tmc[2].init(8064, 1236, 29441808, 802);\n\tmc[3] = new CubieCube();\n\tmc[3].init(9, 0, 5880, 0);\n\tmc[4] = new CubieCube();\n\tmc[4].init(1230, 412, 2949660, 0);\n\tmc[5] = new CubieCube();\n\tmc[5].init(224, 137, 328552, 1160);\n\tfor (var m=0; m<6; m++) {\n\t\tmoveCube[m*3] = mc[m];\n\t\tfor (var p=0; p<2; p++) {\n\t\t\tmoveCube[m*3+p+1] = new CubieCube();\n\t\t\tEdgeMult(moveCube[m*3+p], mc[m], moveCube[m*3+p+1]);\n\t\t\tCornMult(moveCube[m*3+p], mc[m], moveCube[m*3+p+1]);\n\t\t}\n\t}\n\tvar c = new CubieCube();\n\tvar d = new CubieCube();\n\tvar temp;\n\tvar f2 = new CubieCube();\n\tf2.init(28783, 0, 259268407, 0);\n\tvar u4 = new CubieCube();\n\tu4.init(15138, 0, 119765538, 1792);\n\tvar lr2 = new CubieCube();\n\tlr2.init(5167, 0, 83473207, 0);\n\tlr2.co = [ 3, 3, 3, 3, 3, 3, 3, 3 ];\n\tfor (var i=0; i<16; i++) {\n\t\tSymMult[i] = Array(16);\n\t\tSymMove[i] = Array(18);\n\t\tSymMoveUD[i] = Array(10);\n\t\tCubeSym[i] = new CubieCube();\n\t\tCubeSym[i].copy(c);\n\t\tCornMult(c, u4, d);\n\t\tEdgeMult(c, u4, d);\n\t\ttemp = d;\td = c;\tc = temp;\n\t\tif (i % 4 == 3) {\n\t\t\tCornMult(c, lr2, d);\n\t\t\tEdgeMult(c, lr2, d);\n\t\t\ttemp = d;\td = c;\tc = temp;\t\t\t\t\n\t\t}\n\t\tif (i % 8 == 7) {\n\t\t\tCornMult(c, f2, d);\n\t\t\tEdgeMult(c, f2, d);\n\t\t\ttemp = d;\td = c;\tc = temp;\n\t\t}\n\t}\n\n\tfor (var j=0; j<16; j++) {\n\t\tfor (var k=0; k<16; k++) {\n\t\t\tCornMult(CubeSym[j], CubeSym[k], c);\n\t\t\tif (c.cp[0] == 0 && c.cp[1] == 1 && c.cp[2] == 2) {\n\t\t\t\tSymInv[j] = k;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tfor (var i=0; i<16; i++) {\n\t\tfor (var j=0; j<16; j++) {\n\t\t\tCornMult(CubeSym[i], CubeSym[j], c);\n\t\t\tfor (var k=0; k<16; k++) {\n\t\t\t\tif (CubeSym[k].cp[0] == c.cp[0] && CubeSym[k].cp[1] == c.cp[1] && CubeSym[k].cp[2] == c.cp[2]) {\n\t\t\t\t\tSymMult[i][j] = k;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (var j=0; j<18; j++) {\n\t\tfor (var s=0; s<16; s++) {\n\t\t\tCornConjugate(moveCube[j], SymInv[s], c);\n\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\tvar found = 1;\n\t\t\t\tfor (var i=0; i<8; i++) {\n\t\t\t\t\tif (c.cp[i] != moveCube[m].cp[i] || c.co[i] != moveCube[m].co[i]) {\n\t\t\t\t\t\tfound = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (found) {\n\t\t\t\t\tSymMove[s][j] = m;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (var j=0; j<10; j++) {\n\t\tfor (var s=0; s<16; s++) {\n\t\t\tSymMoveUD[s][j] = std2ud[SymMove[s][ud2std[j]]];\n\t\t}\n\t}\n\tfor (var j=0; j<8; j++) {\n\t\tSym8Mult[j] = Array(8);\n\t\tSym8Move[j] = Array(18);\n\t\tSym8MultInv[j] = Array(8);\n\t\tfor (var s=0; s<8; s++) {\n\t\t\tSym8Mult[j][s] = (SymMult[j<<1][s<<1]>>>1);\n\t\t}\n\t}\n\tfor (var j=0; j<18; j++) {\n\t\tfor (var s=0; s<8; s++) {\n\t\t\tSym8Move[s][j] = SymMove[s<<1][j];\n\t\t}\n\t}\n\tfor (var j=0; j<8; j++) {\n\t\tfor (var s=0; s<8; s++) {\n\t\t\tSym8MultInv[j][s] = Sym8Mult[j][SymInv[s<<1]>>1];\n\t\t}\n\t}\n\n\tconst occ = new Array(1260);\n\n\tvar count = 0;\n\tfor (var i=0; i<64; occ[i++] = 0);\n\n\tfor (var i=0; i<2048; i++) {\n\t\tif ((occ[i>>>5]&(1<<(i&0x1f))) == 0) {\n\t\t\tc.setFlip(i);\n\t\t\tfor (var s=0; s<16; s+=2) {\n\t\t\t\tEdgeConjugate(c, s, d);\n\t\t\t\tvar idx = d.getFlip();\n\t\t\t\tocc[idx>>>5] |= 1<<(idx&0x1f);\n\t\t\t\tFlipR2S[idx] = ((count << 3) | (s >>> 1));\n\t\t\t}\n\t\t\tFlipS2R[count++] = i;\n\t\t}\n\t}\n//\talert(count);\n\tcount = 0;\n\tfor (var i=0; i<69; occ[i++] = 0);\n\tfor (var i=0; i<2187; i++) {\n\t\tif ((occ[i>>>5]&(1<<(i&0x1f))) == 0) {\n\t\t\tc.setTwist(i);\n\t\t\tfor (var s=0; s<16; s+=2) {\n\t\t\t\tCornConjugate(c, s, d);\n\t\t\t\tvar idx = d.getTwist();\n\t\t\t\tocc[idx>>>5] |= 1<<(idx&0x1f);\n\t\t\t\tTwistR2S[idx] =  ((count << 3) | (s >>> 1));\n\t\t\t}\n\t\t\tTwistS2R[count++] = i;\n\t\t}\n\t}\n//\talert(count);\n\n\tvar mask = Array(56);\n\tfor (var i=0; i<56; i++) {\n\t\tmask[i] = Array(2);\n\t\tmerge[i] = Array(56);\n\t}\n\tfor (var i=0; i<40320; i++) {\n\t\tset8Perm(c.ep, i);\n\t\tvar a = ~~(c.getURtoUL() / 6);\n\t\tvar b = ~~(c.getDRtoDL() / 6);\n\t\tmask[a][b>>>5] |= 1 << (b&0x1f);\n\t}\n\t\n\tfor (var i=0; i<56; i++) {\n\t\tcount = 0;\n\t\tfor (var j=0; j<56; j++) {\n\t\t\tif ((mask[i][j>>>5]&(1<<(j&0x1f))) != 0) {\n\t\t\t\tmerge[i][j] = count++;\n\t\t\t}\n\t\t}\n\t}\n\tcount = 0;\n\tfor (var i=0; i<1260; occ[i++] = 0);\n\tfor (var i=0; i<40320; i++) {\n\t\tif ((occ[i>>>5]&(1<<(i&0x1f))) == 0) {\n\t\t\tset8Perm(c.ep, i);\n\t\t\tfor (var s=0; s<16; s++) {\n\t\t\t\tEdgeConjugate(c, s, d);\n\t\t\t\tvar idx = get8Perm(d.ep);\n\t\t\t\tocc[idx>>>5] |= 1<<(idx&0x1f);\n\t\t\t\tvar a = d.getURtoUL();\n\t\t\t\tvar b = d.getDRtoDL();\n\t\t\t\tvar m = (merge[~~(a/6)][~~(b/6)] * 4032 + a * 12 + b % 6 * 2 + get8Parity(idx));\n\t\t\t\tMtoEPerm[m] = (count << 4 | s);\n\t\t\t\tEPermR2S[idx] = (count << 4 | s);\n\t\t\t}\n\t\t\tEPermS2R[count++] = i;\n\t\t}\n\t}\n}\n\nvar UDSliceMove = Array(495);//new char[495][18];\nvar TwistMove = Array(324);//new char[324][18];\nvar FlipMove = Array(336);//new char[336][18];\nvar UDSliceConj = Array(495);//new char[495][8];\nvar UDSliceTwistPrun = Array(495*324);//new byte[495 * 324];\nvar UDSliceFlipPrun = Array(495*336);//new byte[495 * 336];\n\t\nvar TwistFlipPrun = Array(336*324*8);//new byte[336 * 324 * 8];\n\t\n\t//phase1to2\nvar Mid3Move = Array(1320);//new char[1320][18];\nvar Mid32MPerm = Array(24);//new byte[24];\nvar CParity = Array(87);//new byte[2768/8];\n\n\t//phase2\nvar CPermMove = Array(2768);//new char[2768][18];\nvar EPermMove = Array(2768);//new char[2768][10];\nvar MPermMove = Array(24);//new byte[24][10];\nvar MPermConj = Array(24);//new byte[24][16];\nvar MCPermPrun = Array(24*2768);//new byte[24*2768];\nvar MEPermPrun = Array(24*2768);//new byte[24*2768];\n\n\nfunction CoordInit() {\n\tvar c = new CubieCube();\n\tvar d = new CubieCube();\n\tvar i, j;\n\tfor (i=0; i<2768; i++) {\n\t\tCPermMove[i] = Array(18);\n\t\tset8Perm(c.cp, CPermS2R[i]);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tCornMult(c, moveCube[j], d);\n\t\t\tCPermMove[i][j] = d.getCPermSym();\n\t\t}\n\t}\t\t\n\tfor (i=0; i<2768; i++) {\n\t\tEPermMove[i] = Array(10);\n\t\tset8Perm(c.ep, EPermS2R[i]);\n\t\tfor (j=0; j<10; j++) {\n\t\t\tEdgeMult(c, moveCube[ud2std[j]], d);\n\t\t\tEPermMove[i][j] = d.getEPermSym();\n\t\t}\n\t}\n\tfor (i=0; i<336; i++) {\n\t\tFlipMove[i] = Array(18);\n\t\tc.setFlip(FlipS2R[i]);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tEdgeMult(c, moveCube[j], d);\n\t\t\tFlipMove[i][j] = d.getFlipSym();\n\t\t}\n\t}\n\tfor (i=0; i<324; i++) {\n\t\tTwistMove[i] = Array(18);\n\t\tc.setTwist(TwistS2R[i]);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tCornMult(c, moveCube[j], d);\n\t\t\tTwistMove[i][j] = d.getTwistSym();\n\t\t}\n\t}\n\tfor (i=0; i<495; i++) {\n\t\tUDSliceMove[i] = Array(18);\n\t\tc.setUDSlice(i);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tEdgeMult(c, moveCube[j], d);\n\t\t\tUDSliceMove[i][j] = d.getUDSlice();\n\t\t}\n\t}\n\tfor (i=0; i<495; i++) {\n\t\tUDSliceConj[i] = Array(8);\n\t\tc.setUDSlice(i);\n\t\tfor (j=0; j<16; j+=2) {\n\t\t\tEdgeConjugate(c, SymInv[j], d);\n\t\t\tUDSliceConj[i][j>>>1] = d.getUDSlice();\n\t\t}\n\t}\n\tfor (i=0; i<1320; i++) {\n\t\tMid3Move[i] = Array(18);\n\t\tc.setMid3(i);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tEdgeMult(c, moveCube[j], d);\n\t\t\tMid3Move[i][j] = d.getMid3();\n\t\t}\n\t}\t\n\tfor (i=0; i<24; i++) {\n\t\tc.setMPerm(i);\n\t\tMid32MPerm[c.getMid3() % 24] = i;\n\t}\n\tfor (i=0; i<2768; i++) {\n\t\tCParity[i>>>3] |= (get8Parity(CPermS2R[i])) << (i & 7);\n\t}\n\tfor (i=0; i<24; i++) {\n\t\tMPermMove[i] = Array(10);\n\t\tc.setMPerm(i);\n\t\tfor (j=0; j<10; j++) {\n\t\t\tEdgeMult(c, moveCube[ud2std[j]], d);\n\t\t\tMPermMove[i][j] = d.getMPerm();\n\t\t}\n\t}\t\t\n\tfor (i=0; i<24; i++) {\n\t\tMPermConj[i] = Array(16);\n\t\tc.setMPerm(i);\n\t\tfor (j=0; j<16; j++) {\n\t\t\tEdgeConjugate(c, SymInv[j], d);\n\t\t\tMPermConj[i][j] = d.getMPerm();\n\t\t}\n\t}\n\t\n\tvar SymState = Array(324);\n\tfor (i=0; i<324; i++) {\n\t\tc.setTwist(TwistS2R[i]);\n\t\tfor (var j=0; j<8; j++) {\n\t\t\tCornConjugate(c, j<<1, d);\n\t\t\tif (binarySearch(TwistS2R, d.getTwist()) != 0xffff) {\n\t\t\t\tSymState[i] |= (1 << j);\n\t\t\t}\n\t\t}\n\t}\n\tvar SymStateF = Array(324);\n\tfor (i=0; i<336; i++) {\n\t\tc.setFlip(FlipS2R[i]);\n\t\tfor (var j=0; j<8; j++) {\n\t\t\tEdgeConjugate(c, j<<1, d);\n\t\t\tif (binarySearch(FlipS2R, d.getFlip()) != 0xffff) {\n\t\t\t\tSymStateF[i] |= (1 << j);\n\t\t\t}\n\t\t}\n\t}\t\t\n\tfor (i=0; i<336*324*8; i++) {\n\t\tTwistFlipPrun[i] = -1;\n\t}\n\tfor (i=0; i<8; i++) {\n\t\tTwistFlipPrun[i] = 0;\n\t}\n\tvar depth = 0;\n\tvar done = 8;\n\tvar inv;\n\tvar select;\n\tvar check;\n\t\n\twhile (done < 336*324*8) {\n\t\tinv = depth > 6;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<336*324*8; i++) {\n\t\t\tif (TwistFlipPrun[i] != select)\n\t\t\t\tcontinue;\n\t\t\tvar twist = ~~(i / 2688);\n\t\t\tvar flip = i % 2688;\n\t\t\tvar fsym = i & 7;\n\t\t\tflip >>>= 3;\n\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\tvar twistx = TwistMove[twist][m];\n\t\t\t\tvar tsymx = twistx & 7;\n\t\t\t\ttwistx >>>= 3;\n\t\t\t\tvar flipx = FlipMove[flip][Sym8Move[fsym][m]];\n\t\t\t\tvar fsymx = Sym8MultInv[Sym8Mult[flipx & 7][fsym]][tsymx];\n\t\t\t\tflipx >>>= 3;\n\t\t\t\tvar idx = twistx * 2688 + (flipx << 3 | fsymx);\n\t\t\t\tif (TwistFlipPrun[idx] == check) {\n\t\t\t\t\tdone++;\n\t\t\t\t\tif (inv) {\n\t\t\t\t\t\tTwistFlipPrun[i] = depth;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tTwistFlipPrun[idx] = depth;\n\t\t\t\t\t\tvar sym = SymState[twistx];\n\t\t\t\t\t\tvar symF = SymStateF[flipx];\n\t\t\t\t\t\tif (sym != 1 || symF != 1) {\n\t\t\t\t\t\t\tfor (var j=0; j<8; j++, symF >>= 1) {\n\t\t\t\t\t\t\t\tif ((symF & 1) == 1) {\n\t\t\t\t\t\t\t\t\tvar fsymxx = Sym8MultInv[fsymx][j];\n\t\t\t\t\t\t\t\t\tfor (var k=0; k<8; k++) {\n\t\t\t\t\t\t\t\t\t\tif ((sym & (1 << k)) != 0) {\n\t\t\t\t\t\t\t\t\t\t\tvar idxx = twistx * 2688 + (flipx << 3 | Sym8MultInv[fsymxx][k]);\n\t\t\t\t\t\t\t\t\t\t\tif (TwistFlipPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\t\tTwistFlipPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\n\tfor (i=0; i<495*324; i++) {\n\t\tUDSliceTwistPrun[i] = -1;\n\t}\n\tUDSliceTwistPrun[0] = 0;\n\tdepth = 0;\n\tdone = 1;\n\twhile (done < 495 * 324) {\n\t\tinv = depth > 6;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<495*324; i++) {\n\t\t\tif (UDSliceTwistPrun[i] == select) {\n\t\t\t\tvar slice = i % 495;\n\t\t\t\tvar twist = ~~(i / 495);\n\t\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\t\tvar twistx = TwistMove[twist][m];\n\t\t\t\t\tvar symx = twistx & 7;\n\t\t\t\t\tvar slicex = UDSliceConj[UDSliceMove[slice][m]][symx];\n\t\t\t\t\ttwistx >>>= 3;\n\t\t\t\t\tvar idx = twistx * 495 + slicex;\n\t\t\t\t\tif (UDSliceTwistPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tUDSliceTwistPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tUDSliceTwistPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymState[twistx];\n\t\t\t\t\t\t\tif (sym != 1) {\n\t\t\t\t\t\t\t\tfor (var j=1; j<8; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = twistx * 495 + UDSliceConj[slicex][j];\n\t\t\t\t\t\t\t\t\t\tif (UDSliceTwistPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tUDSliceTwistPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\t\t\n\n\tfor (i=0; i<495*336; i++) {\n\t\tUDSliceFlipPrun[i] = -1;\n\t}\n\tUDSliceFlipPrun[0] = 0;\n\tdepth = 0;\n\tdone = 1;\n\twhile (done < 495 * 336) {\n\t\tinv = depth > 6;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<495*336; i++) {\n\t\t\tif (UDSliceFlipPrun[i] == select) {\n\t\t\t\tvar slice = i % 495;\n\t\t\t\tvar flip = ~~(i / 495);\n\t\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\t\tvar flipx = FlipMove[flip][m];\n\t\t\t\t\tvar symx = flipx & 7;\n\t\t\t\t\tvar slicex = UDSliceConj[UDSliceMove[slice][m]][symx];\n\t\t\t\t\tflipx >>>= 3;\n\t\t\t\t\tvar idx = flipx * 495 + slicex;\n\t\t\t\t\tif (UDSliceFlipPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tUDSliceFlipPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tUDSliceFlipPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymStateF[flipx];\n\t\t\t\t\t\t\tif (sym != 1) {\n\t\t\t\t\t\t\t\tfor (var j=1; j<8; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = flipx * 495 + UDSliceConj[slicex][j];\n\t\t\t\t\t\t\t\t\t\tif (UDSliceFlipPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tUDSliceFlipPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tdepth++;\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\t\n\t\n\tSymState = Array(2768);\n\tfor (i=0; i<2768; i++) {\n\t\tset8Perm(c.ep, EPermS2R[i]);\n\t\tfor (j=1; j<16; j++) {\n\t\t\tEdgeConjugate(c, j, d);\n\t\t\tif (binarySearch(EPermS2R, get8Perm(d.ep)) != 0xffff) {\n\t\t\t\tSymState[i] |= (1 << j);\n\t\t\t}\n\t\t}\n\t}\n\tfor (i=0; i<24*2768; i++) {\n\t\tMEPermPrun[i] = -1;\n\t}\n\tMEPermPrun[0] = 0;\n\twhile (done < 24*2768) {\n\t\tinv = depth > 7;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<24*2768; i++) {\n\t\t\tif (MEPermPrun[i] == select) {\n\t\t\t\tvar mid = i % 24;\n\t\t\t\tvar edge = ~~(i / 24);\n\t\t\t\tfor (var m=0; m<10; m++) {\n\t\t\t\t\tvar edgex = EPermMove[edge][m];\n\t\t\t\t\tvar symx = edgex & 15;\n\t\t\t\t\tvar midx = MPermConj[MPermMove[mid][m]][symx];\n\t\t\t\t\tedgex >>>= 4;\n\t\t\t\t\tvar idx = edgex * 24 + midx;\n\t\t\t\t\tif (MEPermPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tMEPermPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tMEPermPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymState[edgex];\n\t\t\t\t\t\t\tif (sym != 0) {\n\t\t\t\t\t\t\t\tfor (j=1; j<16; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = edgex * 24 + MPermConj[midx][j];\n\t\t\t\t\t\t\t\t\t\tif (MEPermPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tMEPermPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\t\t\n\t\t\n\tfor (i=0; i<24*2768; i++) {\n\t\tMCPermPrun[i] = -1;\n\t}\n\tMCPermPrun[0] = 0;\n\tdepth = 0;\n\tdone = 1;\n\twhile (done < 24*2768) {\n\t\tinv = depth > 7;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<24*2768; i++) {\n\t\t\tif (MCPermPrun[i] == select) {\n\t\t\t\tvar mid = i % 24;\n\t\t\t\tvar corn = ~~(i / 24);\n\t\t\t\tfor (var m=0; m<10; m++) {\n\t\t\t\t\tvar cornx = CPermMove[corn][ud2std[m]];\n\t\t\t\t\tvar symx = (cornx & 15);\n\t\t\t\t\tvar midx = MPermConj[MPermMove[mid][m]][symx];\n\t\t\t\t\tcornx >>>= 4;\n\t\t\t\t\tvar idx = cornx * 24 + midx;\n\t\t\t\t\tif (MCPermPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tMCPermPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tMCPermPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymState[cornx];\n\t\t\t\t\t\t\tif (sym != 0) {\n\t\t\t\t\t\t\t\tfor (j=1; j<16; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = cornx * 24 + MPermConj[midx][j ^ e2c[j]];\n\t\t\t\t\t\t\t\t\t\tif (MCPermPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tMCPermPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\n}\t\t\t\t\t\n\nfunction randomCube() {\n\tvar eperm;\n\tvar cperm;\n\tdo {\n\t\teperm = ~~(Math.random() * 479001600);\n\t\tcperm = ~~(Math.random() * 40320);\n\t} while (((get8Parity(cperm) ^ get12Parity(eperm))) != 0);\n\tvar c = new CubieCube();\n\tc.init(cperm, ~~(Math.random() * 2187), eperm, ~~(Math.random() * 2048));\n\treturn c;\n}\n\nvar move = Array(31);\n\nvar corn = Array(20);\nvar csym = Array(20);\nvar mid3 = Array(20);\nvar e1 = Array(20);\nvar e2 = Array(20);\nvar urfidx;\n\nvar twist = Array(6);\nvar tsym = Array(6);\nvar flip = Array(6);\nvar fsym = Array(6);\nvar slice = Array(6);\nvar corn0 = Array(6);\nvar csym0 = Array(6);\nvar mid30 = Array(6);\nvar e10 = Array(6);\nvar e20 = Array(6);\nvar prun = Array(6);\n\nvar length1 = 0;\nvar maxlength2 = 0;\nvar sol = 999;\nvar valid1 = 0;\nvar valid2 = 0;\nvar solution = \"\";\nvar useSeparator = false;\n\nfunction Solve(c) {\n\tc.temps = new CubieCube();\n\tfor (var i=0; i<6; i++) {\n\t\ttwist[i] = c.getTwistSym();\n\t\ttsym[i] = twist[i] & 7;\n\t\ttwist[i] >>>= 3;\n\t\tflip[i] = c.getFlipSym();\n\t\tfsym[i] = flip[i] & 7;\n\t\tflip[i] >>>= 3;\n\t\tslice[i] = c.getUDSlice();\n\t\tcorn0[i] = c.getCPermSym();\n\t\tcsym0[i] = corn0[i] & 15;\n\t\tcorn0[i] >>>= 4;\n\t\tmid30[i] = c.getMid3();\n\t\te10[i] = c.getURtoUL();\n\t\te20[i] = c.getDRtoDL();\n\t\tprun[i] = Math.max(Math.max(UDSliceTwistPrun[twist[i] * 495 + UDSliceConj[slice[i]][tsym[i]]],\n\t\t\t\t\t\tUDSliceFlipPrun[flip[i] * 495 + UDSliceConj[slice[i]][fsym[i]]]),\n\t\t\t\t\t\tTwistFlipPrun[twist[i] * 2688 + (flip[i] << 3 | Sym8MultInv[fsym[i]][tsym[i]])]);\n\t\tc.URFConjugate();\n\t\tif (i==2) {\n\t\t\tc.invCubieCube();\n\t\t}\n\t}\n\tsolution = null;\n\tsol = 22;\n\tfor (length1=0; length1<sol; length1++) {\n\t\tmaxlength2 = Math.min(sol/2+1, sol-length1);\n\t\tfor (urfidx=0; urfidx<6; urfidx++) {\n\t\t\tcorn[0] = corn0[urfidx];\n\t\t\tcsym[0] = csym0[urfidx];\n\t\t\tmid3[0] = mid30[urfidx];\n\t\t\te1[0] = e10[urfidx];\n\t\t\te2[0] = e20[urfidx];\n\t\t\tif ((prun[urfidx] <= length1)\n\t\t\t\t\t&& phase1(twist[urfidx], tsym[urfidx], flip[urfidx], fsym[urfidx],\n\t\t\t\t\t\t\t\tslice[urfidx], length1, 18)) {\n\t\t\t\tif (solution == null) {\n\t\t\t\t\treturn \"Error 8\";\n\t\t\t\t} else {\n\t\t\t\t\treturn solution;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn \"Error 7\";\n}\n\nfunction phase1(twist, tsym, flip, fsym, slice, maxl, lm) {\n\tif (twist==0 && flip==0 && slice==0 && maxl < 5) {\n\t\treturn maxl == 0 && init2();\n\t}\n\tfor (var m=0; m<18; m++) {\n\t\tif (ckmv[lm][m]) {\n\t\t\tm+=2;\n\t\t\tcontinue;\n\t\t}\n\t\tvar slicex = UDSliceMove[slice][m];\n\t\tvar twistx = TwistMove[twist][Sym8Move[tsym][m]];\n\t\tvar tsymx = Sym8Mult[twistx & 7][tsym];\n\t\ttwistx >>>= 3;\n\t\tif (UDSliceTwistPrun[twistx * 495 + UDSliceConj[slicex][tsymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar flipx = FlipMove[flip][Sym8Move[fsym][m]];\n\t\tvar fsymx = Sym8Mult[flipx & 7][fsym];\n\t\tflipx >>>= 3;\n\t\tif (TwistFlipPrun[twistx * 2688 + (flipx << 3 | Sym8MultInv[fsymx][tsymx])] >= maxl\n\t\t\t\t||UDSliceFlipPrun[flipx * 495 + UDSliceConj[slicex][fsymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tmove[length1-maxl] = m;\n\t\tvalid1 = Math.min(valid1, length1-maxl);\n\t\tif (phase1(twistx, tsymx, flipx, fsymx, slicex, maxl-1, m)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction init2() {\n//\tif (System.currentTimeMillis() > timeOut) {\n//\t\treturn true;\n//\t}\n\tvalid2 = Math.min(valid2, valid1);\n\tfor (var i=valid1; i<length1; i++) {\n\t\tvar m = move[i];\n\t\tcorn[i+1] = CPermMove[corn[i]][SymMove[csym[i]][m]];\n\t\tcsym[i+1] = SymMult[corn[i+1] & 15][csym[i]];\n\t\tcorn[i+1] >>>= 4;\n\t\tmid3[i+1] = Mid3Move[mid3[i]][m];\n\t}\n\tvalid1 = length1;\n\tvar mid = Mid32MPerm[mid3[length1] % 24];\n\tvar prun = MCPermPrun[corn[length1] * 24 + MPermConj[mid][csym[length1]]];\n\tif (prun >= maxlength2) {\n\t\treturn false;\n\t}\n\tfor (var i=valid2; i<length1; i++) {\n\t\te1[i+1] = Mid3Move[e1[i]][move[i]];\n\t\te2[i+1] = Mid3Move[e2[i]][move[i]];\n\t}\n\tvalid2 = length1;\n\tvar cornx = corn[length1];\n\tvar ex = merge[~~(e1[length1]/6)][~~(e2[length1]/6)] * 4032\n\t\t\t\t + e1[length1] * 12 + e2[length1] % 6 * 2 + (((CParity[cornx>>>3]>>>(cornx&7))&1) ^ get4Parity(mid));\n\tvar edge = MtoEPerm[ex];\n\tvar esym = edge & 15;\n\tedge >>>= 4;\n\t\tprun = Math.max(MEPermPrun[edge * 24 + MPermConj[mid][esym]], prun);\n\tif (prun >= maxlength2) {\n\t\treturn false;\n\t}\n\t\tvar lm = length1==0 ? 10 : std2ud[~~(move[length1-1]/3)*3+1];\n\tfor (var i=prun; i<maxlength2; i++) {\n\t\tif (phase2(edge, esym, corn[length1], csym[length1], mid, i, length1, lm)) {\n\t\t\tsol = length1 + i;\n\t\t\tvar sb = \"\";\n\t\t\tvar urf = urfidx;\n//\t\t\tif (inverse) {\n\t\t\t\turf = (urf + 3) % 6;\n//\t\t\t}\n\t\t\tif (urf < 3) {\n\t\t\t\tfor (var s=0; s<length1; s++) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t\tfor (var s=length1; s<sol; s++) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (var s=sol-1; s>=length1; s--) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t\tfor (var s=length1-1; s>=0; s--) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t}\n\t\t\t// sb += \"(\" + sol + \"f)\";\n\t\t\tsolution = sb;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction phase2(edge, esym, corn, csym, mid, maxl, depth, lm) {\n\tif (edge==0 && corn==0 && mid==0) {\n\t\treturn true;\n\t}\n\tfor (var m=0; m<10; m++) {\n\t\tif (ckmv2[lm][m]) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar midx = MPermMove[mid][m];\n\t\tvar edgex = EPermMove[edge][SymMoveUD[esym][m]];\n\t\tvar esymx = SymMult[edgex & 15][esym];\n\t\tedgex >>>= 4;\n\t\tif (MEPermPrun[edgex * 24 + MPermConj[midx][esymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar cornx = CPermMove[corn][SymMove[csym][ud2std[m]]];\n\t\tvar csymx = SymMult[cornx & 15][csym];\n\t\tcornx >>>= 4;\n\t\tif (MCPermPrun[cornx * 24 + MPermConj[midx][csymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tmove[depth] = ud2std[m];\n\t\tif (phase2(edgex, esymx, cornx, csymx, midx, maxl-1, depth+1, m)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nvar initialized = false;\n\nfunction initialize() {\n\tif (initialized) {\n\t\treturn;\n\t}\n\tCubieInit();\n\tCoordInit();\n\tinitialized = true;\n}\n\nfunction solve(c) {\n\tinitialize();\n\tconst cc = new CubieCube();\n\tcc.cp = c.cp;\n\tcc.co = c.co;\n\tcc.ep = c.ep;\n\tcc.eo = c.eo;\n\treturn Solve(cc);\n};\n\nmodule.exports.initialize = initialize;\nmodule.exports.solve = solve;\nmodule.exports.randomCube = randomCube;\n"],"sourceRoot":""}